<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230831 12:02:47.337" rpa="false" schemaversion="4">
<suite id="s1" name="Password-Auth" source="/home/ubutt/robot-dev/scratch/password-auth.robot">
<test id="s1-t1" name="Check the password-auth file has been updated" line="10">
<kw name="Create Dictionary" library="BuiltIn">
<var>${check_dict}</var>
<arg>auth.*pam_unix.so={if not "without-nullok":nullok} try_first_pass</arg>
<arg>password.*pam_pwquality.so=try_first_pass local_users_only</arg>
<arg>password.*pam_unix.so sha512 shadow={if not "without-nullok":nullok} try_first_pass use_authtok</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230831 12:02:47.380" level="INFO">${check_dict} = {'auth.*pam_unix.so': '{if not "without-nullok":nullok} try_first_pass', 'password.*pam_pwquality.so': 'try_first_pass local_users_only', 'password.*pam_unix.so sha512 shadow': '{if not "without-nullo...</msg>
<status status="PASS" starttime="20230831 12:02:47.379" endtime="20230831 12:02:47.380"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${password_auth}</var>
<arg>/etc/authselect/custom/sssd-vf/password-auth</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 12:02:47.381" level="INFO" html="true">Getting file '&lt;a href="file:///etc/authselect/custom/sssd-vf/password-auth"&gt;/etc/authselect/custom/sssd-vf/password-auth&lt;/a&gt;'.</msg>
<msg timestamp="20230831 12:02:47.381" level="INFO">${password_auth} = auth        required                                     pam_env.so
auth        required                                     pam_faildelay.so delay=2000000
auth        required                        ...</msg>
<status status="PASS" starttime="20230831 12:02:47.380" endtime="20230831 12:02:47.381"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230831 12:02:47.381" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230831 12:02:47.381" endtime="20230831 12:02:47.381"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{check_dict}</value>
<iter>
<var name="${key}">auth.*pam_unix.so</var>
<var name="${value}">{if not "without-nullok":nullok} try_first_pass</var>
<kw name="Log" library="BuiltIn">
<arg>${key} : ${value}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.382" level="INFO">auth.*pam_unix.so : {if not "without-nullok":nullok} try_first_pass</msg>
<status status="PASS" starttime="20230831 12:02:47.382" endtime="20230831 12:02:47.382"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${password_auth}</arg>
<arg>\\s?${key}\\s?(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 12:02:47.383" level="INFO">${matches} = ['{if not "without-nullok":nullok}']</msg>
<status status="PASS" starttime="20230831 12:02:47.383" endtime="20230831 12:02:47.383"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${len}</var>
<arg>${matches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230831 12:02:47.383" level="INFO">Length is 1</msg>
<msg timestamp="20230831 12:02:47.384" level="INFO">${len} = 1</msg>
<status status="PASS" starttime="20230831 12:02:47.383" endtime="20230831 12:02:47.384"/>
</kw>
<if>
<branch type="IF" condition="${len} &gt; 0">
<kw name="Log" library="BuiltIn">
<arg>Match Found match ${key} : ${matches}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.384" level="INFO">Match Found match auth.*pam_unix.so : ['{if not "without-nullok":nullok}']</msg>
<status status="PASS" starttime="20230831 12:02:47.384" endtime="20230831 12:02:47.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${matches[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.385" level="INFO">{if not "without-nullok":nullok}</msg>
<status status="PASS" starttime="20230831 12:02:47.384" endtime="20230831 12:02:47.385"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '${matches[0]}'">
<kw name="Log" library="BuiltIn">
<arg>${key} Configured as expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.386" endtime="20230831 12:02:47.386"/>
</kw>
<status status="NOT RUN" starttime="20230831 12:02:47.385" endtime="20230831 12:02:47.386"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>${key} Not configured as expected</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.386" level="INFO">auth.*pam_unix.so Not configured as expected</msg>
<status status="PASS" starttime="20230831 12:02:47.386" endtime="20230831 12:02:47.386"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230831 12:02:47.386" endtime="20230831 12:02:47.386"/>
</kw>
<status status="PASS" starttime="20230831 12:02:47.386" endtime="20230831 12:02:47.387"/>
</branch>
<status status="PASS" starttime="20230831 12:02:47.385" endtime="20230831 12:02:47.387"/>
</if>
<status status="PASS" starttime="20230831 12:02:47.384" endtime="20230831 12:02:47.387"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Match found for : ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.387" endtime="20230831 12:02:47.387"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.387" endtime="20230831 12:02:47.387"/>
</kw>
<status status="NOT RUN" starttime="20230831 12:02:47.387" endtime="20230831 12:02:47.387"/>
</branch>
<status status="PASS" starttime="20230831 12:02:47.384" endtime="20230831 12:02:47.387"/>
</if>
<status status="PASS" starttime="20230831 12:02:47.382" endtime="20230831 12:02:47.387"/>
</iter>
<iter>
<var name="${key}">password.*pam_pwquality.so</var>
<var name="${value}">try_first_pass local_users_only</var>
<kw name="Log" library="BuiltIn">
<arg>${key} : ${value}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.387" level="INFO">password.*pam_pwquality.so : try_first_pass local_users_only</msg>
<status status="PASS" starttime="20230831 12:02:47.387" endtime="20230831 12:02:47.387"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${password_auth}</arg>
<arg>\\s?${key}\\s?(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 12:02:47.388" level="INFO">${matches} = ['local_users_only']</msg>
<status status="PASS" starttime="20230831 12:02:47.388" endtime="20230831 12:02:47.388"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${len}</var>
<arg>${matches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230831 12:02:47.388" level="INFO">Length is 1</msg>
<msg timestamp="20230831 12:02:47.389" level="INFO">${len} = 1</msg>
<status status="PASS" starttime="20230831 12:02:47.388" endtime="20230831 12:02:47.389"/>
</kw>
<if>
<branch type="IF" condition="${len} &gt; 0">
<kw name="Log" library="BuiltIn">
<arg>Match Found match ${key} : ${matches}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.389" level="INFO">Match Found match password.*pam_pwquality.so : ['local_users_only']</msg>
<status status="PASS" starttime="20230831 12:02:47.389" endtime="20230831 12:02:47.389"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${matches[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.390" level="INFO">local_users_only</msg>
<status status="PASS" starttime="20230831 12:02:47.389" endtime="20230831 12:02:47.390"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '${matches[0]}'">
<kw name="Log" library="BuiltIn">
<arg>${key} Configured as expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.391" endtime="20230831 12:02:47.391"/>
</kw>
<status status="NOT RUN" starttime="20230831 12:02:47.390" endtime="20230831 12:02:47.391"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>${key} Not configured as expected</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.391" level="INFO">password.*pam_pwquality.so Not configured as expected</msg>
<status status="PASS" starttime="20230831 12:02:47.391" endtime="20230831 12:02:47.391"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230831 12:02:47.391" endtime="20230831 12:02:47.391"/>
</kw>
<status status="PASS" starttime="20230831 12:02:47.391" endtime="20230831 12:02:47.392"/>
</branch>
<status status="PASS" starttime="20230831 12:02:47.390" endtime="20230831 12:02:47.392"/>
</if>
<status status="PASS" starttime="20230831 12:02:47.389" endtime="20230831 12:02:47.392"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Match found for : ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.392" endtime="20230831 12:02:47.392"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.392" endtime="20230831 12:02:47.392"/>
</kw>
<status status="NOT RUN" starttime="20230831 12:02:47.392" endtime="20230831 12:02:47.392"/>
</branch>
<status status="PASS" starttime="20230831 12:02:47.389" endtime="20230831 12:02:47.392"/>
</if>
<status status="PASS" starttime="20230831 12:02:47.387" endtime="20230831 12:02:47.392"/>
</iter>
<iter>
<var name="${key}">password.*pam_unix.so sha512 shadow</var>
<var name="${value}">{if not "without-nullok":nullok} try_first_pass use_authtok</var>
<kw name="Log" library="BuiltIn">
<arg>${key} : ${value}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.392" level="INFO">password.*pam_unix.so sha512 shadow : {if not "without-nullok":nullok} try_first_pass use_authtok</msg>
<status status="PASS" starttime="20230831 12:02:47.392" endtime="20230831 12:02:47.392"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${password_auth}</arg>
<arg>\\s?${key}\\s?(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 12:02:47.393" level="INFO">${matches} = ['{if not "without-nullok":nullok} use_authtok']</msg>
<status status="PASS" starttime="20230831 12:02:47.393" endtime="20230831 12:02:47.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${len}</var>
<arg>${matches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230831 12:02:47.393" level="INFO">Length is 1</msg>
<msg timestamp="20230831 12:02:47.394" level="INFO">${len} = 1</msg>
<status status="PASS" starttime="20230831 12:02:47.393" endtime="20230831 12:02:47.394"/>
</kw>
<if>
<branch type="IF" condition="${len} &gt; 0">
<kw name="Log" library="BuiltIn">
<arg>Match Found match ${key} : ${matches}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.394" level="INFO">Match Found match password.*pam_unix.so sha512 shadow : ['{if not "without-nullok":nullok} use_authtok']</msg>
<status status="PASS" starttime="20230831 12:02:47.394" endtime="20230831 12:02:47.394"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${matches[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.395" level="INFO">{if not "without-nullok":nullok} use_authtok</msg>
<status status="PASS" starttime="20230831 12:02:47.394" endtime="20230831 12:02:47.395"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == '${matches[0]}'">
<kw name="Log" library="BuiltIn">
<arg>${key} Configured as expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.395" endtime="20230831 12:02:47.396"/>
</kw>
<status status="NOT RUN" starttime="20230831 12:02:47.395" endtime="20230831 12:02:47.396"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>${key} Not configured as expected</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.396" level="INFO">password.*pam_unix.so sha512 shadow Not configured as expected</msg>
<status status="PASS" starttime="20230831 12:02:47.396" endtime="20230831 12:02:47.396"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230831 12:02:47.396" endtime="20230831 12:02:47.396"/>
</kw>
<status status="PASS" starttime="20230831 12:02:47.396" endtime="20230831 12:02:47.396"/>
</branch>
<status status="PASS" starttime="20230831 12:02:47.395" endtime="20230831 12:02:47.396"/>
</if>
<status status="PASS" starttime="20230831 12:02:47.394" endtime="20230831 12:02:47.396"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>No Match found for : ${key}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.397" endtime="20230831 12:02:47.397"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230831 12:02:47.397" endtime="20230831 12:02:47.397"/>
</kw>
<status status="NOT RUN" starttime="20230831 12:02:47.396" endtime="20230831 12:02:47.397"/>
</branch>
<status status="PASS" starttime="20230831 12:02:47.394" endtime="20230831 12:02:47.397"/>
</if>
<status status="PASS" starttime="20230831 12:02:47.392" endtime="20230831 12:02:47.397"/>
</iter>
<status status="PASS" starttime="20230831 12:02:47.382" endtime="20230831 12:02:47.397"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${error_list}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230831 12:02:47.397" level="INFO">['auth.*pam_unix.so', 'password.*pam_pwquality.so', 'password.*pam_unix.so sha512 shadow']</msg>
<status status="PASS" starttime="20230831 12:02:47.397" endtime="20230831 12:02:47.397"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Errors found in the following modules ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230831 12:02:47.398" level="INFO">Length is 3</msg>
<msg timestamp="20230831 12:02:47.398" level="FAIL">Errors found in the following modules ['auth.*pam_unix.so', 'password.*pam_pwquality.so', 'password.*pam_unix.so sha512 shadow']</msg>
<status status="FAIL" starttime="20230831 12:02:47.397" endtime="20230831 12:02:47.398"/>
</kw>
<doc>Read the /etc/authselect/custom/sssd-vf/password-auth file
and check that the values have been modified the check takes a dict with
the module search string and the expected configuration as a k,v Pairs
the check then searches the file for the key and evaluates the value</doc>
<status status="FAIL" starttime="20230831 12:02:47.378" endtime="20230831 12:02:47.398">Errors found in the following modules ['auth.*pam_unix.so', 'password.*pam_pwquality.so', 'password.*pam_unix.so sha512 shadow']</status>
</test>
<status status="FAIL" starttime="20230831 12:02:47.338" endtime="20230831 12:02:47.399"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Password-Auth">Password-Auth</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
