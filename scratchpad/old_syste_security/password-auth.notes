TIPS for substitution:

*** Variables ***
${my_dict}    Create Dictionary    Python=programming    Robot=automation    Framework=testing

*** Test Cases ***
Example Test
    ${language}    Set Variable    Python
    ${message}    Set Variable    The ${language} programming language is a part of ${my_dict[${language}]}.
    Log    ${message}
========================================================

Check Software Version
    ${major_minor_version}    Get Regexp Matches    ${software_version}    (\d+\.\d+)
    ${desired_version}    Set Variable    3.8

    Run Keyword If
    ...    Evaluate    ${major_minor_version[0]} >= ${desired_version}    Pass
    ...    ELSE    Fail    Software version is not greater than 3.8


Java JDK 8 or higher
Ant 1.9.3 or higher
Python 3.7
libz.so.1 version 1.2.7.1


=========================================================
PASSWORD-AUTH Modules altered:

pam_unix.so {if not "without-nullok":nullok}                            >>> pam_unix.so {if not "without-nullok":nullok} try_first_pass
pam_pwquality.so local_users_only                                       >>> pam_pwquality.so try_first_pass local_users_only
pam_unix.so sha512 shadow {if not "without-nullok":nullok} use_authtok  >>> pam_unix.so sha512 shadow {if not "without-nullok":nullok} try_first_pass use_authtok


so we search for each:
pam_unix.so
pam_pwquality.so
pam_unix.so sha512

and compare the string aftre with expected results

${check}    Create Dictionary   auth.*pam_unix.so={if not "without-nullok":nullok} try_first_pass    password.*pam_pwquality.so=try_first_pass local_users_only   password.*pam_unix.so sha512 shadow={if not "without-nullok":nullok} try_first_pass use_authtok  

Some modules appear multiple times and we need to seach for auth, password, session:



For the first diff this works:
1. Get Regexp Matches    ${password_auth}    auth.*pam_unix.so\\s(.*)    1
2. Get Regexp Matches    ${password_auth}    password.*pam_pwquality.so\\s(.*)    1
3. Get Regexp Matches    ${password_auth}    password.*pam_unix.so sha512 shadow\\s(.*)    1

SYSTEM-AUTH Modules altered:
auth.*pam_unix.so                       {if not "without-nullok":nullok} try_first_pass
password.*pam_pwquality.so              try_first_pass local_users_only enforce-for-root retry=3 remember=12
password.*pam_unix.so sha512 shadow     {if not "without-nullok":nullok} try_first_pass use_authtok remember=12






*** Test Cases ***
Check Required Libraries
    [Documentation]    Verify the presence of required shared libraries
    [Tags]    redhat
    ${libraries}    Create List    libpam.so.0    libexpat.so.1    libz.so.1
    ${os_version}    Run    cat /etc/redhat-release
    Run Keyword If    "'Red Hat 9' in ${os_version}"    Check Libraries Availability    ${libraries}
    Run Keyword If    "'Red Hat Enterprise Linux release 8.6' in ${os_version}"    Check Libraries Availability    ${libraries}

*** Keywords ***
Check Libraries Availability
    [Arguments]    ${libraries}
    :FOR    ${library}    IN    @{libraries}
    \    ${status}    Run Keyword And Return Status    Check Library Availability    ${library}
    \    Run Keyword If    not ${status}    Fail    ${library} is not available
    [Return]    ${status}

Check Library Availability
    [Arguments]    ${library}
    ${output}    Run    ldd /lib64/${library}    # Assuming the libraries are in /lib64
    Run Keyword If    "'not found' in ${output}"    Fail    ${library} is not available
