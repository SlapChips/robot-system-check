<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.11.5 on win32)" generated="20230830 17:36:26.504" rpa="false" schemaversion="4">
<suite id="s1" name="Robot Interactive Console" source="c:\Users\Ulfat\.vscode\extensions\robocorp.robotframework-lsp-1.11.0\src\robotframework_ls\vendored\robotframework_interactive\robot_interactive_console.robot">
<test id="s1-t1" name="Default Task/Test" line="5">
<kw name="Interpreter Main Loop" library="MainLoop">
<kw name="Get File">
<var>${login_defs}</var>
<arg>/etc/login.defs</arg>
<msg timestamp="20230830 17:36:26.734" level="FAIL">No keyword with name 'Get File' found. Did you mean:
    BuiltIn.Get Time</msg>
<status status="FAIL" starttime="20230830 17:36:26.734" endtime="20230830 17:36:26.734"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{login_defs_dict}</var>
<arg>PASS_MAX_DAYS=90</arg>
<arg>PASS_MIN_DAYS=1</arg>
<arg>PASS_MIN_LEN=5</arg>
<arg>PASS_WARN_AGE=5</arg>
<arg>dummy=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20230830 17:36:26.734" endtime="20230830 17:36:26.734"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20230830 17:36:26.734" endtime="20230830 17:36:26.734"/>
</kw>
<for flavor="IN">
<var>${param}</var>
<var>${expected_value}</var>
<value>&amp;{login_defs_dict}</value>
<iter>
<var name="${param}"/>
<var name="${expected_value}"/>
<kw name="Get Regexp Matches">
<var>${match}</var>
<arg>${login_defs}</arg>
<arg>(?m)^\\s?${param}\\s*(\\d+)</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20230830 17:36:26.735" endtime="20230830 17:36:26.735"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="NOT RUN" starttime="20230830 17:36:26.735" endtime="20230830 17:36:26.735"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" starttime="20230830 17:36:26.735" endtime="20230830 17:36:26.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230830 17:36:26.735" endtime="20230830 17:36:26.735"/>
</kw>
<status status="NOT RUN" starttime="20230830 17:36:26.734" endtime="20230830 17:36:26.735"/>
</iter>
<status status="NOT RUN" starttime="20230830 17:36:26.734" endtime="20230830 17:36:26.735"/>
</for>
<kw name="Log List">
<arg>${errors_list}</arg>
<status status="NOT RUN" starttime="20230830 17:36:26.735" endtime="20230830 17:36:26.735"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Errors found in values for ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="NOT RUN" starttime="20230830 17:36:26.735" endtime="20230830 17:36:26.735"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{modules}</var>
<arg>PASS_MAX_DAYS=90</arg>
<arg>PASS_MIN_DAYS=1</arg>
<arg>PASS_MIN_LEN=5</arg>
<arg>PASS_WARN_AGE=5</arg>
<arg>dummy=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 17:37:21.857" level="INFO">&amp;{modules} = { PASS_MAX_DAYS=90 | PASS_MIN_DAYS=1 | PASS_MIN_LEN=5 | PASS_WARN_AGE=5 | dummy=5 }</msg>
<status status="PASS" starttime="20230830 17:37:21.856" endtime="20230830 17:37:21.857"/>
</kw>
<for flavor="IN">
<var>${k}</var>
<var>${v}</var>
<value>&amp;{modules}</value>
<iter>
<var name="${k}">PASS_MAX_DAYS</var>
<var name="${v}">90</var>
<kw name="Log" library="BuiltIn">
<arg>${k}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.647" endtime="20230830 17:40:09.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${v}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<status status="PASS" starttime="20230830 17:40:09.647" endtime="20230830 17:40:09.648"/>
</iter>
<iter>
<var name="${k}">PASS_MIN_DAYS</var>
<var name="${v}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${k}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${v}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</iter>
<iter>
<var name="${k}">PASS_MIN_LEN</var>
<var name="${v}">5</var>
<kw name="Log" library="BuiltIn">
<arg>${k}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${v}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</iter>
<iter>
<var name="${k}">PASS_WARN_AGE</var>
<var name="${v}">5</var>
<kw name="Log" library="BuiltIn">
<arg>${k}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${v}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</iter>
<iter>
<var name="${k}">dummy</var>
<var name="${v}">5</var>
<kw name="Log" library="BuiltIn">
<arg>${k}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${v}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</kw>
<status status="PASS" starttime="20230830 17:40:09.648" endtime="20230830 17:40:09.648"/>
</iter>
<status status="PASS" starttime="20230830 17:40:09.647" endtime="20230830 17:40:09.648"/>
</for>
<kw name="Get Length" library="BuiltIn">
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 17:42:27.889" level="FAIL">Variable '${match}' not found.</msg>
<status status="FAIL" starttime="20230830 17:42:27.889" endtime="20230830 17:42:27.890"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${match}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 17:42:45.013" level="INFO">${match} = {}</msg>
<status status="PASS" starttime="20230830 17:42:45.012" endtime="20230830 17:42:45.013"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" starttime="20230830 17:42:47.553" endtime="20230830 17:42:47.553"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${match}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230830 17:55:12.223" level="FAIL">'{}' should not be empty.</msg>
<status status="FAIL" starttime="20230830 17:55:12.223" endtime="20230830 17:55:12.223"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>a=1</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<msg timestamp="20230830 17:55:49.620" level="FAIL">Keyword 'Collections.Set To Dictionary' expected at least 1 non-named argument, got 0.</msg>
<status status="FAIL" starttime="20230830 17:55:49.620" endtime="20230830 17:55:49.620"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${mathc}</arg>
<arg>a=1</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<msg timestamp="20230830 17:56:03.390" level="FAIL">Variable '${mathc}' not found. Did you mean:
    ${match}</msg>
<status status="FAIL" starttime="20230830 17:56:03.390" endtime="20230830 17:56:03.390"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${match}</arg>
<arg>a=1</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20230830 17:56:09.578" endtime="20230830 17:56:09.578"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${match}</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" starttime="20230830 17:56:12.659" endtime="20230830 17:56:12.660"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${match}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230830 17:56:44.621" level="INFO">${match} = []</msg>
<status status="PASS" starttime="20230830 17:56:44.621" endtime="20230830 17:56:44.621"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${match}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20230830 17:56:47.109" level="FAIL">'[]' should not be empty.</msg>
<status status="FAIL" starttime="20230830 17:56:47.108" endtime="20230830 17:56:47.109"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>$var_in_py_expr1 == $var_in_py_expr2</arg>
<arg>Keyword</arg>
<arg>@args</arg>
<arg>ELSE IF</arg>
<arg>condition_in_py_expr</arg>
<arg>Keyword</arg>
<arg>@args</arg>
<arg>ELSE</arg>
<arg>Keyword</arg>
<arg>@args</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230830 17:58:01.662" level="FAIL">Evaluating expression '$var_in_py_expr1 == $var_in_py_expr2' failed: Variable '$var_in_py_expr1' not found.</msg>
<status status="FAIL" starttime="20230830 17:58:01.661" endtime="20230830 17:58:01.662"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${command}</var>
<arg>'rpm -q '+ 'test'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230831 08:19:40.063" level="INFO">${command} = rpm -q test</msg>
<status status="PASS" starttime="20230831 08:19:40.063" endtime="20230831 08:19:40.063"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${list}</var>
<arg>which</arg>
<arg>tar</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230831 09:12:59.083" level="INFO">${list} = ['which', 'tar']</msg>
<status status="PASS" starttime="20230831 09:12:59.083" endtime="20230831 09:12:59.083"/>
</kw>
<kw name="Append To List" library="Collections">
<arg>list_</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<msg timestamp="20230831 09:23:29.279" level="FAIL">TypeError: Expected argument 1 to be a list or list-like, got string instead.</msg>
<status status="FAIL" starttime="20230831 09:23:29.279" endtime="20230831 09:23:29.279"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${password_auth}</var>
<arg>../configs/password-auth.orig</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 11:12:46.102" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: 'c:\\Users\\Ulfat\\GIT\\configs\\password-auth.orig'</msg>
<status status="FAIL" starttime="20230831 11:12:46.102" endtime="20230831 11:12:46.102"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${password_auth}</var>
<arg>password-auth.orig</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 11:13:08.986" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: 'c:\\Users\\Ulfat\\GIT\\robot-dev\\password-auth.orig'</msg>
<status status="FAIL" starttime="20230831 11:13:08.986" endtime="20230831 11:13:08.986"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${password_auth}</var>
<arg>./configs/password-auth.orig</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 11:13:19.696" level="INFO">${password_auth} = auth        required                                     pam_env.so
auth        required                                     pam_faildelay.so delay=2000000
auth        required                        ...</msg>
<status status="PASS" starttime="20230831 11:13:19.696" endtime="20230831 11:13:19.696"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${checks}</var>
<arg>pam_unix.so={if not "without-nullok":nullok} try_first_pass</arg>
<arg>pam_pwquality.so=try_first_pass local_users_only</arg>
<arg>pam_unix.so=sha512 shadow {if not "without-nullok":nullok} try_first_pass use_authtok</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230831 11:14:51.431" level="INFO">${checks} = {'pam_unix.so': 'sha512 shadow {if not "without-nullok":nullok} try_first_pass use_authtok', 'pam_pwquality.so': 'try_first_pass local_users_only'}</msg>
<status status="PASS" starttime="20230831 11:14:51.431" endtime="20230831 11:14:51.431"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>pam_unix.so.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:16:22.695" endtime="20230831 11:16:22.695"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>account.*pam_unix.so.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:17:46.962" endtime="20230831 11:17:46.962"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>auth.*pam_unix.so.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:18:29.174" endtime="20230831 11:18:29.174"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>auth.*pam_unix.so.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:18:32.796" endtime="20230831 11:18:32.796"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>auth.*pam_unix.so\\s(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:18:51.226" endtime="20230831 11:18:51.226"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>auth.*pam_unix.so\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:18:57.053" endtime="20230831 11:18:57.053"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>password.*pam_pwquality.so\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:24:27.568" endtime="20230831 11:24:27.568"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}password.*pam_unix.so sha512 shadow\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:25:49.514" endtime="20230831 11:25:49.514"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${password_auth}</arg>
<arg>password.*pam_unix.so sha512 shadow\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 11:26:03.173" endtime="20230831 11:26:03.173"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${check}</var>
<arg>auth.*pam_unix.so={if not "without-nullok":nullok} try_first_pass</arg>
<arg>password.*pam_pwquality.so=try_first_pass local_users_only</arg>
<arg>password.*pam_unix.so sha512 shadow={if not "without-nullok":nullok} try_first_pass use_authtok</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230831 11:29:12.425" level="INFO">${check} = {'auth.*pam_unix.so': '{if not "without-nullok":nullok} try_first_pass', 'password.*pam_pwquality.so': 'try_first_pass local_users_only', 'password.*pam_unix.so sha512 shadow': '{if not "without-nullo...</msg>
<status status="PASS" starttime="20230831 11:29:12.425" endtime="20230831 11:29:12.425"/>
</kw>
<kw name="Set Variable # Adding Over Commit Memmory Changes">
<var>${file}</var>
<msg timestamp="20230831 14:13:02.529" level="FAIL">No keyword with name 'Set Variable # Adding Over Commit Memmory Changes' found. Did you try using keyword 'BuiltIn.Set Variable' and forgot to use enough whitespace between keyword and arguments?</msg>
<status status="FAIL" starttime="20230831 14:13:02.529" endtime="20230831 14:13:02.529"/>
</kw>
<kw name="v.overcommit_memory = 2">
<status status="NOT RUN" starttime="20230831 14:13:02.530" endtime="20230831 14:13:02.530"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<arg>ncs.conf</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 14:13:26.108" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: 'c:\\Users\\Ulfat\\GIT\\robot-dev\\ncs.conf'</msg>
<status status="FAIL" starttime="20230831 14:13:26.108" endtime="20230831 14:13:26.108"/>
</kw>
<kw name="Get File scratchpad/ncs.conf.overcommit_memory">
<msg timestamp="20230831 14:14:30.842" level="FAIL">No keyword with name 'Get File scratchpad/ncs.conf.overcommit_memory' found.</msg>
<status status="FAIL" starttime="20230831 14:14:30.842" endtime="20230831 14:14:30.842"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<arg>scratchpad/ncs.conf.overcommit_memory</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 14:14:39.999" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: 'c:\\Users\\Ulfat\\GIT\\robot-dev\\scratchpad\\ncs.conf.overcommit_memory'</msg>
<status status="FAIL" starttime="20230831 14:14:39.999" endtime="20230831 14:14:39.999"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<arg>scratchpad/ncs_conf/ncs.conf.overcommit_memory</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" starttime="20230831 14:14:56.785" endtime="20230831 14:14:56.785"/>
</kw>
<kw name="Set Variable # Adding Over Commit Memmory Changes">
<var>${file}</var>
<msg timestamp="20230831 14:15:07.136" level="FAIL">No keyword with name 'Set Variable # Adding Over Commit Memmory Changes' found. Did you try using keyword 'BuiltIn.Set Variable' and forgot to use enough whitespace between keyword and arguments?</msg>
<status status="FAIL" starttime="20230831 14:15:07.136" endtime="20230831 14:15:07.136"/>
</kw>
<kw name="v.overcommit_memory = 2">
<status status="NOT RUN" starttime="20230831 14:15:07.138" endtime="20230831 14:15:07.138"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>scratchpad/ncs_conf/ncs.conf.overcommit_memory</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 14:15:21.535" level="INFO">${file} = # Adding Over Commit Memmory Changes
# This change keeps overcommit_memmory (OOM) disbaled across system reboots.

v.overcommit_memory = 2</msg>
<status status="PASS" starttime="20230831 14:15:21.535" endtime="20230831 14:15:21.535"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm\\.overcommit_memmory\\s?\=\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:15:51.101" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:15:51.101" endtime="20230831 14:15:51.102"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memmory\\s?\=\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:16:00.236" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:16:00.236" endtime="20230831 14:16:00.236"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm[.]overcommit_memmory\\s?\=\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:16:09.214" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:16:09.213" endtime="20230831 14:16:09.214"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memmory\\s?\=\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:16:15.987" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:16:15.987" endtime="20230831 14:16:15.987"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>.*overcommit_memmory\\s?\=\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:16:24.806" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:16:24.806" endtime="20230831 14:16:24.806"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memmory</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:16:36.934" level="INFO">${matches} = ['overcommit_memmory']</msg>
<status status="PASS" starttime="20230831 14:16:36.934" endtime="20230831 14:16:36.934"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:16:47.825" level="INFO">${matches} = ['overcommit_memmory (OOM) disbaled across system reboots.']</msg>
<status status="PASS" starttime="20230831 14:16:47.824" endtime="20230831 14:16:47.825"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>(?&lt;#)\\s?overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:17:23.872" level="FAIL">error: unknown extension ?&lt;# at position 1</msg>
<status status="FAIL" starttime="20230831 14:17:23.872" endtime="20230831 14:17:23.878"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>(&lt;?#)\\s?overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:17:38.002" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:17:38.002" endtime="20230831 14:17:38.002"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>(&lt;!#)\\s?overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:17:45.314" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:17:45.314" endtime="20230831 14:17:45.314"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>(?&lt;!#)\\s?overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:17:51.164" level="INFO">${matches} = [' overcommit_memmory (OOM) disbaled across system reboots.']</msg>
<status status="PASS" starttime="20230831 14:17:51.164" endtime="20230831 14:17:51.164"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:18:04.755" level="INFO">${matches} = ['overcommit_memmory (OOM) disbaled across system reboots.']</msg>
<status status="PASS" starttime="20230831 14:18:04.755" endtime="20230831 14:18:04.755"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memmory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:18:15.938" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:18:15.938" endtime="20230831 14:18:15.938"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:18:21.495" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230831 14:18:21.495" endtime="20230831 14:18:21.495"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:18:27.570" level="INFO">${matches} = ['overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:18:27.570" endtime="20230831 14:18:27.570"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:18:32.975" level="INFO">${matches} = ['overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:18:32.975" endtime="20230831 14:18:32.975"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:18:38.393" level="INFO">${matches} = ['overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:18:38.393" endtime="20230831 14:18:38.393"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>scratchpad/ncs_conf/ncs.conf.overcommit_memory</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 14:19:49.854" level="INFO">${file} = # Adding Over Commit Memory Changes
# This change keeps overcommit_memmory (OOM) disbaled across system reboots.

v.overcommit_memory = 2</msg>
<status status="PASS" starttime="20230831 14:19:49.854" endtime="20230831 14:19:49.854"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:19:52.373" level="INFO">${matches} = ['overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:19:52.373" endtime="20230831 14:19:52.373"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:20:09.632" level="INFO">${matches} = ['overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:20:09.632" endtime="20230831 14:20:09.632"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>scratchpad/ncs_conf/ncs.conf.overcommit_memory</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 14:20:12.017" level="INFO">${file} = # Adding Over Commit Memory Changes
# This change keeps overcommit_memmory (OOM) disbaled across system reboots.

vm.overcommit_memory = 2</msg>
<status status="PASS" starttime="20230831 14:20:12.017" endtime="20230831 14:20:12.017"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:20:13.614" level="INFO">${matches} = ['overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:20:13.614" endtime="20230831 14:20:13.614"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:20:22.255" level="INFO">${matches} = ['vm.overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:20:22.254" endtime="20230831 14:20:22.255"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memory\\s?=\\s?(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:20:44.080" level="INFO">${matches} = ['vm.overcommit_memory = 2']</msg>
<status status="PASS" starttime="20230831 14:20:44.080" endtime="20230831 14:20:44.080"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memory\\s?=\\s?(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:20:55.826" level="INFO">${matches} = ['2']</msg>
<status status="PASS" starttime="20230831 14:20:55.826" endtime="20230831 14:20:55.826"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memory\\s?=\\s?(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:22:16.987" level="INFO">${matches} = ['2']</msg>
<status status="PASS" starttime="20230831 14:22:16.987" endtime="20230831 14:22:16.987"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<arg>$(matches)</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" starttime="20230831 14:22:31.476" endtime="20230831 14:22:31.476"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<arg>'$(matches)'</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<status status="PASS" starttime="20230831 14:22:43.356" endtime="20230831 14:22:43.356"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${file}</arg>
<arg>vm.overcommit_memory\\s?=\\s?(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 14:22:47.721" level="INFO">${matches} = ['2']</msg>
<status status="PASS" starttime="20230831 14:22:47.721" endtime="20230831 14:22:47.721"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<arg>${matches}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" starttime="20230831 14:23:10.199" endtime="20230831 14:23:10.199"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>path</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 15:02:19.041" level="FAIL">FileNotFoundError: [Errno 2] No such file or directory: 'c:\\Users\\Ulfat\\GIT\\robot-dev\\path'</msg>
<status status="FAIL" starttime="20230831 15:02:19.040" endtime="20230831 15:02:19.041"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>scratchpad/ncs_conf/limits_ncs_conf</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 15:02:41.569" level="INFO">${file} = # Adding T-SDN System Limits needed for NSO

*    soft nproc 65535
*    hard nproc 65535
*    soft  nofile 65536
*    hard  nofile 65535
*    hard memlock 65536
*    soft memlock 65536
# *   soft meml...</msg>
<status status="PASS" starttime="20230831 15:02:41.568" endtime="20230831 15:02:41.569"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:03:35.210" level="FAIL">Variable '${key}' not found.</msg>
<status status="FAIL" starttime="20230831 15:03:35.209" endtime="20230831 15:03:35.210"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?soft nproc${TEST_DOCUMENTATION}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:03:53.569" endtime="20230831 15:03:53.569"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:04:04.302" endtime="20230831 15:04:04.302"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:04:12.312" endtime="20230831 15:04:12.312"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\\s|\*soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:04:44.916" level="FAIL">error: nothing to repeat at position 3</msg>
<status status="FAIL" starttime="20230831 15:04:44.915" endtime="20230831 15:04:44.916"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>[\\s|\*]soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:04:53.849" endtime="20230831 15:04:53.849"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>[\\s|\*]?soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:05:10.702" endtime="20230831 15:05:10.702"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>[\\s|\*]soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:05:22.516" endtime="20230831 15:05:22.516"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^[\\s|\*]soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:07:31.469" endtime="20230831 15:07:31.469"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)[\\s|\*]soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:07:49.804" endtime="20230831 15:07:49.805"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)[\\s|*]soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:08:09.538" endtime="20230831 15:08:09.538"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^[\\s|*]soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:08:19.213" endtime="20230831 15:08:19.213"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^*\\s?soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:08:39.419" level="FAIL">error: nothing to repeat at position 5</msg>
<status status="FAIL" starttime="20230831 15:08:39.419" endtime="20230831 15:08:39.420"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^*\s?soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:08:54.899" level="FAIL">error: nothing to repeat at position 5</msg>
<status status="FAIL" starttime="20230831 15:08:54.899" endtime="20230831 15:08:54.899"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:09:03.539" endtime="20230831 15:09:03.539"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\*\\s?soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:09:11.068" level="FAIL">error: nothing to repeat at position 5</msg>
<status status="FAIL" starttime="20230831 15:09:11.068" endtime="20230831 15:09:11.068"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\* soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:09:17.333" level="FAIL">error: nothing to repeat at position 5</msg>
<status status="FAIL" starttime="20230831 15:09:17.332" endtime="20230831 15:09:17.333"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^ soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:09:30.694" endtime="20230831 15:09:30.694"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\* soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:09:37.335" endtime="20230831 15:09:37.335"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\* soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:09:42.893" level="FAIL">error: nothing to repeat at position 5</msg>
<status status="FAIL" starttime="20230831 15:09:42.893" endtime="20230831 15:09:42.894"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\* soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:09:51.218" endtime="20230831 15:09:51.218"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:12:14.571" endtime="20230831 15:12:14.571"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:12:37.859" endtime="20230831 15:12:37.859"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:12:45.081" endtime="20230831 15:12:45.082"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:12:55.297" endtime="20230831 15:12:55.298"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc.*(\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:13:45.609" endtime="20230831 15:13:45.609"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc.*(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:13:56.161" endtime="20230831 15:13:56.161"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc\\s*${TEST_DOCUMENTATION}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:14:30.835" endtime="20230831 15:14:30.836"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:15:03.636" endtime="20230831 15:15:03.637"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:15:23.038" endtime="20230831 15:15:23.039"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?* soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:15:30.666" level="FAIL">error: multiple repeat at position 8</msg>
<status status="FAIL" starttime="20230831 15:15:30.665" endtime="20230831 15:15:30.666"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\* soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 15:15:37.552" level="FAIL">error: multiple repeat at position 8</msg>
<status status="FAIL" starttime="20230831 15:15:37.551" endtime="20230831 15:15:37.552"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n* soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:15:46.146" endtime="20230831 15:15:46.147"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\\* soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:15:53.346" endtime="20230831 15:15:53.347"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.* soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:16:02.076" endtime="20230831 15:16:02.077"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.\\s?soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:17:10.189" endtime="20230831 15:17:10.189"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:17:17.095" endtime="20230831 15:17:17.096"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?[*]soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:17:29.358" endtime="20230831 15:17:29.359"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?[\\*]soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:17:35.230" endtime="20230831 15:17:35.231"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:17:51.499" endtime="20230831 15:17:51.500"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\\n*soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:18:29.679" endtime="20230831 15:18:29.680"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?.*soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:18:39.313" endtime="20230831 15:18:39.314"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>soft nproc\\s*=?\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:19:19.275" endtime="20230831 15:19:19.276"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\\n*.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:19:47.784" endtime="20230831 15:19:47.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\\n*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:20:09.835" endtime="20230831 15:20:09.836"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\\n\*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:20:17.215" endtime="20230831 15:20:17.216"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\\n\\*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:20:21.738" endtime="20230831 15:20:21.738"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>n\\*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:20:28.263" endtime="20230831 15:20:28.263"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\n\\*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:20:33.618" endtime="20230831 15:20:33.619"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\n\\*\\s?soft nproc</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:20:53.014" endtime="20230831 15:20:53.014"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\n\\*.*soft nproc</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:21:09.754" endtime="20230831 15:21:09.755"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>\n\\*\\s+soft nproc</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:21:36.395" endtime="20230831 15:21:36.396"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:22:25.718" endtime="20230831 15:22:25.719"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s*?(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:23:11.237" endtime="20230831 15:23:11.237"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s*?(-?\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:23:30.273" endtime="20230831 15:23:30.273"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s*?(-?\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:31:45.857" endtime="20230831 15:31:45.858"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s*?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:32:00.209" endtime="20230831 15:32:00.209"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s*?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:34:12.346" endtime="20230831 15:34:12.346"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s?$soft proc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:34:24.935" endtime="20230831 15:34:24.935"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s?$soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:34:32.719" endtime="20230831 15:34:32.720"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+$soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:34:39.694" endtime="20230831 15:34:39.695"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+$soft nproc\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:35:29.513" endtime="20230831 15:35:29.513"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:35:54.377" endtime="20230831 15:35:54.378"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s+(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:36:02.387" endtime="20230831 15:36:02.387"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s?soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:36:42.416" endtime="20230831 15:36:42.416"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s?soft nproc\\s+(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:36:51.775" endtime="20230831 15:36:51.775"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 15:37:04.511" endtime="20230831 15:37:04.511"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${ulimit_dict}</var>
<arg>max locked size=65536</arg>
<arg>open files=65535</arg>
<arg>max user processes=65535</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230831 17:30:51.785" level="INFO">${ulimit_dict} = {'max locked size': '65536', 'open files': '65535', 'max user processes': '65535'}</msg>
<status status="PASS" starttime="20230831 17:30:51.784" endtime="20230831 17:30:51.785"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File">
<arg>${ulimit_dict}</arg>
<arg>./scratchpad/ncs_conf/ulimit_data</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<msg timestamp="20230831 17:34:24.079" level="FAIL">Keyword 'Get Regexp Matches For Key Value Pairs in File' missing named-only argument 'file_path'.</msg>
<status status="FAIL" starttime="20230831 17:34:24.079" endtime="20230831 17:34:24.079"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File">
<arg>${ulimit_dict}</arg>
<arg>scratchpad/ncs_conf/ulimit_data</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<msg timestamp="20230831 17:34:40.707" level="FAIL">Keyword 'Get Regexp Matches For Key Value Pairs in File' missing named-only argument 'file_path'.</msg>
<status status="FAIL" starttime="20230831 17:34:40.707" endtime="20230831 17:34:40.707"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File">
<arg>${ulimit_dict}</arg>
<arg>scratchpad/ncs_conf/ulimit_data</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<msg timestamp="20230831 17:35:01.229" level="FAIL">Keyword 'Get Regexp Matches For Key Value Pairs in File' missing named-only argument 'file_path'.</msg>
<status status="FAIL" starttime="20230831 17:35:01.229" endtime="20230831 17:35:01.229"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${filepath}</var>
<arg>scratchpad/ncs_conf/ulimit_data</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 17:35:36.487" level="INFO">${filepath} = scratchpad/ncs_conf/ulimit_data</msg>
<status status="PASS" starttime="20230831 17:35:36.487" endtime="20230831 17:35:36.487"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File">
<arg>${ulimit_dict}</arg>
<arg>${filepath}</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<msg timestamp="20230831 17:35:55.185" level="FAIL">Keyword 'Get Regexp Matches For Key Value Pairs in File' missing named-only argument 'file_path'.</msg>
<status status="FAIL" starttime="20230831 17:35:55.185" endtime="20230831 17:35:55.185"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File">
<arg>${ulimit_dict}</arg>
<arg>${filepath}</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<msg timestamp="20230831 17:36:09.105" level="FAIL">Keyword 'Get Regexp Matches For Key Value Pairs in File' missing named-only argument 'file_path'.</msg>
<status status="FAIL" starttime="20230831 17:36:09.105" endtime="20230831 17:36:09.105"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${ulimit_settings}</var>
<arg>ulimit -a</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230831 17:40:27.661" level="INFO">${ulimit_settings} = 'ulimit' is not recognized as an internal or external command,
operable program or batch file.</msg>
<status status="PASS" starttime="20230831 17:40:27.646" endtime="20230831 17:40:27.661"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${ulimit_settings}</var>
<arg>ps</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230831 17:40:42.848" level="INFO">${ulimit_settings} = 'ps' is not recognized as an internal or external command,
operable program or batch file.</msg>
<status status="PASS" starttime="20230831 17:40:42.834" endtime="20230831 17:40:42.848"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${ulimit_settings}</var>
<arg>top</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230831 17:40:49.437" level="INFO">${ulimit_settings} = 'top' is not recognized as an internal or external command,
operable program or batch file.</msg>
<status status="PASS" starttime="20230831 17:40:49.426" endtime="20230831 17:40:49.437"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${ulimit_settings}</var>
<arg>ls</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230831 17:41:05.054" level="INFO">${ulimit_settings} = 'ls' is not recognized as an internal or external command,
operable program or batch file.</msg>
<status status="PASS" starttime="20230831 17:41:05.041" endtime="20230831 17:41:05.054"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${ulimit_settings}</var>
<arg>dir</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230831 17:41:12.052" level="INFO">${ulimit_settings} =  Volume in drive C has no label.
 Volume Serial Number is F8F3-506A

 Directory of c:\Users\Ulfat\GIT\robot-dev

31/08/2023  10:57    &lt;DIR&gt;          .
28/08/2023  18:10    &lt;DIR&gt;          ..
31/08/2023...</msg>
<status status="PASS" starttime="20230831 17:41:12.040" endtime="20230831 17:41:12.052"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${ulimit_settings}</var>
<arg>scratchpad/ncs_conf/ulimit_data</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 17:42:31.266" level="INFO">${ulimit_settings} = [ubutt@robot-dev-00 scratch]$ ulimit -a
real-time non-blocking time  (microseconds, -R) unlimited
core file size              (blocks, -c) 0
data seg size               (kbytes, -d) unlimited
scheduli...</msg>
<status status="PASS" starttime="20230831 17:42:31.265" endtime="20230831 17:42:31.266"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked size.*(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:43:40.521" endtime="20230831 17:43:40.521"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked size.*(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:43:49.005" endtime="20230831 17:43:49.005"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked size.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:44:13.372" endtime="20230831 17:44:13.373"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>'max locked size'.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:44:39.766" endtime="20230831 17:44:39.766"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:44:53.221" endtime="20230831 17:44:53.221"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+${list}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 17:45:38.628" level="FAIL">error: missing ), unterminated subpattern at position 19</msg>
<status status="FAIL" starttime="20230831 17:45:38.628" endtime="20230831 17:45:38.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:45:46.683" endtime="20230831 17:45:46.683"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:45:54.694" endtime="20230831 17:45:54.694"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:46:04.639" endtime="20230831 17:46:04.639"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\d*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:46:14.876" endtime="20230831 17:46:14.876"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:46:22.886" endtime="20230831 17:46:22.886"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d?)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:46:34.249" endtime="20230831 17:46:34.249"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:46:43.002" endtime="20230831 17:46:43.002"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 17:47:07.663" level="FAIL">IndexError: no such group</msg>
<status status="FAIL" starttime="20230831 17:47:07.663" endtime="20230831 17:47:07.663"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:47:13.918" endtime="20230831 17:47:13.918"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:47:53.588" endtime="20230831 17:47:53.588"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+) 1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:48:00.653" endtime="20230831 17:48:00.653"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:48:07.988" endtime="20230831 17:48:07.988"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 17:48:14.357" level="FAIL">IndexError: no such group</msg>
<status status="FAIL" starttime="20230831 17:48:14.357" endtime="20230831 17:48:14.357"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*(\\d+)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:48:21.038" endtime="20230831 17:48:21.038"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*)\\s(.*)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 17:49:20.239" level="FAIL">error: unbalanced parenthesis at position 19</msg>
<status status="FAIL" starttime="20230831 17:49:20.239" endtime="20230831 17:49:20.240"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\s(.*)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:49:28.790" endtime="20230831 17:49:28.790"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\s(\\d*)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:49:42.759" endtime="20230831 17:49:42.759"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\s(\\d*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:49:50.142" endtime="20230831 17:49:50.142"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\s([0-9]*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:50:02.967" endtime="20230831 17:50:02.967"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*([0-9]*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 17:50:12.418" endtime="20230831 17:50:12.418"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>/^max locked memory.*\)\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 18:02:17.508" level="FAIL">error: unbalanced parenthesis at position 21</msg>
<status status="FAIL" starttime="20230831 18:02:17.508" endtime="20230831 18:02:17.509"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>(?m)/^max locked memory.*\)\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 18:02:27.656" level="FAIL">error: unbalanced parenthesis at position 25</msg>
<status status="FAIL" starttime="20230831 18:02:27.656" endtime="20230831 18:02:27.657"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>(?m)^max locked memory.*\)\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 18:02:38.816" level="FAIL">error: unbalanced parenthesis at position 24</msg>
<status status="FAIL" starttime="20230831 18:02:38.815" endtime="20230831 18:02:38.816"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>(?m)max locked memory.*\)\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 18:02:44.081" level="FAIL">error: unbalanced parenthesis at position 23</msg>
<status status="FAIL" starttime="20230831 18:02:44.081" endtime="20230831 18:02:44.081"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>(?m)/^max locked memory.*\)\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 18:02:52.789" level="FAIL">error: unbalanced parenthesis at position 25</msg>
<status status="FAIL" starttime="20230831 18:02:52.789" endtime="20230831 18:02:52.790"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>(?m)/^max locked memory.*\\)\\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:03:06.258" endtime="20230831 18:03:06.258"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>^max locked memory.*\\)\\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:03:17.787" endtime="20230831 18:03:17.787"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\)\\s(.*)/gm</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:03:22.918" endtime="20230831 18:03:22.918"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\)\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:03:31.670" endtime="20230831 18:03:31.670"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>^max locked memory.*\\)\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:03:42.919" endtime="20230831 18:03:42.920"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${ulimit_settings}</arg>
<arg>max locked memory.*\\)\\s(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:03:48.838" endtime="20230831 18:03:48.838"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>scratchpad/ncs_conf/limits_ncs_conf</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 18:36:25.291" level="INFO">${file} = # Adding T-SDN System Limits needed for NSO

*    soft nproc 65535
*    hard nproc 65535
*    soft  nofile 65536
*    hard  nofile 65535
*    hard memlock 65536
*    soft memlock 65536
# *   soft meml...</msg>
<status status="PASS" starttime="20230831 18:36:25.291" endtime="20230831 18:36:25.291"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:37:49.825" endtime="20230831 18:37:49.826"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:39:04.527" endtime="20230831 18:39:04.527"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard</arg>
<arg>nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:39:44.130" endtime="20230831 18:39:44.130"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:40:04.560" endtime="20230831 18:40:04.560"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:40:25.644" endtime="20230831 18:40:25.645"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:40:32.912" endtime="20230831 18:40:32.912"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:43:28.215" endtime="20230831 18:43:28.215"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s*\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<arg>0</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:43:38.296" endtime="20230831 18:43:38.297"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\s*\n\\*.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:44:00.189" endtime="20230831 18:44:00.189"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\n\\*.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:44:38.307" endtime="20230831 18:44:38.307"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:44:50.840" endtime="20230831 18:44:50.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*hard nproc</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:45:49.525" endtime="20230831 18:45:49.526"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*hard nproc\\s*(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:46:23.633" endtime="20230831 18:46:23.633"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*hard nproc\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:46:34.276" endtime="20230831 18:46:34.276"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*soft nofile\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:48:04.327" endtime="20230831 18:48:04.328"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*soft\\s?nofile\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:48:24.307" endtime="20230831 18:48:24.308"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*soft\\s+nofile\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:48:34.365" endtime="20230831 18:48:34.366"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${file}</arg>
<arg>(?m)^\\*\\s*soft\\s*nofile\\s*(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 18:48:47.574" endtime="20230831 18:48:47.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>some with space</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 18:52:51.640" level="INFO">${string} = some with space</msg>
<status status="PASS" starttime="20230831 18:52:51.640" endtime="20230831 18:52:51.640"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>@{EMPTY}</arg>
<arg>\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:53:45.618" level="FAIL">Keyword 'String.Replace String' expected 3 to 4 arguments, got 2.</msg>
<status status="FAIL" starttime="20230831 18:53:45.618" endtime="20230831 18:53:45.618"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>' '</arg>
<arg>\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:54:02.292" level="INFO">${new_string} = some with space</msg>
<status status="PASS" starttime="20230831 18:54:02.292" endtime="20230831 18:54:02.292"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>\\s*</arg>
<arg>@{EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:54:34.491" level="FAIL">Keyword 'String.Replace String' expected 3 to 4 arguments, got 2.</msg>
<status status="FAIL" starttime="20230831 18:54:34.491" endtime="20230831 18:54:34.491"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>\\s*</arg>
<arg>' '</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:54:44.165" level="INFO">${new_string} = some with space</msg>
<status status="PASS" starttime="20230831 18:54:44.165" endtime="20230831 18:54:44.165"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>\\s*</arg>
<arg>aaaa</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:55:04.011" level="INFO">${new_string} = some with space</msg>
<status status="PASS" starttime="20230831 18:55:04.011" endtime="20230831 18:55:04.011"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>' '</arg>
<arg>aaaa</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:55:13.620" level="INFO">${new_string} = some with space</msg>
<status status="PASS" starttime="20230831 18:55:13.619" endtime="20230831 18:55:13.620"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>aaaa</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:55:29.972" level="INFO">${new_string} = someaaaawithaaaaspace</msg>
<status status="PASS" starttime="20230831 18:55:29.972" endtime="20230831 18:55:29.972"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>\\s</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:56:01.052" level="INFO">${new_string} = some\swith\sspace</msg>
<status status="PASS" starttime="20230831 18:56:01.051" endtime="20230831 18:56:01.052"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>'\\s'</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:56:19.299" level="INFO">${new_string} = some'\s'with'\s'space</msg>
<status status="PASS" starttime="20230831 18:56:19.299" endtime="20230831 18:56:19.299"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>\\\s</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:56:28.368" level="INFO">${new_string} = some\swith\sspace</msg>
<status status="PASS" starttime="20230831 18:56:28.368" endtime="20230831 18:56:28.368"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>\\\\s</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:56:42.385" level="INFO">${new_string} = some\\swith\\sspace</msg>
<status status="PASS" starttime="20230831 18:56:42.385" endtime="20230831 18:56:42.385"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>\\\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:56:51.340" level="INFO">${new_string} = some\\s*with\\s*space</msg>
<status status="PASS" starttime="20230831 18:56:51.339" endtime="20230831 18:56:51.340"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${string}</arg>
<arg>${SPACE}</arg>
<arg>\\\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 18:57:16.519" level="INFO">${new_string} = some\\s*with\\s*space</msg>
<status status="PASS" starttime="20230831 18:57:16.518" endtime="20230831 18:57:16.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>Some</arg>
<arg>Space Filled</arg>
<arg>Text</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 18:57:39.222" level="INFO">${string} = ['Some', 'Space Filled', 'Text']</msg>
<status status="PASS" starttime="20230831 18:57:39.222" endtime="20230831 18:57:39.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>'Some</arg>
<arg>Space Filled</arg>
<arg>Text'</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 18:57:54.206" level="INFO">${string} = ["'Some", 'Space Filled', "Text'"]</msg>
<status status="PASS" starttime="20230831 18:57:54.206" endtime="20230831 18:57:54.206"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>'Some</arg>
<arg>Space Filled</arg>
<arg>Text'</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 18:58:11.914" level="INFO">${string} = ["'Some", 'Space Filled', "Text'"]</msg>
<status status="PASS" starttime="20230831 18:58:11.914" endtime="20230831 18:58:11.915"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>"Some</arg>
<arg>Space Filled</arg>
<arg>Text"</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 18:58:28.363" level="INFO">${string} = ['"Some', 'Space Filled', 'Text"']</msg>
<status status="PASS" starttime="20230831 18:58:28.362" endtime="20230831 18:58:28.363"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${string}</var>
<arg>""""Some</arg>
<arg>Space Filled</arg>
<arg>Text"""</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230831 18:59:34.941" level="INFO">${string} = ['""""Some', 'Space Filled', 'Text"""']</msg>
<status status="PASS" starttime="20230831 18:59:34.941" endtime="20230831 18:59:34.941"/>
</kw>
<kw name="&quot;&quot;&quot;&quot;Some">
<var>${string}</var>
<arg>Space Filled</arg>
<arg>Text"""</arg>
<msg timestamp="20230831 18:59:56.025" level="FAIL">No keyword with name '""""Some' found.</msg>
<status status="FAIL" starttime="20230831 18:59:56.025" endtime="20230831 18:59:56.025"/>
</kw>
<kw name="&quot;&quot;&quot;&quot;Some">
<var>${string}</var>
<arg>Space Filled</arg>
<arg>Text"""</arg>
<msg timestamp="20230831 19:00:01.809" level="FAIL">No keyword with name '""""Some' found.</msg>
<status status="FAIL" starttime="20230831 19:00:01.808" endtime="20230831 19:00:01.809"/>
</kw>
<kw name="Some">
<var>${string}</var>
<arg>Space Filled</arg>
<arg>Text</arg>
<msg timestamp="20230831 19:00:14.072" level="FAIL">No keyword with name 'Some' found.</msg>
<status status="FAIL" starttime="20230831 19:00:14.072" endtime="20230831 19:00:14.072"/>
</kw>
<kw name="&quot;&quot;Some">
<var>${string}</var>
<arg>Space Filled</arg>
<arg>Text""</arg>
<msg timestamp="20230831 19:00:23.025" level="FAIL">No keyword with name '""Some' found.</msg>
<status status="FAIL" starttime="20230831 19:00:23.025" endtime="20230831 19:00:23.025"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${long_string}</var>
<arg>${string}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230831 19:01:58.921" level="INFO">${long_string} = ['""""Some', 'Space Filled', 'Text"""']</msg>
<status status="PASS" starttime="20230831 19:01:58.920" endtime="20230831 19:01:58.921"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${long_string}</var>
<arg>some text</arg>
<arg>"</arg>
<arg>"</arg>
<arg>more text</arg>
<arg>and more</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230831 19:03:07.145" level="INFO">${long_string} = some text " " more text and more</msg>
<status status="PASS" starttime="20230831 19:03:07.145" endtime="20230831 19:03:07.145"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${long_string}</var>
<arg>some text</arg>
<arg>"</arg>
<arg>"</arg>
<arg>more text</arg>
<arg>and more</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230831 19:03:32.706" level="INFO">${long_string} = some text " " more text and more</msg>
<status status="PASS" starttime="20230831 19:03:32.706" endtime="20230831 19:03:32.706"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${long_string}</var>
<arg>some text</arg>
<arg>"</arg>
<arg>"</arg>
<arg>more text</arg>
<arg>and more</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230831 19:03:41.097" level="INFO">${long_string} = some text " " more text and more</msg>
<status status="PASS" starttime="20230831 19:03:41.097" endtime="20230831 19:03:41.097"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${long_string}</var>
<arg>some text</arg>
<arg>"</arg>
<arg>"</arg>
<arg>more text</arg>
<arg>and more</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230831 19:03:48.951" level="INFO">${long_string} = some text " " more text and more</msg>
<status status="PASS" starttime="20230831 19:03:48.951" endtime="20230831 19:03:48.951"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>@{SPACE}</arg>
<arg>\\\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:04:55.561" level="FAIL">Value of variable '@{SPACE}' is not list or list-like.</msg>
<status status="FAIL" starttime="20230831 19:04:55.561" endtime="20230831 19:04:55.561"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>${SPACE}</arg>
<arg>\\\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:05:50.031" level="INFO">${new_string} = some\\s*text\\s*"\\s*"\\s*more\\s*text\\s*and\\s*more</msg>
<status status="PASS" starttime="20230831 19:05:50.031" endtime="20230831 19:05:50.031"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>${SPACE}</arg>
<arg>\\\\s*</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:06:13.245" level="INFO">${new_string} = some\\s*text\\s*"\\s*"\\s*more\\s*text\\s*and\\s*more</msg>
<status status="PASS" starttime="20230831 19:06:13.244" endtime="20230831 19:06:13.245"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s*</arg>
<arg>replace_with</arg>
<arg>\\\\s*</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:07:47.326" level="FAIL">ValueError: Cannot convert 'count' argument '\\s*' to an integer.</msg>
<status status="FAIL" starttime="20230831 19:07:47.326" endtime="20230831 19:07:47.326"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s*</arg>
<arg>replace_with</arg>
<arg>aaaa</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:08:55.978" level="FAIL">ValueError: Cannot convert 'count' argument 'aaaa' to an integer.</msg>
<status status="FAIL" starttime="20230831 19:08:55.978" endtime="20230831 19:08:55.978"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\s*</arg>
<arg>replace_with</arg>
<arg>aaaa</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:09:04.686" level="FAIL">ValueError: Cannot convert 'count' argument 'aaaa' to an integer.</msg>
<status status="FAIL" starttime="20230831 19:09:04.685" endtime="20230831 19:09:04.686"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>replace_with</arg>
<arg>aaaa</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:09:16.543" level="FAIL">ValueError: Cannot convert 'count' argument 'aaaa' to an integer.</msg>
<status status="FAIL" starttime="20230831 19:09:16.543" endtime="20230831 19:09:16.543"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>\\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:10:30.216" level="INFO">${new_string} = some\s+text\s+"\s+"\s+more\s+text\s+and\s+more</msg>
<status status="PASS" starttime="20230831 19:10:30.216" endtime="20230831 19:10:30.216"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:10:56.604" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:10:56.604" endtime="20230831 19:10:56.605"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\s+</arg>
<arg>\\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:11:21.041" level="INFO">${new_string} = \s+ome text " " more text and more</msg>
<status status="PASS" starttime="20230831 19:11:21.041" endtime="20230831 19:11:21.041"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\s+</arg>
<arg>\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:11:42.169" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:11:42.169" endtime="20230831 19:11:42.170"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\\s+</arg>
<arg>\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:11:50.989" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:11:50.989" endtime="20230831 19:11:50.990"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>\\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:12:01.160" level="INFO">${new_string} = some\s+text\s+"\s+"\s+more\s+text\s+and\s+more</msg>
<status status="PASS" starttime="20230831 19:12:01.160" endtime="20230831 19:12:01.160"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>\\\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:12:21.073" level="INFO">${new_string} = some\s+text\s+"\s+"\s+more\s+text\s+and\s+more</msg>
<status status="PASS" starttime="20230831 19:12:21.073" endtime="20230831 19:12:21.073"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>\\\\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:12:29.803" level="FAIL">error: bad escape \s at position 2</msg>
<status status="FAIL" starttime="20230831 19:12:29.803" endtime="20230831 19:12:29.803"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>\\\\\\\s+</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:12:40.244" level="FAIL">error: bad escape \s at position 2</msg>
<status status="FAIL" starttime="20230831 19:12:40.244" endtime="20230831 19:12:40.244"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>'\\s+'</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:12:55.410" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:12:55.409" endtime="20230831 19:12:55.410"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\s+</arg>
<arg>'\\s+'</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:13:06.749" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:13:06.749" endtime="20230831 19:13:06.750"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>'\\s+'</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:13:16.492" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:13:16.492" endtime="20230831 19:13:16.493"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\\\s+</arg>
<arg>'\\s+'</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:13:24.547" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:13:24.547" endtime="20230831 19:13:24.547"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s</arg>
<arg>'\\s+'</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:13:38.813" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:13:38.813" endtime="20230831 19:13:38.814"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s</arg>
<arg>"\\s+"</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:13:51.998" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:13:51.998" endtime="20230831 19:13:51.998"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>"\\s+"</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:14:01.762" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:14:01.762" endtime="20230831 19:14:01.763"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s*</arg>
<arg>"\\s+"</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:14:30.291" level="FAIL">error: bad escape \s at position 1</msg>
<status status="FAIL" starttime="20230831 19:14:30.291" endtime="20230831 19:14:30.292"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s*</arg>
<arg>aaa</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:14:42.760" level="INFO">${new_string} = aaasaaaoaaamaaaeaaaaaataaaeaaaxaaataaaaaa"aaaaaa"aaaaaamaaaoaaaraaaeaaaaaataaaeaaaxaaataaaaaaaaaanaaadaaaaaamaaaoaaaraaaeaaa</msg>
<status status="PASS" starttime="20230831 19:14:42.760" endtime="20230831 19:14:42.760"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>aaa</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:14:54.618" level="INFO">${new_string} = someaaatextaaa"aaa"aaamoreaaatextaaaandaaamore</msg>
<status status="PASS" starttime="20230831 19:14:54.618" endtime="20230831 19:14:54.618"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_string}</var>
<arg>${long_string}</arg>
<arg>\\s+</arg>
<arg>a</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:15:13.765" level="INFO">${new_string} = someatexta"a"amoreatextaandamore</msg>
<status status="PASS" starttime="20230831 19:15:13.765" endtime="20230831 19:15:13.765"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>scratchpad/ncs_Conf/limits_ncs_conf</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230831 19:16:08.465" level="INFO">${file} = # Adding T-SDN System Limits needed for NSO

*    soft nproc 65535
*    hard nproc 65535
*    soft  nofile 65536
*    hard  nofile 65535
*    hard memlock 65536
*    soft memlock 65536
# *   soft meml...</msg>
<status status="PASS" starttime="20230831 19:16:08.465" endtime="20230831 19:16:08.465"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s*</arg>
<arg>\\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:17:16.620" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:17:16.620" endtime="20230831 19:17:16.621"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\\s*</arg>
<arg>\\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:17:32.124" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:17:32.123" endtime="20230831 19:17:32.124"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>${SPACE}</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:18:35.958" level="INFO">${new_file} = #AddingT-SDNSystemLimitsneededforNSO

*softnproc65535
*hardnproc65535
*softnofile65536
*hardnofile65535
*hardmemlock65536
*softmemlock65536
#*softmemlock9999</msg>
<status status="PASS" starttime="20230831 19:18:35.958" endtime="20230831 19:18:35.958"/>
</kw>
<kw name="Replace String" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>${SPACE}</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:19:04.225" level="INFO">${new_file} = #AddingT-SDNSystemLimitsneededforNSO

*softnproc65535
*hardnproc65535
*softnofile65536
*hardnofile65535
*hardmemlock65536
*softmemlock65536
#*softmemlock9999</msg>
<status status="PASS" starttime="20230831 19:19:04.225" endtime="20230831 19:19:04.225"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s+</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:19:28.288" level="INFO">${new_file} = #sAddingsT-SDNsSystemsLimitssneededsforsNSOs*ssoftsnprocs65535s*shardsnprocs65535s*ssoftsnofiles65536s*shardsnofiles65535s*shardsmemlocks65536s*ssoftsmemlocks65536s#s*ssoftsmemlocks9999</msg>
<status status="PASS" starttime="20230831 19:19:28.287" endtime="20230831 19:19:28.288"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:20:00.944" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSOs*sssoft nproc 65535
*sshard nproc 65535
*sssoftsnofile 65536
*sshardsnofile 65535
*sshard memlock 65536
*sssoft memlock 65536
# *s soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:20:00.944" endtime="20230831 19:20:00.944"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:20:17.031" level="INFO">${new_file} = #sAddingsT-SDNsSystemsLimitssneededsforsNSOss*sssssoftsnprocs65535s*sssshardsnprocs65535s*sssssoftssnofiles65536s*sssshardssnofiles65535s*sssshardsmemlocks65536s*sssssoftsmemlocks65536s#s*ssssoftsmeml...</msg>
<status status="PASS" starttime="20230831 19:20:17.031" endtime="20230831 19:20:17.031"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\s\s</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:20:36.002" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO

*    soft nproc 65535
*    hard nproc 65535
*    soft  nofile 65536
*    hard  nofile 65535
*    hard memlock 65536
*    soft memlock 65536
# *   soft meml...</msg>
<status status="PASS" starttime="20230831 19:20:36.002" endtime="20230831 19:20:36.002"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s\\s</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:20:55.847" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSOs*sssoft nproc 65535
*sshard nproc 65535
*sssoftsnofile 65536
*sshardsnofile 65535
*sshard memlock 65536
*sssoft memlock 65536
# *s soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:20:55.847" endtime="20230831 19:20:55.847"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s\\s</arg>
<arg>\\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:21:09.954" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:21:09.954" endtime="20230831 19:21:09.955"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s\\s</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:21:32.275" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO *  soft nproc 65535
*  hard nproc 65535
*  soft nofile 65536
*  hard nofile 65535
*  hard memlock 65536
*  soft memlock 65536
# *  soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:21:32.275" endtime="20230831 19:21:32.275"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s*</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:21:51.693" level="INFO">${new_file} =  #  A d d i n g  T - S D N  S y s t e m  L i m i t s  n e e d e d  f o r  N S O  *  s o f t  n p r o c  6 5 5 3 5  *  h a r d  n p r o c  6 5 5 3 5  *  s o f t  n o f i l e  6 5 5 3 6  *  h a r d  n o...</msg>
<status status="PASS" starttime="20230831 19:21:51.693" endtime="20230831 19:21:51.693"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s+</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:21:58.927" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO * soft nproc 65535 * hard nproc 65535 * soft nofile 65536 * hard nofile 65535 * hard memlock 65536 * soft memlock 65536 # * soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:21:58.927" endtime="20230831 19:21:58.927"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:22:13.812" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO  *    soft nproc 65535 *    hard nproc 65535 *    soft  nofile 65536 *    hard  nofile 65535 *    hard memlock 65536 *    soft memlock 65536 # *   soft meml...</msg>
<status status="PASS" starttime="20230831 19:22:13.812" endtime="20230831 19:22:13.812"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2,3}</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:22:30.170" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO *  soft nproc 65535
*  hard nproc 65535
*  soft nofile 65536
*  hard nofile 65535
*  hard memlock 65536
*  soft memlock 65536
# * soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:22:30.169" endtime="20230831 19:22:30.170"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:22:42.523" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO *  soft nproc 65535
*  hard nproc 65535
*  soft nofile 65536
*  hard nofile 65535
*  hard memlock 65536
*  soft memlock 65536
# *  soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:22:42.522" endtime="20230831 19:22:42.523"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>^\\s?\n\\*\\s+hard noproc\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:26:57.122" endtime="20230831 19:26:57.123"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>^\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:27:06.075" endtime="20230831 19:27:06.075"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:27:13.814" endtime="20230831 19:27:13.814"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\s?\n\\*\\s+hard nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:27:24.187" endtime="20230831 19:27:24.187"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\s?\n\\*\\s+hard nofile\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:27:36.383" endtime="20230831 19:27:36.383"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>^\\s?\n\\*\\s+hard nofile\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:27:49.455" endtime="20230831 19:27:49.455"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\n\\*\\s+hard nofile\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:28:00.954" endtime="20230831 19:28:00.954"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\\*\\s+hard nofile\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:28:27.991" endtime="20230831 19:28:27.991"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:28:50.388" endtime="20230831 19:28:50.389"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\\n?\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:29:10.527" endtime="20230831 19:29:10.527"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\\n+\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:29:59.939" endtime="20230831 19:29:59.939"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\\?n?\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:30:16.320" endtime="20230831 19:30:16.321"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?m)^\\s?\\?n?\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 19:30:22.664" level="FAIL">error: multiple repeat at position 12</msg>
<status status="FAIL" starttime="20230831 19:30:22.664" endtime="20230831 19:30:22.665"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230831 19:30:41.430" level="FAIL">error: nothing to repeat at position 0</msg>
<status status="FAIL" starttime="20230831 19:30:41.430" endtime="20230831 19:30:41.431"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:30:48.046" endtime="20230831 19:30:48.046"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(.*)\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:31:04.808" endtime="20230831 19:31:04.808"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\*\\s+soft nproc\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:31:16.891" endtime="20230831 19:31:16.892"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\*\\s+soft memlock\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:31:39.907" endtime="20230831 19:31:39.908"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:31:49.383" endtime="20230831 19:31:49.383"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>[^#]\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:32:16.629" endtime="20230831 19:32:16.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:32:29.771" endtime="20230831 19:32:29.771"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(.*)\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:32:44.464" endtime="20230831 19:32:44.464"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(\\s+)\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:33:06.583" endtime="20230831 19:33:06.583"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?&lt;!#)\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:33:26.747" endtime="20230831 19:33:26.748"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?&lt;!#)\\s+${SPACE}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:33:44.564" endtime="20230831 19:33:44.564"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?&lt;!#)\\s+\\*\\s+soft memlock\\s?(\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:33:54.914" endtime="20230831 19:33:54.914"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?&lt;!#)\\s+\\*\\s+soft memlock\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:34:09.315" endtime="20230831 19:34:09.315"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?&lt;!#)\\s+\\*\\s+hard memlock\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:34:24.120" endtime="20230831 19:34:24.120"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${new_file}</arg>
<arg>(?&lt;!#)\\s+\\*\\s+hard memlock\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230831 19:43:28.165" endtime="20230831 19:43:28.166"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:43:40.878" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO *  soft nproc 65535
*  hard nproc 65535
*  soft nofile 65536
*  hard nofile 65535
*  hard memlock 65536
*  soft memlock 65536
# *  soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:43:40.877" endtime="20230831 19:43:40.878"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>\\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:46:59.689" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:46:59.689" endtime="20230831 19:46:59.690"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>\\\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:47:07.814" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:47:07.813" endtime="20230831 19:47:07.814"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:47:13.101" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSOs*sssoft nproc 65535
*sshard nproc 65535
*sssoftsnofile 65536
*sshardsnofile 65535
*sshard memlock 65536
*sssoft memlock 65536
# *s soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:47:13.101" endtime="20230831 19:47:13.101"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{3}</arg>
<arg>\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:47:41.273" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO

*s soft nproc 65535
*s hard nproc 65535
*s soft  nofile 65536
*s hard  nofile 65535
*s hard memlock 65536
*s soft memlock 65536
# *ssoft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:47:41.272" endtime="20230831 19:47:41.273"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{3}</arg>
<arg>\\s</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:47:57.562" level="FAIL">error: bad escape \s at position 0</msg>
<status status="FAIL" starttime="20230831 19:47:57.562" endtime="20230831 19:47:57.563"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{3}</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:48:10.837" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO

*  soft nproc 65535
*  hard nproc 65535
*  soft  nofile 65536
*  hard  nofile 65535
*  hard memlock 65536
*  soft memlock 65536
# * soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:48:10.837" endtime="20230831 19:48:10.837"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${new_file}</var>
<arg>${file}</arg>
<arg>\\s{2}</arg>
<arg>${SPACE}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230831 19:48:20.738" level="INFO">${new_file} = # Adding T-SDN System Limits needed for NSO *  soft nproc 65535
*  hard nproc 65535
*  soft nofile 65536
*  hard nofile 65535
*  hard memlock 65536
*  soft memlock 65536
# *  soft memlock 9999</msg>
<status status="PASS" starttime="20230831 19:48:20.738" endtime="20230831 19:48:20.738"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${python_version}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 08:30:37.905" level="INFO">${python_version} = </msg>
<status status="PASS" starttime="20230901 08:30:37.905" endtime="20230901 08:30:37.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${python_version}</var>
<arg>Python 3.9.16</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 08:30:37.905" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230901 08:30:37.905" endtime="20230901 08:30:37.905"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${dict}</var>
<arg>Python=3.9.16</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230901 08:31:32.931" level="INFO">${dict} = {'Python': '3.9.16'}</msg>
<status status="PASS" starttime="20230901 08:31:32.930" endtime="20230901 08:31:32.931"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict[Python]}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 08:32:57.770" level="FAIL">Resolving variable '${dict[Python]}' failed: NameError: name 'Python' is not defined</msg>
<status status="FAIL" starttime="20230901 08:32:57.770" endtime="20230901 08:32:57.770"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict[Python]}.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 08:33:15.543" level="FAIL">Resolving variable '${dict[Python]}' failed: NameError: name 'Python' is not defined</msg>
<status status="FAIL" starttime="20230901 08:33:15.543" endtime="20230901 08:33:15.543"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict['Python']}.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:37:18.122" endtime="20230901 08:37:18.122"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict['Python']}\\d.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:38:12.079" endtime="20230901 08:38:12.080"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict['Python']}\\s+\\d.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:38:23.556" endtime="20230901 08:38:23.556"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict['Python']}\\s*\\d.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:38:34.333" endtime="20230901 08:38:34.333"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict['Python']}\\s.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:38:41.489" endtime="20230901 08:38:41.489"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>${dict['Python']}.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:38:52.198" endtime="20230901 08:38:52.199"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>.*\\d+.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:40:15.881" endtime="20230901 08:40:15.881"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>.*(\\d+.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:40:27.109" endtime="20230901 08:40:27.109"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>.*(\\d+.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:40:35.637" endtime="20230901 08:40:35.637"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>Python \\d+.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:41:06.530" endtime="20230901 08:41:06.530"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>Python (\\d+.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:41:15.260" endtime="20230901 08:41:15.260"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.8</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 08:46:28.335" level="INFO">${desired_version} = 3.8</msg>
<status status="PASS" starttime="20230901 08:46:28.335" endtime="20230901 08:46:28.335"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>Python (\d+\.\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:46:51.195" endtime="20230901 08:46:51.195"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 08:46:59.272" endtime="20230901 08:46:59.272"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<arg>1 + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230901 08:55:18.964" endtime="20230901 08:55:18.965"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${Evaluate 1 + 1} ==2</arg>
<arg>Pass Execution</arg>
<arg>message</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 08:56:54.524" level="FAIL">Resolving variable '${Evaluate 1 + 1}' failed: Variable '${Evaluate 1 }' not found.</msg>
<status status="FAIL" starttime="20230901 08:56:54.523" endtime="20230901 08:56:54.524"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 09:02:09.082" endtime="20230901 09:02:09.082"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 09:02:16.688" endtime="20230901 09:02:16.688"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:02:24.720" level="INFO">${matches} = ['3.9']</msg>
<status status="PASS" starttime="20230901 09:02:24.719" endtime="20230901 09:02:24.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${version}</var>
<arg>${matches[0][0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:03:08.618" level="INFO">${version} = 3</msg>
<status status="PASS" starttime="20230901 09:03:08.618" endtime="20230901 09:03:08.618"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${version}</var>
<arg>${matches[0][0]}.${matches[0][0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:03:47.230" level="INFO">${version} = 3.3</msg>
<status status="PASS" starttime="20230901 09:03:47.229" endtime="20230901 09:03:47.230"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${version}</var>
<arg>${matches[0][0]}.${matches[0][2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:03:56.972" level="INFO">${version} = 3.9</msg>
<status status="PASS" starttime="20230901 09:03:56.972" endtime="20230901 09:03:56.972"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${version_1}</var>
<arg>${matches}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:04:15.491" level="INFO">${version_1} = ['3.9']</msg>
<status status="PASS" starttime="20230901 09:04:15.491" endtime="20230901 09:04:15.491"/>
</kw>
<kw name="Get First Regexp Match">
<var>${matches}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<msg timestamp="20230901 09:07:15.383" level="FAIL">Keyword 'Get First Regexp Match' expected 2 arguments, got 3.</msg>
<status status="FAIL" starttime="20230901 09:07:15.383" endtime="20230901 09:07:15.383"/>
</kw>
<kw name="Get First Regexp Match">
<var>${matches}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:07:41.845" level="INFO">${matches} = ['Python 3.9']</msg>
<status status="PASS" starttime="20230901 09:07:41.845" endtime="20230901 09:07:41.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_match}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:07:41.845" level="INFO">${first_match} = </msg>
<status status="PASS" starttime="20230901 09:07:41.845" endtime="20230901 09:07:41.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${matches[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 09:07:41.846" endtime="20230901 09:07:41.846"/>
</kw>
<status status="PASS" starttime="20230901 09:07:41.846" endtime="20230901 09:07:41.846"/>
</kw>
<msg timestamp="20230901 09:07:41.846" level="INFO">${matches} = None</msg>
<status status="PASS" starttime="20230901 09:07:41.845" endtime="20230901 09:07:41.846"/>
</kw>
<kw name="Get First Regexp Match">
<var>${matches}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:09:45.177" level="INFO">${matches} = ['Python 3.9']</msg>
<status status="PASS" starttime="20230901 09:09:45.177" endtime="20230901 09:09:45.177"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${first_match}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:09:45.177" level="INFO">${first_match} = </msg>
<status status="PASS" starttime="20230901 09:09:45.177" endtime="20230901 09:09:45.177"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${matches[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 09:09:45.178" endtime="20230901 09:09:45.178"/>
</kw>
<status status="PASS" starttime="20230901 09:09:45.177" endtime="20230901 09:09:45.178"/>
</kw>
<msg timestamp="20230901 09:09:45.178" level="INFO">${matches} = None</msg>
<status status="PASS" starttime="20230901 09:09:45.177" endtime="20230901 09:09:45.178"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 09:11:38.430" level="INFO">${python_version} = Python 3.11.5</msg>
<status status="PASS" starttime="20230901 09:11:38.377" endtime="20230901 09:11:38.430"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:12:00.451" level="INFO">${python_major_version} = ['Python 3.11']</msg>
<status status="PASS" starttime="20230901 09:12:00.450" endtime="20230901 09:12:00.451"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:12:22.771" level="INFO">${python_major_version} = ['3.11']</msg>
<status status="PASS" starttime="20230901 09:12:22.771" endtime="20230901 09:12:22.771"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${python_version_string}</var>
<arg>${python_major_version[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 09:13:30.680" level="INFO">${python_version_string} = 3.11</msg>
<status status="PASS" starttime="20230901 09:13:30.679" endtime="20230901 09:13:30.680"/>
</kw>
<kw name="Get First Regexp Match">
<arg>${python_version}</arg>
<arg>Python (.*)</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:28:19.363" level="INFO">${matches} = ['Python 3.11.5']</msg>
<status status="PASS" starttime="20230901 09:28:19.363" endtime="20230901 09:28:19.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 09:28:19.364" endtime="20230901 09:28:19.364"/>
</kw>
<status status="PASS" starttime="20230901 09:28:19.363" endtime="20230901 09:28:19.364"/>
</kw>
<status status="PASS" starttime="20230901 09:28:19.363" endtime="20230901 09:28:19.364"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>Python (.*)</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:28:30.725" level="INFO">${matches} = ['Python 3.11.5']</msg>
<status status="PASS" starttime="20230901 09:28:30.725" endtime="20230901 09:28:30.725"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 09:28:30.725" endtime="20230901 09:28:30.725"/>
</kw>
<status status="PASS" starttime="20230901 09:28:30.725" endtime="20230901 09:28:30.725"/>
</kw>
<msg timestamp="20230901 09:28:30.726" level="INFO">${val} = None</msg>
<status status="PASS" starttime="20230901 09:28:30.724" endtime="20230901 09:28:30.726"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>.*</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:29:18.991" level="INFO">${matches} = ['Python 3.11.5', '']</msg>
<status status="PASS" starttime="20230901 09:29:18.991" endtime="20230901 09:29:18.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 09:29:18.991" endtime="20230901 09:29:18.992"/>
</kw>
<status status="PASS" starttime="20230901 09:29:18.991" endtime="20230901 09:29:18.992"/>
</kw>
<msg timestamp="20230901 09:29:18.992" level="INFO">${val} = None</msg>
<status status="PASS" starttime="20230901 09:29:18.991" endtime="20230901 09:29:18.992"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>.*</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:30:55.946" level="INFO">${matches} = ['Python 3.11.5', '']</msg>
<status status="PASS" starttime="20230901 09:30:55.946" endtime="20230901 09:30:55.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches} != None</arg>
<arg>${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<arg>Return</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 09:30:55.948" level="FAIL">Keyword name must be a string.</msg>
<status status="FAIL" starttime="20230901 09:30:55.946" endtime="20230901 09:30:55.948"/>
</kw>
<status status="FAIL" starttime="20230901 09:30:55.946" endtime="20230901 09:30:55.948"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>.*</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:32:57.697" level="INFO">${matches} = ['Python 3.11.5', '']</msg>
<status status="PASS" starttime="20230901 09:32:57.697" endtime="20230901 09:32:57.697"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches} != 'None'</arg>
<arg>'${match}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}''</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 09:32:57.699" level="FAIL">Variable '${match}' not found. Did you mean:
    ${matches}</msg>
<status status="FAIL" starttime="20230901 09:32:57.697" endtime="20230901 09:32:57.699"/>
</kw>
<status status="FAIL" starttime="20230901 09:32:57.697" endtime="20230901 09:32:57.699"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>.*</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:33:29.963" level="INFO">${matches} = ['Python 3.11.5', '']</msg>
<status status="PASS" starttime="20230901 09:33:29.963" endtime="20230901 09:33:29.963"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches} != 'None'</arg>
<arg>'${matches}</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}'</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="'['Python 3.11.5', '']">
<arg>Set Variable</arg>
<arg>${matches[0]}'</arg>
<msg timestamp="20230901 09:33:29.966" level="FAIL">No keyword with name ''['Python 3.11.5', '']' found.</msg>
<status status="FAIL" starttime="20230901 09:33:29.966" endtime="20230901 09:33:29.966"/>
</kw>
<status status="FAIL" starttime="20230901 09:33:29.963" endtime="20230901 09:33:29.966"/>
</kw>
<status status="FAIL" starttime="20230901 09:33:29.963" endtime="20230901 09:33:29.966"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>.*</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:34:17.127" level="INFO">${matches} = ['Python 3.11.5', '']</msg>
<status status="PASS" starttime="20230901 09:34:17.127" endtime="20230901 09:34:17.128"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches} != 'None'</arg>
<arg>${matches}=</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="['Python 3.11.5', '']=">
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<msg timestamp="20230901 09:34:17.130" level="FAIL">No keyword with name '['Python 3.11.5', '']=' found.</msg>
<status status="FAIL" starttime="20230901 09:34:17.130" endtime="20230901 09:34:17.130"/>
</kw>
<status status="FAIL" starttime="20230901 09:34:17.128" endtime="20230901 09:34:17.130"/>
</kw>
<status status="FAIL" starttime="20230901 09:34:17.127" endtime="20230901 09:34:17.130"/>
</kw>
<kw name="Get First Regexp Match">
<var>${val}</var>
<arg>${python_version}</arg>
<arg>.*</arg>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${text}</arg>
<arg>${pattern}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 09:34:49.166" level="INFO">${matches} = ['Python 3.11.5', '']</msg>
<status status="PASS" starttime="20230901 09:34:49.166" endtime="20230901 09:34:49.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${matches} != 'None'</arg>
<arg>${matches}=</arg>
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="['Python 3.11.5', '']=">
<arg>Set Variable</arg>
<arg>${matches[0]}</arg>
<msg timestamp="20230901 09:34:49.168" level="FAIL">No keyword with name '['Python 3.11.5', '']=' found.</msg>
<status status="FAIL" starttime="20230901 09:34:49.168" endtime="20230901 09:34:49.168"/>
</kw>
<status status="FAIL" starttime="20230901 09:34:49.166" endtime="20230901 09:34:49.168"/>
</kw>
<status status="FAIL" starttime="20230901 09:34:49.165" endtime="20230901 09:34:49.169"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' in 'pass;</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:19:28.947" level="FAIL">Evaluating expression ''PASS' in 'pass;' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:19:28.947" endtime="20230901 10:19:28.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' in 'pass'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 10:19:38.333" endtime="20230901 10:19:38.333"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' in 'PASS'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:19:49.512" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:19:49.512" endtime="20230901 10:19:49.512"/>
</kw>
<status status="FAIL" starttime="20230901 10:19:49.512" endtime="20230901 10:19:49.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' in 'pass'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 10:19:56.690" endtime="20230901 10:19:56.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Pass</arg>
<arg>Some Message</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 10:20:21.350" level="INFO">${status} = ['Pass', 'Some Message']</msg>
<status status="PASS" starttime="20230901 10:20:21.350" endtime="20230901 10:20:21.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' in ${status}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 10:20:40.228" endtime="20230901 10:20:40.228"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' in '${status}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:20:56.384" level="FAIL">Evaluating expression ''PASS' in '['Pass', 'Some Message']'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:20:56.383" endtime="20230901 10:20:56.384"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' IN '${status}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:21:47.483" level="FAIL">Evaluating expression ''PASS' IN '['Pass', 'Some Message']'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:21:47.483" endtime="20230901 10:21:47.483"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' IN '${status[0]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:21:57.564" level="FAIL">Evaluating expression ''PASS' IN 'Pass'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:21:57.563" endtime="20230901 10:21:57.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' IN ${status[0]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:22:06.363" level="FAIL">Evaluating expression ''PASS' IN Pass' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:22:06.362" endtime="20230901 10:22:06.363"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>PASS IN ${status[0]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:22:14.168" level="FAIL">Evaluating expression 'PASS IN Pass' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:22:14.168" endtime="20230901 10:22:14.169"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>PASS == ${status[0]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:22:20.516" level="FAIL">Evaluating expression 'PASS == Pass' failed: NameError: name 'PASS' is not defined nor importable as module</msg>
<status status="FAIL" starttime="20230901 10:22:20.514" endtime="20230901 10:22:20.516"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>PASS == ${status}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:22:39.437" level="FAIL">Evaluating expression 'PASS == ['Pass', 'Some Message']' failed: NameError: name 'PASS' is not defined nor importable as module</msg>
<status status="FAIL" starttime="20230901 10:22:39.437" endtime="20230901 10:22:39.438"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' = ${status[0]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:22:53.163" level="FAIL">Evaluating expression ''PASS' = Pass' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:22:53.162" endtime="20230901 10:22:53.163"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' = '${status[0]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:23:04.256" level="FAIL">Evaluating expression ''PASS' = 'Pass'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:23:04.255" endtime="20230901 10:23:04.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'PASS' = '${status[0]}'"</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:23:26.599" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:23:26.599" endtime="20230901 10:23:26.599"/>
</kw>
<status status="FAIL" starttime="20230901 10:23:26.598" endtime="20230901 10:23:26.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'PASS' IN '${status}'"</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:23:43.924" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:23:43.924" endtime="20230901 10:23:43.924"/>
</kw>
<status status="FAIL" starttime="20230901 10:23:43.923" endtime="20230901 10:23:43.924"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'PASS' IN '${status}'"</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:29:24.404" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:29:24.403" endtime="20230901 10:29:24.404"/>
</kw>
<status status="FAIL" starttime="20230901 10:29:24.403" endtime="20230901 10:29:24.404"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Fail</arg>
<arg>Fail</arg>
<arg>aaa</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 10:29:52.034" level="INFO">${status} = ['Fail', 'Fail', 'aaa']</msg>
<status status="PASS" starttime="20230901 10:29:52.034" endtime="20230901 10:29:52.034"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'PASS' IN '${status}'"</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:29:54.510" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:29:54.510" endtime="20230901 10:29:54.510"/>
</kw>
<status status="FAIL" starttime="20230901 10:29:54.509" endtime="20230901 10:29:54.510"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'PASS' IN ${status}"</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:30:06.300" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:30:06.300" endtime="20230901 10:30:06.300"/>
</kw>
<status status="FAIL" starttime="20230901 10:30:06.299" endtime="20230901 10:30:06.300"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' IN ${status}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:30:15.052" level="FAIL">Evaluating expression ''PASS' IN ['Fail', 'Fail', 'aaa']' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:30:15.052" endtime="20230901 10:30:15.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' IN ${status[0]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:30:27.945" level="FAIL">Evaluating expression ''PASS' IN Fail' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:30:27.944" endtime="20230901 10:30:27.945"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>Fail</arg>
<arg>Fail</arg>
<arg>PASS</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 10:30:38.767" level="INFO">${status} = ['Fail', 'Fail', 'PASS']</msg>
<status status="PASS" starttime="20230901 10:30:38.767" endtime="20230901 10:30:38.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' IN ${status[2]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:30:45.249" level="FAIL">Evaluating expression ''PASS' IN PASS' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:30:45.248" endtime="20230901 10:30:45.249"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' == ${status[2]}</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:30:54.991" level="FAIL">Evaluating expression ''PASS' == PASS' failed: NameError: name 'PASS' is not defined nor importable as module</msg>
<status status="FAIL" starttime="20230901 10:30:54.991" endtime="20230901 10:30:54.991"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'PASS' == '${status[2]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:31:06.376" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:31:06.376" endtime="20230901 10:31:06.376"/>
</kw>
<status status="FAIL" starttime="20230901 10:31:06.376" endtime="20230901 10:31:06.376"/>
</kw>
<kw name="${status} = ('PASS', 'ldd: /lib64/random.aaaaaaa.1: No such file or directory')">
<msg timestamp="20230901 10:34:19.974" level="FAIL">No keyword with name '${status} = ('PASS', 'ldd: /lib64/random.aaaaaaa.1: No such file or directory')' found.</msg>
<status status="FAIL" starttime="20230901 10:34:19.974" endtime="20230901 10:34:19.974"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>PASS ldd: /lib64/random.aaaaaaa.1: No such file or directory</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 10:34:55.389" level="INFO">${status} = PASS ldd: /lib64/random.aaaaaaa.1: No such file or directory</msg>
<status status="PASS" starttime="20230901 10:34:55.388" endtime="20230901 10:34:55.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${status}</var>
<arg>PASS</arg>
<arg>ldd: /lib64/random.aaaaaaa.1: No such file or directory</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 10:35:10.463" level="INFO">${status} = ['PASS', 'ldd: /lib64/random.aaaaaaa.1: No such file or directory']</msg>
<status status="PASS" starttime="20230901 10:35:10.463" endtime="20230901 10:35:10.463"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'No such file' in ${status[1]}</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:35:54.974" level="FAIL">Evaluating expression ''No such file' in ldd: /lib64/random.aaaaaaa.1: No such file or directory' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:35:54.973" endtime="20230901 10:35:54.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'No such file' in '${status[1]}'</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:36:04.309" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230901 10:36:04.309" endtime="20230901 10:36:04.309"/>
</kw>
<status status="FAIL" starttime="20230901 10:36:04.308" endtime="20230901 10:36:04.309"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'No such file' in '${status[1]}'"</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:36:34.753" level="FAIL">AssertionError</msg>
<status status="FAIL" starttime="20230901 10:36:34.753" endtime="20230901 10:36:34.753"/>
</kw>
<status status="FAIL" starttime="20230901 10:36:34.752" endtime="20230901 10:36:34.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'No such file' in '${status[1]}'"</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:36:44.765" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:36:44.765" endtime="20230901 10:36:44.765"/>
</kw>
<status status="FAIL" starttime="20230901 10:36:44.765" endtime="20230901 10:36:44.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'No such file' in '${status[1]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:36:54.665" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:36:54.665" endtime="20230901 10:36:54.666"/>
</kw>
<status status="FAIL" starttime="20230901 10:36:54.665" endtime="20230901 10:36:54.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'No AAAsuch file' in '${status[1]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 10:37:01.911" endtime="20230901 10:37:01.912"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'No such file' in '${status[1]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:37:12.801" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:37:12.801" endtime="20230901 10:37:12.802"/>
</kw>
<status status="FAIL" starttime="20230901 10:37:12.801" endtime="20230901 10:37:12.802"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'No such file' in '${status[1]}'</arg>
<arg>Fail</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Fail" library="BuiltIn">
<arg>Fail</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 10:48:35.996" level="FAIL">Fail</msg>
<status status="FAIL" starttime="20230901 10:48:35.995" endtime="20230901 10:48:35.996"/>
</kw>
<status status="FAIL" starttime="20230901 10:48:35.995" endtime="20230901 10:48:35.996"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${list}</var>
<arg>libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 10:48:52.661" level="INFO">${list} = libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1</msg>
<status status="PASS" starttime="20230901 10:48:52.661" endtime="20230901 10:48:52.661"/>
</kw>
<kw name="libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1">
<msg timestamp="20230901 10:48:52.662" level="FAIL">No keyword with name 'libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1' found.</msg>
<status status="FAIL" starttime="20230901 10:48:52.662" endtime="20230901 10:48:52.662"/>
</kw>
<kw name="libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2">
<status status="NOT RUN" starttime="20230901 10:48:52.663" endtime="20230901 10:48:52.663"/>
</kw>
<kw name="libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12">
<status status="NOT RUN" starttime="20230901 10:48:52.664" endtime="20230901 10:48:52.664"/>
</kw>
<kw name="libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1">
<status status="NOT RUN" starttime="20230901 10:48:52.665" endtime="20230901 10:48:52.665"/>
</kw>
<kw name="libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1">
<status status="NOT RUN" starttime="20230901 10:48:52.666" endtime="20230901 10:48:52.666"/>
</kw>
<kw name="libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2">
<status status="NOT RUN" starttime="20230901 10:48:52.668" endtime="20230901 10:48:52.668"/>
</kw>
<kw name="libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1">
<status status="NOT RUN" starttime="20230901 10:48:52.669" endtime="20230901 10:48:52.669"/>
</kw>
<kw name="libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1">
<status status="NOT RUN" starttime="20230901 10:48:52.670" endtime="20230901 10:48:52.670"/>
</kw>
<kw name="libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so">
<status status="NOT RUN" starttime="20230901 10:48:52.670" endtime="20230901 10:48:52.670"/>
</kw>
<kw name="libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2">
<status status="NOT RUN" starttime="20230901 10:48:52.671" endtime="20230901 10:48:52.671"/>
</kw>
<kw name="libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0">
<status status="NOT RUN" starttime="20230901 10:48:52.672" endtime="20230901 10:48:52.672"/>
</kw>
<kw name="libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0">
<status status="NOT RUN" starttime="20230901 10:48:52.673" endtime="20230901 10:48:52.673"/>
</kw>
<kw name="libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1">
<status status="NOT RUN" starttime="20230901 10:48:52.674" endtime="20230901 10:48:52.674"/>
</kw>
<kw name="libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0">
<status status="NOT RUN" starttime="20230901 10:48:52.675" endtime="20230901 10:48:52.675"/>
</kw>
<kw name="libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0">
<status status="NOT RUN" starttime="20230901 10:48:52.676" endtime="20230901 10:48:52.676"/>
</kw>
<kw name="libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0">
<status status="NOT RUN" starttime="20230901 10:48:52.677" endtime="20230901 10:48:52.677"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${list}</var>
<arg>scratchpad/library/library_data</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230901 10:50:13.256" level="INFO">${list} = libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libx...</msg>
<status status="PASS" starttime="20230901 10:50:13.256" endtime="20230901 10:50:13.256"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'libz' IN ${list}</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:51:05.143" level="FAIL">Evaluating expression ''libz' IN libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0' failed: SyntaxError: invalid decimal literal (&lt;string&gt;, line 3)</msg>
<status status="FAIL" starttime="20230901 10:51:05.143" endtime="20230901 10:51:05.143"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'libz' IN '${list}'</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:51:22.536" level="FAIL">Evaluating expression ''libz' IN 'libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0'' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:51:22.535" endtime="20230901 10:51:22.536"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'libz' IN '${list}'"</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:51:31.671" level="FAIL">Evaluating expression '"'libz' IN 'libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0'"' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:51:31.671" endtime="20230901 10:51:31.671"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"libz IN ${list}"</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:51:42.403" level="FAIL">Evaluating expression '"libz IN libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0"' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:51:42.403" endtime="20230901 10:51:42.403"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'libz' IN ${list}"</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:51:48.209" level="FAIL">Evaluating expression '"'libz' IN libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0"' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:51:48.208" endtime="20230901 10:51:48.209"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${list} Should Contain 'libz'</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:54:01.845" level="FAIL">Evaluating expression 'libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0 Should Contain 'libz'' failed: SyntaxError: invalid decimal literal (&lt;string&gt;, line 3)</msg>
<status status="FAIL" starttime="20230901 10:54:01.845" endtime="20230901 10:54:01.845"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${list}' Should Contain 'libz'</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:54:09.311" level="FAIL">Evaluating expression ''libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0' Should Contain 'libz'' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:54:09.311" endtime="20230901 10:54:09.311"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"'${list}' Should Contain 'libz'"</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:54:30.395" level="FAIL">Evaluating expression '"'libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0' Should Contain 'libz'"' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:54:30.395" endtime="20230901 10:54:30.395"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${list}' Should Contain libz</arg>
<arg>Fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<msg timestamp="20230901 10:54:50.059" level="FAIL">Evaluating expression ''libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1
	libyaml-0.so.2 (libc6,x86-64) =&gt; /lib64/libyaml-0.so.2
	libxtables.so.12 (libc6,x86-64) =&gt; /lib64/libxtables.so.12
	libxslt.so.1 (libc6,x86-64) =&gt; /lib64/libxslt.so.1
	libxshmfence.so.1 (libc6,x86-64) =&gt; /lib64/libxshmfence.so.1
	libxml2.so.2 (libc6,x86-64) =&gt; /lib64/libxml2.so.2
	libxmlsec1.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1.so.1
	libxmlsec1-openssl.so.1 (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so.1
	libxmlsec1-openssl.so (libc6,x86-64) =&gt; /lib64/libxmlsec1-openssl.so
	libxmlb.so.2 (libc6,x86-64) =&gt; /lib64/libxmlb.so.2
	libxkbregistry.so.0 (libc6,x86-64) =&gt; /lib64/libxkbregistry.so.0
	libxkbcommon.so.0 (libc6,x86-64) =&gt; /lib64/libxkbcommon.so.0
	libxcb.so.1 (libc6,x86-64) =&gt; /lib64/libxcb.so.1
	libxcb-xvmc.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xvmc.so.0
	libxcb-xv.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xv.so.0
	libxcb-xtest.so.0 (libc6,x86-64) =&gt; /lib64/libxcb-xtest.so.0' Should Contain libz' failed: SyntaxError: unterminated string literal (detected at line 1) (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 10:54:50.059" endtime="20230901 10:54:50.059"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${list}</arg>
<arg>libz</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230901 10:56:23.868" endtime="20230901 10:56:23.868"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:19:50.955" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:19:50.885" endtime="20230901 11:19:50.955"/>
</kw>
<kw name="Evaluate ${libz_version[0]} &gt;= ${desired_version}">
<var>${status}</var>
<msg timestamp="20230901 11:20:31.703" level="FAIL">No keyword with name 'Evaluate ${libz_version[0]} &gt;= ${desired_version}' found. Did you try using keyword 'BuiltIn.Evaluate' and forgot to use enough whitespace between keyword and arguments?</msg>
<status status="FAIL" starttime="20230901 11:20:31.703" endtime="20230901 11:20:31.703"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${libz_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 11:20:42.098" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20230901 11:20:42.098" endtime="20230901 11:20:42.098"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>1.2.7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:21:48.295" level="INFO">${desired_version} = 1.2.7.1</msg>
<status status="PASS" starttime="20230901 11:21:48.295" endtime="20230901 11:21:48.295"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${libz_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 11:21:50.117" level="FAIL">Evaluating expression '1 &gt;= 1.2.7.1' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 11:21:50.116" endtime="20230901 11:21:50.117"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${libz_version} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 11:22:02.897" level="FAIL">Evaluating expression '1.2.13 &gt;= 1.2.7.1' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)</msg>
<status status="FAIL" starttime="20230901 11:22:02.897" endtime="20230901 11:22:02.897"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:27:57.985" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:27:57.938" endtime="20230901 11:27:57.985"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:28:28.472" endtime="20230901 11:28:28.472"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^\\d+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:28:46.252" endtime="20230901 11:28:46.252"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^\\d+\\..*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:29:00.175" endtime="20230901 11:29:00.175"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^\\d+\\d+\\.(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:29:24.993" endtime="20230901 11:29:24.993"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^\\d+\\.\\d+\\.(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:29:48.215" endtime="20230901 11:29:48.215"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+\\).(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:30:02.390" level="FAIL">error: missing ), unterminated subpattern at position 1</msg>
<status status="FAIL" starttime="20230901 11:30:02.390" endtime="20230901 11:30:02.391"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>(\\d+\\.\\d+\\).(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:30:09.725" level="FAIL">error: missing ), unterminated subpattern at position 0</msg>
<status status="FAIL" starttime="20230901 11:30:09.725" endtime="20230901 11:30:09.726"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:30:22.573" endtime="20230901 11:30:22.573"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:30:30.246" endtime="20230901 11:30:30.246"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:33:21.682" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 11:33:21.682" endtime="20230901 11:33:21.682"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:33:21.682" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 11:33:21.682" endtime="20230901 11:33:21.682"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:33:21.727" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:33:21.682" endtime="20230901 11:33:21.728"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<var>${found+minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:33:21.728" level="FAIL">Cannot set variables: Expected 2 return values, got 1.</msg>
<status status="FAIL" starttime="20230901 11:33:21.728" endtime="20230901 11:33:21.728"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:33:53.812" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:33:53.766" endtime="20230901 11:33:53.812"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="PASS" starttime="20230901 11:34:05.625" endtime="20230901 11:34:05.625"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:34:40.074" level="INFO">${ff} = [('1.2', '13')]</msg>
<status status="PASS" starttime="20230901 11:34:40.074" endtime="20230901 11:34:40.074"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<var>${ff2}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:34:47.184" level="FAIL">Cannot set variables: Expected 2 return values, got 1.</msg>
<status status="FAIL" starttime="20230901 11:34:47.184" endtime="20230901 11:34:47.184"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<var>${ff2}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:35:20.194" level="FAIL">Cannot set variables: Expected 2 return values, got 1.</msg>
<status status="FAIL" starttime="20230901 11:35:20.194" endtime="20230901 11:35:20.194"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:35:48.746" level="INFO">${ff} = [('1.2', '13')]</msg>
<status status="PASS" starttime="20230901 11:35:48.745" endtime="20230901 11:35:48.746"/>
</kw>
<if>
<branch type="IF" condition="${ff[0]} &gt;= ${desired_major_version}">
<kw name="Fail test">
<status status="NOT RUN" starttime="20230901 11:36:45.854" endtime="20230901 11:36:45.854"/>
</kw>
<msg timestamp="20230901 11:36:45.854" level="FAIL">Invalid IF condition: Evaluating expression '('1.2', '13') &gt;= 1.2' failed: TypeError: '&gt;=' not supported between instances of 'tuple' and 'float'

Variables in the original expression '${ff[0]} &gt;= ${desired_major_version}' were resolved before the expression was evaluated. Try using '$ff[0] &gt;= $desired_major_version' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:36:45.852" endtime="20230901 11:36:45.854"/>
</branch>
<status status="FAIL" starttime="20230901 11:36:45.852" endtime="20230901 11:36:45.854"/>
</if>
<if>
<branch type="IF" condition="${ff[0]} &gt;= ${desired_major_version}">
<kw name="Fail test">
<status status="NOT RUN" starttime="20230901 11:37:09.035" endtime="20230901 11:37:09.035"/>
</kw>
<msg timestamp="20230901 11:37:09.035" level="FAIL">Invalid IF condition: Evaluating expression '('1.2', '13') &gt;= 1.2' failed: TypeError: '&gt;=' not supported between instances of 'tuple' and 'float'

Variables in the original expression '${ff[0]} &gt;= ${desired_major_version}' were resolved before the expression was evaluated. Try using '$ff[0] &gt;= $desired_major_version' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:37:09.033" endtime="20230901 11:37:09.035"/>
</branch>
<status status="FAIL" starttime="20230901 11:37:09.033" endtime="20230901 11:37:09.035"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:37:59.206" level="INFO">${ff} = ['1.2.13']</msg>
<status status="PASS" starttime="20230901 11:37:59.206" endtime="20230901 11:37:59.206"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:38:11.785" level="INFO">${ff} = ['1.2']</msg>
<status status="PASS" starttime="20230901 11:38:11.785" endtime="20230901 11:38:11.785"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:39:59.610" level="INFO">${ff} = ['13']</msg>
<status status="PASS" starttime="20230901 11:39:59.610" endtime="20230901 11:39:59.610"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${ff}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:40:09.132" level="INFO">${ff} = ['13']</msg>
<status status="PASS" starttime="20230901 11:40:09.132" endtime="20230901 11:40:09.132"/>
</kw>
<kw name="If" library="Reserved">
<arg>${ff} &gt;= ${desired_major_version}</arg>
<arg>Fail</arg>
<arg>test</arg>
<msg timestamp="20230901 11:40:58.787" level="FAIL">'If' is a reserved keyword. It must be an upper case 'IF' when used as a marker.</msg>
<status status="FAIL" starttime="20230901 11:40:58.787" endtime="20230901 11:40:58.787"/>
</kw>
<if>
<branch type="IF" condition="${ff} &gt;= ${desired_major_version}">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:41:07.720" endtime="20230901 11:41:07.720"/>
</kw>
<msg timestamp="20230901 11:41:07.720" level="FAIL">Invalid IF condition: Evaluating expression '['13'] &gt;= 1.2' failed: TypeError: '&gt;=' not supported between instances of 'list' and 'float'

Variables in the original expression '${ff} &gt;= ${desired_major_version}' were resolved before the expression was evaluated. Try using '$ff &gt;= $desired_major_version' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:41:07.720" endtime="20230901 11:41:07.720"/>
</branch>
<status status="FAIL" starttime="20230901 11:41:07.720" endtime="20230901 11:41:07.720"/>
</if>
<if>
<branch type="IF" condition="'${ff}' &gt;= ${desired_major_version}">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:41:29.523" endtime="20230901 11:41:29.523"/>
</kw>
<msg timestamp="20230901 11:41:29.523" level="FAIL">Invalid IF condition: Evaluating expression ''['13']' &gt;= 1.2' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)

Variables in the original expression ''${ff}' &gt;= ${desired_major_version}' were resolved before the expression was evaluated. Try using ''$ff' &gt;= $desired_major_version' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:41:29.523" endtime="20230901 11:41:29.523"/>
</branch>
<status status="FAIL" starttime="20230901 11:41:29.523" endtime="20230901 11:41:29.523"/>
</if>
<if>
<branch type="IF" condition="'${ff}' &gt;= '${desired_major_version}'">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:41:50.764" endtime="20230901 11:41:50.764"/>
</kw>
<msg timestamp="20230901 11:41:50.764" level="FAIL">Invalid IF condition: Evaluating expression ''['13']' &gt;= '1.2'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)

Variables in the original expression ''${ff}' &gt;= '${desired_major_version}'' were resolved before the expression was evaluated. Try using ''$ff' &gt;= '$desired_major_version'' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:41:50.764" endtime="20230901 11:41:50.764"/>
</branch>
<status status="FAIL" starttime="20230901 11:41:50.764" endtime="20230901 11:41:50.764"/>
</if>
<if>
<branch type="IF" condition="&quot;'${ff}' &gt;= '${desired_major_version}'&quot;">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:42:06.694" level="FAIL">test</msg>
<status status="FAIL" starttime="20230901 11:42:06.694" endtime="20230901 11:42:06.694"/>
</kw>
<status status="FAIL" starttime="20230901 11:42:06.694" endtime="20230901 11:42:06.694"/>
</branch>
<status status="FAIL" starttime="20230901 11:42:06.694" endtime="20230901 11:42:06.694"/>
</if>
<if>
<branch type="IF" condition="&quot;'${ff}' &gt;= '${desired_major_version}'&quot;">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:42:32.502" level="FAIL">test</msg>
<status status="FAIL" starttime="20230901 11:42:32.502" endtime="20230901 11:42:32.502"/>
</kw>
<status status="FAIL" starttime="20230901 11:42:32.502" endtime="20230901 11:42:32.503"/>
</branch>
<status status="FAIL" starttime="20230901 11:42:32.502" endtime="20230901 11:42:32.503"/>
</if>
<if>
<branch type="IF" condition="&quot;'${ff}' &gt;= '${desired_major_version}'&quot;">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:42:43.956" level="FAIL">test</msg>
<status status="FAIL" starttime="20230901 11:42:43.956" endtime="20230901 11:42:43.956"/>
</kw>
<status status="FAIL" starttime="20230901 11:42:43.955" endtime="20230901 11:42:43.956"/>
</branch>
<status status="FAIL" starttime="20230901 11:42:43.955" endtime="20230901 11:42:43.956"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>14</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:42:53.024" level="INFO">${desired_major_version} = 14</msg>
<status status="PASS" starttime="20230901 11:42:53.023" endtime="20230901 11:42:53.024"/>
</kw>
<if>
<branch type="IF" condition="&quot;'${ff}' &gt;= '${desired_major_version}'&quot;">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:42:55.004" level="FAIL">test</msg>
<status status="FAIL" starttime="20230901 11:42:55.004" endtime="20230901 11:42:55.004"/>
</kw>
<status status="FAIL" starttime="20230901 11:42:55.004" endtime="20230901 11:42:55.004"/>
</branch>
<status status="FAIL" starttime="20230901 11:42:55.004" endtime="20230901 11:42:55.004"/>
</if>
<if>
<branch type="IF" condition="'${ff[0]}' &gt;= '${desired_major_version}'">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:43:17.189" endtime="20230901 11:43:17.189"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:43:17.188" endtime="20230901 11:43:17.189"/>
</branch>
<status status="PASS" starttime="20230901 11:43:17.188" endtime="20230901 11:43:17.189"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>12</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:43:31.589" level="INFO">${desired_major_version} = 12</msg>
<status status="PASS" starttime="20230901 11:43:31.589" endtime="20230901 11:43:31.589"/>
</kw>
<if>
<branch type="IF" condition="'${ff[0]}' &gt;= '${desired_major_version}'">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:43:32.827" level="FAIL">test</msg>
<status status="FAIL" starttime="20230901 11:43:32.827" endtime="20230901 11:43:32.827"/>
</kw>
<status status="FAIL" starttime="20230901 11:43:32.827" endtime="20230901 11:43:32.827"/>
</branch>
<status status="FAIL" starttime="20230901 11:43:32.827" endtime="20230901 11:43:32.827"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:56:55.280" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 11:56:55.279" endtime="20230901 11:56:55.280"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:56:55.280" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 11:56:55.280" endtime="20230901 11:56:55.280"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:56:55.326" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:56:55.280" endtime="20230901 11:56:55.327"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:56:55.327" level="INFO">${found_major_version} = ['13']</msg>
<status status="PASS" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.327"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:56:55.327" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.327"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' = '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.327"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.327"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.327"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version}.${found_minor_version}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.328"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.328"/>
</branch>
<status status="NOT RUN" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.328"/>
</if>
<msg timestamp="20230901 11:56:55.328" level="FAIL">Invalid IF condition: Evaluating expression ''13' = '1.2'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)

Variables in the original expression ''${found_major_version[0]}' = '${desired_major_version}'' were resolved before the expression was evaluated. Try using ''$found_major_version[0]' = '$desired_major_version'' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.328"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:56:55.328" endtime="20230901 11:56:55.328"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:56:55.328" endtime="20230901 11:56:55.328"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:56:55.328" endtime="20230901 11:56:55.328"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:56:55.328" endtime="20230901 11:56:55.328"/>
</branch>
<status status="FAIL" starttime="20230901 11:56:55.327" endtime="20230901 11:56:55.328"/>
</if>
<kw name="Check libz library version">
<msg timestamp="20230901 11:57:38.990" level="FAIL">No keyword with name 'Check libz library version' found.</msg>
<status status="FAIL" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.990"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.990"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.990"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.990"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' = '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version}.${found_minor_version}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</branch>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.991"/>
</if>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.991"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:38.991" endtime="20230901 11:57:38.991"/>
</branch>
<status status="NOT RUN" starttime="20230901 11:57:38.990" endtime="20230901 11:57:38.991"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:57:45.929" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 11:57:45.929" endtime="20230901 11:57:45.929"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:57:45.929" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 11:57:45.929" endtime="20230901 11:57:45.929"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:57:45.976" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:57:45.930" endtime="20230901 11:57:45.976"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:57:45.977" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:57:45.977" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' = '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version}.${found_minor_version}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</branch>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</if>
<msg timestamp="20230901 11:57:45.977" level="FAIL">Invalid IF condition: Evaluating expression ''1.2' = '1.2'' failed: SyntaxError: invalid syntax (&lt;string&gt;, line 1)

Variables in the original expression ''${found_major_version[0]}' = '${desired_major_version}'' were resolved before the expression was evaluated. Try using ''$found_major_version[0]' = '$desired_major_version'' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.977"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:57:45.978" endtime="20230901 11:57:45.978"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:57:45.978" endtime="20230901 11:57:45.978"/>
</branch>
<status status="FAIL" starttime="20230901 11:57:45.977" endtime="20230901 11:57:45.978"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:58:05.845" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 11:58:05.845" endtime="20230901 11:58:05.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:58:05.845" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 11:58:05.845" endtime="20230901 11:58:05.845"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:58:05.890" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:58:05.845" endtime="20230901 11:58:05.890"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:58:05.890" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 11:58:05.890" endtime="20230901 11:58:05.890"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:58:05.890" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 11:58:05.890" endtime="20230901 11:58:05.890"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:58:05.891" endtime="20230901 11:58:05.891"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:58:05.890" endtime="20230901 11:58:05.891"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 11:58:05.891" endtime="20230901 11:58:05.891"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version}.${found_minor_version}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:58:05.891" level="FAIL">Incorrect version of Libz found ['1.2'].['13']</msg>
<status status="FAIL" starttime="20230901 11:58:05.891" endtime="20230901 11:58:05.891"/>
</kw>
<status status="FAIL" starttime="20230901 11:58:05.891" endtime="20230901 11:58:05.891"/>
</branch>
<status status="FAIL" starttime="20230901 11:58:05.890" endtime="20230901 11:58:05.891"/>
</if>
<status status="FAIL" starttime="20230901 11:58:05.890" endtime="20230901 11:58:05.892"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:58:05.892" endtime="20230901 11:58:05.892"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:58:05.892" endtime="20230901 11:58:05.892"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:58:05.892" endtime="20230901 11:58:05.892"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:58:05.892" endtime="20230901 11:58:05.892"/>
</branch>
<status status="FAIL" starttime="20230901 11:58:05.890" endtime="20230901 11:58:05.892"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:59:24.265" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 11:59:24.265" endtime="20230901 11:59:24.265"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 11:59:24.265" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 11:59:24.265" endtime="20230901 11:59:24.265"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 11:59:24.310" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 11:59:24.265" endtime="20230901 11:59:24.310"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:59:24.310" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 11:59:24.310" endtime="20230901 11:59:24.310"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 11:59:24.310" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 11:59:24.310" endtime="20230901 11:59:24.310"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:59:24.311" endtime="20230901 11:59:24.311"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:59:24.311" endtime="20230901 11:59:24.311"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 11:59:24.311" endtime="20230901 11:59:24.311"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 11:59:24.312" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 11:59:24.311" endtime="20230901 11:59:24.312"/>
</kw>
<status status="FAIL" starttime="20230901 11:59:24.311" endtime="20230901 11:59:24.312"/>
</branch>
<status status="FAIL" starttime="20230901 11:59:24.311" endtime="20230901 11:59:24.312"/>
</if>
<status status="FAIL" starttime="20230901 11:59:24.310" endtime="20230901 11:59:24.312"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 11:59:24.312" endtime="20230901 11:59:24.312"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:59:24.312" endtime="20230901 11:59:24.312"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 11:59:24.312" endtime="20230901 11:59:24.312"/>
</kw>
<status status="NOT RUN" starttime="20230901 11:59:24.312" endtime="20230901 11:59:24.312"/>
</branch>
<status status="FAIL" starttime="20230901 11:59:24.310" endtime="20230901 11:59:24.312"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:00:07.038" level="INFO">${desired_major_version} = 1.3</msg>
<status status="PASS" starttime="20230901 12:00:07.038" endtime="20230901 12:00:07.038"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:00:07.038" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:00:07.038" endtime="20230901 12:00:07.038"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:00:07.082" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:00:07.038" endtime="20230901 12:00:07.082"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:00:07.083" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:00:07.082" endtime="20230901 12:00:07.083"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:00:07.083" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</if>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.083"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:00:07.084" endtime="20230901 12:00:07.084"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.084"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:00:07.084" level="FAIL">Unknown Error</msg>
<status status="FAIL" starttime="20230901 12:00:07.084" endtime="20230901 12:00:07.084"/>
</kw>
<status status="FAIL" starttime="20230901 12:00:07.084" endtime="20230901 12:00:07.084"/>
</branch>
<status status="FAIL" starttime="20230901 12:00:07.083" endtime="20230901 12:00:07.084"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:00:48.795" level="INFO">${desired_major_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:00:48.795" endtime="20230901 12:00:48.795"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:00:48.795" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:00:48.795" endtime="20230901 12:00:48.795"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:00:48.840" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:00:48.795" endtime="20230901 12:00:48.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:00:48.840" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:00:48.840" endtime="20230901 12:00:48.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:00:48.840" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:00:48.840" endtime="20230901 12:00:48.840"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version}.${found_minor_version} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</if>
<status status="NOT RUN" starttime="20230901 12:00:48.840" endtime="20230901 12:00:48.841"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</kw>
<status status="PASS" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:00:48.841" endtime="20230901 12:00:48.841"/>
</branch>
<status status="PASS" starttime="20230901 12:00:48.840" endtime="20230901 12:00:48.841"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:01:58.228" level="INFO">${desired_major_version} = 1.</msg>
<status status="PASS" starttime="20230901 12:01:58.228" endtime="20230901 12:01:58.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:01:58.228" level="INFO">${desired_minor_version} = 7</msg>
<status status="PASS" starttime="20230901 12:01:58.228" endtime="20230901 12:01:58.228"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:01:58.276" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:01:58.228" endtime="20230901 12:01:58.276"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:01:58.276" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:01:58.276" endtime="20230901 12:01:58.276"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:01:58.276" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:01:58.276" endtime="20230901 12:01:58.276"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</if>
<status status="NOT RUN" starttime="20230901 12:01:58.276" endtime="20230901 12:01:58.277"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</kw>
<status status="PASS" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:01:58.277" endtime="20230901 12:01:58.277"/>
</branch>
<status status="PASS" starttime="20230901 12:01:58.276" endtime="20230901 12:01:58.277"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:02:59.743" level="INFO">${desired_major_version} = 1.</msg>
<status status="PASS" starttime="20230901 12:02:59.743" endtime="20230901 12:02:59.743"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:02:59.743" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:02:59.743" endtime="20230901 12:02:59.743"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:02:59.788" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:02:59.743" endtime="20230901 12:02:59.788"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:02:59.788" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.788"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:02:59.788" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.788"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.788"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.788"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:02:59.789" endtime="20230901 12:02:59.789"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:02:59.789" endtime="20230901 12:02:59.789"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.789"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.789"/>
</if>
<status status="NOT RUN" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.789"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:02:59.789" endtime="20230901 12:02:59.789"/>
</kw>
<status status="PASS" starttime="20230901 12:02:59.789" endtime="20230901 12:02:59.789"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:02:59.789" endtime="20230901 12:02:59.789"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:02:59.789" endtime="20230901 12:02:59.789"/>
</branch>
<status status="PASS" starttime="20230901 12:02:59.788" endtime="20230901 12:02:59.789"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:03:04.246" level="INFO">${desired_major_version} = 1.</msg>
<status status="PASS" starttime="20230901 12:03:04.246" endtime="20230901 12:03:04.246"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:03:04.246" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:03:04.246" endtime="20230901 12:03:04.246"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:03:04.290" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:03:04.246" endtime="20230901 12:03:04.290"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:03:04.291" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:03:04.291" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</if>
<status status="NOT RUN" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.291"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:03:04.292" endtime="20230901 12:03:04.292"/>
</kw>
<status status="PASS" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.292"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:03:04.292" endtime="20230901 12:03:04.292"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:03:04.292" endtime="20230901 12:03:04.292"/>
</branch>
<status status="PASS" starttime="20230901 12:03:04.291" endtime="20230901 12:03:04.292"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:03:44.571" level="INFO">${desired_major_version} = 1.</msg>
<status status="PASS" starttime="20230901 12:03:44.570" endtime="20230901 12:03:44.571"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:03:44.571" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:03:44.571" endtime="20230901 12:03:44.571"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:03:44.616" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:03:44.571" endtime="20230901 12:03:44.616"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:03:44.617" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:03:44.616" endtime="20230901 12:03:44.617"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:03:44.617" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Minor version is greater than required</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</if>
<status status="NOT RUN" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.617"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:03:44.618" endtime="20230901 12:03:44.618"/>
</kw>
<status status="PASS" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.618"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:03:44.618" endtime="20230901 12:03:44.618"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:03:44.618" endtime="20230901 12:03:44.618"/>
</branch>
<status status="PASS" starttime="20230901 12:03:44.617" endtime="20230901 12:03:44.618"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:04:00.819" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:04:00.819" endtime="20230901 12:04:00.819"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:04:00.820" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:04:00.820" endtime="20230901 12:04:00.820"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:04:00.865" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:04:00.820" endtime="20230901 12:04:00.865"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:04:00.865" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:04:00.865" endtime="20230901 12:04:00.865"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:04:00.865" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:04:00.865" endtime="20230901 12:04:00.865"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:04:00.866" endtime="20230901 12:04:00.866"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Minor version is greater than required</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:04:00.866" endtime="20230901 12:04:00.866"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:00.865" endtime="20230901 12:04:00.866"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:04:00.866" endtime="20230901 12:04:00.866"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:04:00.867" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:04:00.866" endtime="20230901 12:04:00.867"/>
</kw>
<status status="FAIL" starttime="20230901 12:04:00.866" endtime="20230901 12:04:00.867"/>
</branch>
<status status="FAIL" starttime="20230901 12:04:00.865" endtime="20230901 12:04:00.867"/>
</if>
<status status="FAIL" starttime="20230901 12:04:00.865" endtime="20230901 12:04:00.867"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:04:00.867" endtime="20230901 12:04:00.867"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:00.867" endtime="20230901 12:04:00.867"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:04:00.867" endtime="20230901 12:04:00.867"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:00.867" endtime="20230901 12:04:00.867"/>
</branch>
<status status="FAIL" starttime="20230901 12:04:00.865" endtime="20230901 12:04:00.867"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:04:31.288" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:04:31.288" endtime="20230901 12:04:31.288"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:04:31.288" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:04:31.288" endtime="20230901 12:04:31.288"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:04:31.333" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:04:31.288" endtime="20230901 12:04:31.333"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:04:31.333" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:04:31.333" endtime="20230901 12:04:31.333"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:04:31.333" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:04:31.333" endtime="20230901 12:04:31.333"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:04:31.334" endtime="20230901 12:04:31.334"/>
</kw>
<status status="PASS" starttime="20230901 12:04:31.334" endtime="20230901 12:04:31.334"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:04:31.334" endtime="20230901 12:04:31.334"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:04:31.334" endtime="20230901 12:04:31.334"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:31.334" endtime="20230901 12:04:31.334"/>
</branch>
<status status="PASS" starttime="20230901 12:04:31.334" endtime="20230901 12:04:31.335"/>
</if>
<status status="PASS" starttime="20230901 12:04:31.333" endtime="20230901 12:04:31.335"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:04:31.335" endtime="20230901 12:04:31.335"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:31.335" endtime="20230901 12:04:31.335"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:04:31.335" endtime="20230901 12:04:31.335"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:31.335" endtime="20230901 12:04:31.335"/>
</branch>
<status status="PASS" starttime="20230901 12:04:31.333" endtime="20230901 12:04:31.335"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:04:48.071" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:04:48.071" endtime="20230901 12:04:48.071"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>14.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:04:48.072" level="INFO">${desired_minor_version} = 14.1</msg>
<status status="PASS" starttime="20230901 12:04:48.071" endtime="20230901 12:04:48.072"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:04:48.118" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:04:48.072" endtime="20230901 12:04:48.118"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:04:48.119" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.119"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:04:48.119" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.119"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.120"/>
</kw>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.120"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</branch>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.120"/>
</if>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.120"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:04:48.120" endtime="20230901 12:04:48.120"/>
</branch>
<status status="PASS" starttime="20230901 12:04:48.119" endtime="20230901 12:04:48.120"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:05:41.807" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:05:41.807" endtime="20230901 12:05:41.807"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>14.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:05:41.807" level="INFO">${desired_minor_version} = 14.1</msg>
<status status="PASS" starttime="20230901 12:05:41.807" endtime="20230901 12:05:41.807"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:05:41.853" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:05:41.807" endtime="20230901 12:05:41.853"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:05:41.853" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:05:41.853" endtime="20230901 12:05:41.853"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:05:41.853" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:05:41.853" endtime="20230901 12:05:41.853"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:05:41.854" endtime="20230901 12:05:41.854"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:05:41.855" level="FAIL">Major meets requirements, and Minor is greater</msg>
<status status="FAIL" starttime="20230901 12:05:41.854" endtime="20230901 12:05:41.855"/>
</kw>
<status status="FAIL" starttime="20230901 12:05:41.854" endtime="20230901 12:05:41.855"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</branch>
<status status="FAIL" starttime="20230901 12:05:41.854" endtime="20230901 12:05:41.855"/>
</if>
<status status="FAIL" starttime="20230901 12:05:41.853" endtime="20230901 12:05:41.855"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:05:41.855" endtime="20230901 12:05:41.855"/>
</branch>
<status status="FAIL" starttime="20230901 12:05:41.853" endtime="20230901 12:05:41.855"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:05:57.836" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:05:57.836" endtime="20230901 12:05:57.836"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>14.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:05:57.837" level="INFO">${desired_minor_version} = 14.1</msg>
<status status="PASS" starttime="20230901 12:05:57.837" endtime="20230901 12:05:57.837"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:05:57.881" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:05:57.837" endtime="20230901 12:05:57.881"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:05:57.881" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:05:57.881" endtime="20230901 12:05:57.881"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:05:57.881" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:05:57.881" endtime="20230901 12:05:57.881"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:05:57.882" endtime="20230901 12:05:57.882"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:05:57.883" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:05:57.882" endtime="20230901 12:05:57.883"/>
</kw>
<status status="FAIL" starttime="20230901 12:05:57.882" endtime="20230901 12:05:57.883"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</branch>
<status status="FAIL" starttime="20230901 12:05:57.882" endtime="20230901 12:05:57.883"/>
</if>
<status status="FAIL" starttime="20230901 12:05:57.881" endtime="20230901 12:05:57.883"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:05:57.883" endtime="20230901 12:05:57.883"/>
</branch>
<status status="FAIL" starttime="20230901 12:05:57.881" endtime="20230901 12:05:57.883"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:06:20.912" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:06:20.912" endtime="20230901 12:06:20.912"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>99.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:06:20.912" level="INFO">${desired_minor_version} = 99.1</msg>
<status status="PASS" starttime="20230901 12:06:20.912" endtime="20230901 12:06:20.912"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:06:20.958" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:06:20.912" endtime="20230901 12:06:20.958"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:06:20.958" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:06:20.958" endtime="20230901 12:06:20.958"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:06:20.958" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:06:20.958" endtime="20230901 12:06:20.958"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:06:20.959" endtime="20230901 12:06:20.959"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:06:20.960" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:06:20.959" endtime="20230901 12:06:20.960"/>
</kw>
<status status="FAIL" starttime="20230901 12:06:20.959" endtime="20230901 12:06:20.960"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</branch>
<status status="FAIL" starttime="20230901 12:06:20.958" endtime="20230901 12:06:20.960"/>
</if>
<status status="FAIL" starttime="20230901 12:06:20.958" endtime="20230901 12:06:20.960"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:20.960" endtime="20230901 12:06:20.960"/>
</branch>
<status status="FAIL" starttime="20230901 12:06:20.958" endtime="20230901 12:06:20.960"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:06:35.017" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:06:35.017" endtime="20230901 12:06:35.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:06:35.017" level="INFO">${desired_minor_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:06:35.017" endtime="20230901 12:06:35.017"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:06:35.063" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:06:35.017" endtime="20230901 12:06:35.063"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:06:35.064" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.064"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:06:35.064" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.064"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.065"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:06:35.065" endtime="20230901 12:06:35.065"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.065"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:06:35.065" endtime="20230901 12:06:35.065"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:06:35.066" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:06:35.065" endtime="20230901 12:06:35.066"/>
</kw>
<status status="FAIL" starttime="20230901 12:06:35.065" endtime="20230901 12:06:35.066"/>
</branch>
<status status="FAIL" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.066"/>
</if>
<status status="FAIL" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.066"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:06:35.066" endtime="20230901 12:06:35.066"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:35.066" endtime="20230901 12:06:35.066"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:06:35.066" endtime="20230901 12:06:35.066"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:35.066" endtime="20230901 12:06:35.066"/>
</branch>
<status status="FAIL" starttime="20230901 12:06:35.064" endtime="20230901 12:06:35.066"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:06:55.266" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:06:55.266" endtime="20230901 12:06:55.266"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:06:55.266" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:06:55.266" endtime="20230901 12:06:55.266"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:06:55.312" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:06:55.266" endtime="20230901 12:06:55.312"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:06:55.312" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:06:55.312" endtime="20230901 12:06:55.312"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:06:55.312" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:06:55.312" endtime="20230901 12:06:55.312"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &lt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:06:55.313" endtime="20230901 12:06:55.314"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:06:55.314" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</kw>
<status status="FAIL" starttime="20230901 12:06:55.313" endtime="20230901 12:06:55.314"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</branch>
<status status="FAIL" starttime="20230901 12:06:55.313" endtime="20230901 12:06:55.314"/>
</if>
<status status="FAIL" starttime="20230901 12:06:55.312" endtime="20230901 12:06:55.314"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:06:55.314" endtime="20230901 12:06:55.314"/>
</branch>
<status status="FAIL" starttime="20230901 12:06:55.312" endtime="20230901 12:06:55.314"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:07:14.121" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:07:14.121" endtime="20230901 12:07:14.121"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:07:14.122" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:07:14.121" endtime="20230901 12:07:14.122"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:07:14.167" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:07:14.122" endtime="20230901 12:07:14.167"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:07:14.167" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:07:14.167" endtime="20230901 12:07:14.167"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:07:14.167" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:07:14.167" endtime="20230901 12:07:14.167"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:07:14.168" endtime="20230901 12:07:14.168"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:07:14.168" endtime="20230901 12:07:14.168"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:07:14.167" endtime="20230901 12:07:14.168"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:07:14.168" endtime="20230901 12:07:14.168"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:07:14.169" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:07:14.168" endtime="20230901 12:07:14.169"/>
</kw>
<status status="FAIL" starttime="20230901 12:07:14.168" endtime="20230901 12:07:14.169"/>
</branch>
<status status="FAIL" starttime="20230901 12:07:14.167" endtime="20230901 12:07:14.169"/>
</if>
<status status="FAIL" starttime="20230901 12:07:14.167" endtime="20230901 12:07:14.169"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:07:14.169" endtime="20230901 12:07:14.169"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:07:14.169" endtime="20230901 12:07:14.169"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:07:14.169" endtime="20230901 12:07:14.169"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:07:14.169" endtime="20230901 12:07:14.169"/>
</branch>
<status status="FAIL" starttime="20230901 12:07:14.167" endtime="20230901 12:07:14.169"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:08:12.565" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:08:12.564" endtime="20230901 12:08:12.565"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:08:12.565" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:08:12.565" endtime="20230901 12:08:12.565"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:08:12.610" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:08:12.565" endtime="20230901 12:08:12.610"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:08:12.610" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:08:12.610" endtime="20230901 12:08:12.610"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:08:12.610" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:08:12.610" endtime="20230901 12:08:12.610"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]}' &gt; '${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.611"/>
</kw>
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.611"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.611"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.611"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.612"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:08:12.612" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:08:12.612" endtime="20230901 12:08:12.612"/>
</kw>
<status status="FAIL" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.612"/>
</branch>
<status status="FAIL" starttime="20230901 12:08:12.611" endtime="20230901 12:08:12.612"/>
</if>
<status status="FAIL" starttime="20230901 12:08:12.610" endtime="20230901 12:08:12.612"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:08:12.612" endtime="20230901 12:08:12.612"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:08:12.612" endtime="20230901 12:08:12.613"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:08:12.613" endtime="20230901 12:08:12.613"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:08:12.613" endtime="20230901 12:08:12.613"/>
</branch>
<status status="FAIL" starttime="20230901 12:08:12.610" endtime="20230901 12:08:12.613"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:08:51.347" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:08:51.347" endtime="20230901 12:08:51.347"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:08:51.347" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:08:51.347" endtime="20230901 12:08:51.347"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:08:51.391" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:08:51.347" endtime="20230901 12:08:51.391"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:08:51.391" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:08:51.391" endtime="20230901 12:08:51.391"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:08:51.392" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:08:51.391" endtime="20230901 12:08:51.392"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:08:51.392" endtime="20230901 12:08:51.392"/>
</kw>
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt; '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:08:51.393" endtime="20230901 12:08:51.393"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:08:51.393" endtime="20230901 12:08:51.393"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:08:51.392" endtime="20230901 12:08:51.393"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:08:51.393" endtime="20230901 12:08:51.393"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:08:51.394" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:08:51.393" endtime="20230901 12:08:51.394"/>
</kw>
<status status="FAIL" starttime="20230901 12:08:51.393" endtime="20230901 12:08:51.394"/>
</branch>
<status status="FAIL" starttime="20230901 12:08:51.392" endtime="20230901 12:08:51.394"/>
</if>
<status status="FAIL" starttime="20230901 12:08:51.392" endtime="20230901 12:08:51.394"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:08:51.394" endtime="20230901 12:08:51.394"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:08:51.394" endtime="20230901 12:08:51.394"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:08:51.394" endtime="20230901 12:08:51.394"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:08:51.394" endtime="20230901 12:08:51.394"/>
</branch>
<status status="FAIL" starttime="20230901 12:08:51.392" endtime="20230901 12:08:51.394"/>
</if>
<kw name="Evaluate" library="BuiltIn">
<arg>13 &gt; 7.1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230901 12:09:56.451" endtime="20230901 12:09:56.451"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:10:33.376" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:10:33.376" endtime="20230901 12:10:33.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:10:33.376" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:10:33.376" endtime="20230901 12:10:33.376"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:10:33.421" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:10:33.376" endtime="20230901 12:10:33.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:10:33.421" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:10:33.421" endtime="20230901 12:10:33.421"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:10:33.421" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:10:33.421" endtime="20230901 12:10:33.421"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.422"/>
</kw>
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt;= '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.422"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.422"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.422"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.423"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:10:33.423" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:10:33.423" endtime="20230901 12:10:33.423"/>
</kw>
<status status="FAIL" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.423"/>
</branch>
<status status="FAIL" starttime="20230901 12:10:33.422" endtime="20230901 12:10:33.423"/>
</if>
<status status="FAIL" starttime="20230901 12:10:33.421" endtime="20230901 12:10:33.423"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:10:33.423" endtime="20230901 12:10:33.423"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:10:33.423" endtime="20230901 12:10:33.423"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:10:33.423" endtime="20230901 12:10:33.423"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:10:33.423" endtime="20230901 12:10:33.423"/>
</branch>
<status status="FAIL" starttime="20230901 12:10:33.421" endtime="20230901 12:10:33.423"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:10:52.759" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:10:52.759" endtime="20230901 12:10:52.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:10:52.759" level="INFO">${desired_minor_version} = 7</msg>
<status status="PASS" starttime="20230901 12:10:52.759" endtime="20230901 12:10:52.759"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:10:52.804" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:10:52.759" endtime="20230901 12:10:52.804"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:10:52.804" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:10:52.804" endtime="20230901 12:10:52.804"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:10:52.804" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:10:52.804" endtime="20230901 12:10:52.804"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:10:52.804" endtime="20230901 12:10:52.805"/>
</kw>
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt;= '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:10:52.805" endtime="20230901 12:10:52.805"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:10:52.805" endtime="20230901 12:10:52.805"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:10:52.805" endtime="20230901 12:10:52.805"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:10:52.805" endtime="20230901 12:10:52.806"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:10:52.806" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:10:52.806" endtime="20230901 12:10:52.806"/>
</kw>
<status status="FAIL" starttime="20230901 12:10:52.805" endtime="20230901 12:10:52.806"/>
</branch>
<status status="FAIL" starttime="20230901 12:10:52.805" endtime="20230901 12:10:52.806"/>
</if>
<status status="FAIL" starttime="20230901 12:10:52.804" endtime="20230901 12:10:52.806"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:10:52.806" endtime="20230901 12:10:52.806"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:10:52.806" endtime="20230901 12:10:52.806"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:10:52.806" endtime="20230901 12:10:52.806"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:10:52.806" endtime="20230901 12:10:52.806"/>
</branch>
<status status="FAIL" starttime="20230901 12:10:52.804" endtime="20230901 12:10:52.806"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:12:43.905" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:12:43.905" endtime="20230901 12:12:43.905"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:12:43.905" level="INFO">${desired_minor_version} = 7</msg>
<status status="PASS" starttime="20230901 12:12:43.905" endtime="20230901 12:12:43.905"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:12:43.950" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:12:43.905" endtime="20230901 12:12:43.950"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:12:43.951" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:12:43.951" endtime="20230901 12:12:43.951"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:12:43.951" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:12:43.951" endtime="20230901 12:12:43.951"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:12:43.951" endtime="20230901 12:12:43.952"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>'${found_minor_version[0]}' &gt;= '${desired_minor_version}'</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:12:43.952" level="INFO">${log} = False</msg>
<status status="PASS" starttime="20230901 12:12:43.952" endtime="20230901 12:12:43.952"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:12:43.952" endtime="20230901 12:12:43.952"/>
</kw>
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt;= '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:12:43.953" endtime="20230901 12:12:43.953"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:12:43.953" endtime="20230901 12:12:43.953"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:12:43.952" endtime="20230901 12:12:43.953"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:12:43.953" endtime="20230901 12:12:43.953"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:12:43.954" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:12:43.953" endtime="20230901 12:12:43.954"/>
</kw>
<status status="FAIL" starttime="20230901 12:12:43.953" endtime="20230901 12:12:43.954"/>
</branch>
<status status="FAIL" starttime="20230901 12:12:43.952" endtime="20230901 12:12:43.954"/>
</if>
<status status="FAIL" starttime="20230901 12:12:43.951" endtime="20230901 12:12:43.954"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:12:43.954" endtime="20230901 12:12:43.954"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:12:43.954" endtime="20230901 12:12:43.954"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:12:43.954" endtime="20230901 12:12:43.954"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:12:43.954" endtime="20230901 12:12:43.954"/>
</branch>
<status status="FAIL" starttime="20230901 12:12:43.951" endtime="20230901 12:12:43.954"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:13:12.745" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:13:12.745" endtime="20230901 12:13:12.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:13:12.745" level="INFO">${desired_minor_version} = 7</msg>
<status status="PASS" starttime="20230901 12:13:12.745" endtime="20230901 12:13:12.745"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:13:12.790" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:13:12.745" endtime="20230901 12:13:12.790"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:13:12.790" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:13:12.790" endtime="20230901 12:13:12.790"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:13:12.790" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:13:12.790" endtime="20230901 12:13:12.790"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:13:12.791" endtime="20230901 12:13:12.791"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:13:12.791" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:13:12.791" endtime="20230901 12:13:12.791"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:13:12.791" endtime="20230901 12:13:12.791"/>
</kw>
<if>
<branch type="IF" condition="'${found_minor_version[0]}' &gt;= '${desired_minor_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:13:12.792" endtime="20230901 12:13:12.792"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:13:12.792" endtime="20230901 12:13:12.792"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:12.791" endtime="20230901 12:13:12.792"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:13:12.792" endtime="20230901 12:13:12.792"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:13:12.793" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:13:12.792" endtime="20230901 12:13:12.793"/>
</kw>
<status status="FAIL" starttime="20230901 12:13:12.792" endtime="20230901 12:13:12.793"/>
</branch>
<status status="FAIL" starttime="20230901 12:13:12.791" endtime="20230901 12:13:12.793"/>
</if>
<status status="FAIL" starttime="20230901 12:13:12.790" endtime="20230901 12:13:12.793"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:13:12.793" endtime="20230901 12:13:12.793"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:12.793" endtime="20230901 12:13:12.793"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:13:12.793" endtime="20230901 12:13:12.793"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:12.793" endtime="20230901 12:13:12.793"/>
</branch>
<status status="FAIL" starttime="20230901 12:13:12.790" endtime="20230901 12:13:12.793"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:13:32.791" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:13:32.791" endtime="20230901 12:13:32.791"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:13:32.791" level="INFO">${desired_minor_version} = 7</msg>
<status status="PASS" starttime="20230901 12:13:32.791" endtime="20230901 12:13:32.791"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:13:32.837" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:13:32.791" endtime="20230901 12:13:32.837"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:13:32.838" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:13:32.837" endtime="20230901 12:13:32.838"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:13:32.838" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:13:32.838" endtime="20230901 12:13:32.838"/>
</kw>
<if>
<branch type="IF" condition="'${found_major_version[0]}' == '${desired_major_version}'">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:13:32.838" endtime="20230901 12:13:32.839"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:13:32.839" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:13:32.839" endtime="20230901 12:13:32.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:13:32.839" endtime="20230901 12:13:32.839"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:13:32.839" endtime="20230901 12:13:32.840"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:13:32.840" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:13:32.840" endtime="20230901 12:13:32.840"/>
</kw>
<status status="FAIL" starttime="20230901 12:13:32.839" endtime="20230901 12:13:32.840"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:13:32.840" endtime="20230901 12:13:32.840"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:13:32.840" endtime="20230901 12:13:32.840"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:32.840" endtime="20230901 12:13:32.840"/>
</branch>
<status status="FAIL" starttime="20230901 12:13:32.839" endtime="20230901 12:13:32.840"/>
</if>
<status status="FAIL" starttime="20230901 12:13:32.838" endtime="20230901 12:13:32.841"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:13:32.841" endtime="20230901 12:13:32.841"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:32.841" endtime="20230901 12:13:32.841"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:13:32.841" endtime="20230901 12:13:32.841"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:32.841" endtime="20230901 12:13:32.841"/>
</branch>
<status status="FAIL" starttime="20230901 12:13:32.838" endtime="20230901 12:13:32.841"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:13:52.391" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:13:52.391" endtime="20230901 12:13:52.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:13:52.391" level="INFO">${desired_minor_version} = 7</msg>
<status status="PASS" starttime="20230901 12:13:52.391" endtime="20230901 12:13:52.391"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:13:52.436" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:13:52.391" endtime="20230901 12:13:52.436"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:13:52.436" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:13:52.436" endtime="20230901 12:13:52.436"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:13:52.436" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:13:52.436" endtime="20230901 12:13:52.436"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:13:52.437" endtime="20230901 12:13:52.437"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:13:52.438" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:13:52.437" endtime="20230901 12:13:52.438"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:13:52.438" endtime="20230901 12:13:52.438"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:13:52.438" endtime="20230901 12:13:52.438"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:13:52.439" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:13:52.438" endtime="20230901 12:13:52.439"/>
</kw>
<status status="FAIL" starttime="20230901 12:13:52.438" endtime="20230901 12:13:52.439"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</branch>
<status status="FAIL" starttime="20230901 12:13:52.438" endtime="20230901 12:13:52.439"/>
</if>
<status status="FAIL" starttime="20230901 12:13:52.437" endtime="20230901 12:13:52.439"/>
</branch>
<branch type="ELSE IF" condition="'${found_major_version[0]}' &gt; '${desired_major_version}'">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:13:52.439" endtime="20230901 12:13:52.439"/>
</branch>
<status status="FAIL" starttime="20230901 12:13:52.436" endtime="20230901 12:13:52.439"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:14:25.239" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:14:25.239" endtime="20230901 12:14:25.239"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:14:25.239" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:14:25.239" endtime="20230901 12:14:25.239"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:14:25.285" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:14:25.239" endtime="20230901 12:14:25.285"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:14:25.286" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:14:25.286" endtime="20230901 12:14:25.286"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:14:25.286" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:14:25.286" endtime="20230901 12:14:25.286"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:14:25.286" endtime="20230901 12:14:25.287"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:14:25.287" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:14:25.287" endtime="20230901 12:14:25.287"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:14:25.287" endtime="20230901 12:14:25.287"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:14:25.288" endtime="20230901 12:14:25.288"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:14:25.288" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:14:25.288" endtime="20230901 12:14:25.288"/>
</kw>
<status status="FAIL" starttime="20230901 12:14:25.287" endtime="20230901 12:14:25.288"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:14:25.289" endtime="20230901 12:14:25.289"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:14:25.289" endtime="20230901 12:14:25.289"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:14:25.288" endtime="20230901 12:14:25.289"/>
</branch>
<status status="FAIL" starttime="20230901 12:14:25.287" endtime="20230901 12:14:25.289"/>
</if>
<status status="FAIL" starttime="20230901 12:14:25.286" endtime="20230901 12:14:25.289"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:14:25.289" endtime="20230901 12:14:25.289"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:14:25.289" endtime="20230901 12:14:25.289"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:14:25.289" endtime="20230901 12:14:25.289"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:14:25.289" endtime="20230901 12:14:25.289"/>
</branch>
<status status="FAIL" starttime="20230901 12:14:25.286" endtime="20230901 12:14:25.289"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:14:37.507" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:14:37.507" endtime="20230901 12:14:37.507"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>19.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:14:37.507" level="INFO">${desired_minor_version} = 19.1</msg>
<status status="PASS" starttime="20230901 12:14:37.507" endtime="20230901 12:14:37.507"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:14:37.552" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:14:37.507" endtime="20230901 12:14:37.552"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:14:37.552" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:14:37.552" endtime="20230901 12:14:37.552"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:14:37.552" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:14:37.552" endtime="20230901 12:14:37.552"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:14:37.553" endtime="20230901 12:14:37.553"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:14:37.553" level="INFO">${log} = False</msg>
<status status="PASS" starttime="20230901 12:14:37.553" endtime="20230901 12:14:37.553"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:14:37.553" endtime="20230901 12:14:37.554"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.554"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.554"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.554"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.554"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Incorrect version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:14:37.555" level="FAIL">Incorrect version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.555"/>
</kw>
<status status="FAIL" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.555"/>
</branch>
<status status="FAIL" starttime="20230901 12:14:37.554" endtime="20230901 12:14:37.555"/>
</if>
<status status="FAIL" starttime="20230901 12:14:37.552" endtime="20230901 12:14:37.555"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:14:37.555" endtime="20230901 12:14:37.555"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:14:37.555" endtime="20230901 12:14:37.555"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:14:37.555" endtime="20230901 12:14:37.555"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:14:37.555" endtime="20230901 12:14:37.555"/>
</branch>
<status status="FAIL" starttime="20230901 12:14:37.552" endtime="20230901 12:14:37.555"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:15:31.715" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:15:31.714" endtime="20230901 12:15:31.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:15:31.715" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:15:31.715" endtime="20230901 12:15:31.715"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:15:31.759" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:15:31.715" endtime="20230901 12:15:31.759"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:15:31.759" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:15:31.759" endtime="20230901 12:15:31.759"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:15:31.759" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:15:31.759" endtime="20230901 12:15:31.759"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:15:31.760" endtime="20230901 12:15:31.760"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:15:31.760" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:15:31.760" endtime="20230901 12:15:31.760"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:15:31.761" endtime="20230901 12:15:31.761"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:15:31.761" endtime="20230901 12:15:31.761"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:15:31.762" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:15:31.761" endtime="20230901 12:15:31.762"/>
</kw>
<status status="FAIL" starttime="20230901 12:15:31.761" endtime="20230901 12:15:31.762"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</branch>
<status status="FAIL" starttime="20230901 12:15:31.761" endtime="20230901 12:15:31.762"/>
</if>
<status status="FAIL" starttime="20230901 12:15:31.759" endtime="20230901 12:15:31.762"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:15:31.762" endtime="20230901 12:15:31.762"/>
</branch>
<status status="FAIL" starttime="20230901 12:15:31.759" endtime="20230901 12:15:31.762"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>11.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:15:41.271" level="INFO">${desired_major_version} = 11.2</msg>
<status status="PASS" starttime="20230901 12:15:41.271" endtime="20230901 12:15:41.271"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:15:41.271" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:15:41.271" endtime="20230901 12:15:41.271"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:15:41.316" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:15:41.271" endtime="20230901 12:15:41.316"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:15:41.316" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:15:41.316" endtime="20230901 12:15:41.316"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:15:41.317" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</if>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.317"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:15:41.318" endtime="20230901 12:15:41.318"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.318"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unknown Error</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:15:41.318" level="FAIL">Unknown Error</msg>
<status status="FAIL" starttime="20230901 12:15:41.318" endtime="20230901 12:15:41.318"/>
</kw>
<status status="FAIL" starttime="20230901 12:15:41.318" endtime="20230901 12:15:41.318"/>
</branch>
<status status="FAIL" starttime="20230901 12:15:41.317" endtime="20230901 12:15:41.318"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:16:04.878" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:16:04.878" endtime="20230901 12:16:04.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:16:04.878" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:16:04.878" endtime="20230901 12:16:04.878"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:16:04.922" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:16:04.878" endtime="20230901 12:16:04.922"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:16:04.922" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:16:04.922" endtime="20230901 12:16:04.922"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:16:04.922" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:16:04.922" endtime="20230901 12:16:04.922"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:16:04.922" endtime="20230901 12:16:04.924"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:16:04.924" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:16:04.924" endtime="20230901 12:16:04.924"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:16:04.924" endtime="20230901 12:16:04.924"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:16:04.925" endtime="20230901 12:16:04.925"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:16:04.926" level="FAIL">Major meets requirements, and Minor is greater 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:16:04.925" endtime="20230901 12:16:04.926"/>
</kw>
<status status="FAIL" starttime="20230901 12:16:04.924" endtime="20230901 12:16:04.926"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</branch>
<status status="FAIL" starttime="20230901 12:16:04.924" endtime="20230901 12:16:04.926"/>
</if>
<status status="FAIL" starttime="20230901 12:16:04.922" endtime="20230901 12:16:04.926"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:16:04.926" endtime="20230901 12:16:04.926"/>
</branch>
<status status="FAIL" starttime="20230901 12:16:04.922" endtime="20230901 12:16:04.926"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:18:07.231" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:18:07.231" endtime="20230901 12:18:07.231"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:18:07.231" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:18:07.231" endtime="20230901 12:18:07.231"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:18:07.276" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:18:07.231" endtime="20230901 12:18:07.276"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:18:07.276" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:18:07.276" endtime="20230901 12:18:07.276"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:18:07.276" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:18:07.276" endtime="20230901 12:18:07.276"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:18:07.277" endtime="20230901 12:18:07.277"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:18:07.278" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:18:07.277" endtime="20230901 12:18:07.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:18:07.278" endtime="20230901 12:18:07.278"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:18:07.278" endtime="20230901 12:18:07.279"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</kw>
<status status="PASS" starttime="20230901 12:18:07.278" endtime="20230901 12:18:07.279"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</branch>
<status status="PASS" starttime="20230901 12:18:07.278" endtime="20230901 12:18:07.279"/>
</if>
<status status="PASS" starttime="20230901 12:18:07.277" endtime="20230901 12:18:07.279"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Pass Execution</arg>
<arg>Major versiaon ${found_major_version[0]} is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:18:07.279" endtime="20230901 12:18:07.279"/>
</branch>
<status status="PASS" starttime="20230901 12:18:07.276" endtime="20230901 12:18:07.279"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:18:20.795" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:18:20.795" endtime="20230901 12:18:20.795"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:18:20.795" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:18:20.795" endtime="20230901 12:18:20.795"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:18:20.839" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:18:20.795" endtime="20230901 12:18:20.839"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:18:20.840" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:18:20.839" endtime="20230901 12:18:20.840"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:18:20.840" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:18:20.840" endtime="20230901 12:18:20.840"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:18:20.840" endtime="20230901 12:18:20.840"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:18:20.841" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:18:20.841" endtime="20230901 12:18:20.841"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:18:20.841" endtime="20230901 12:18:20.841"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:18:20.841" endtime="20230901 12:18:20.842"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</kw>
<status status="PASS" starttime="20230901 12:18:20.841" endtime="20230901 12:18:20.842"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</branch>
<status status="PASS" starttime="20230901 12:18:20.841" endtime="20230901 12:18:20.842"/>
</if>
<status status="PASS" starttime="20230901 12:18:20.840" endtime="20230901 12:18:20.842"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Pass Execution</arg>
<arg>Major versiaon ${found_major_version[0]} is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:18:20.842" endtime="20230901 12:18:20.842"/>
</branch>
<status status="PASS" starttime="20230901 12:18:20.840" endtime="20230901 12:18:20.842"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:19:34.223" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:19:34.223" endtime="20230901 12:19:34.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>13.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:19:34.223" level="INFO">${desired_minor_version} = 13.1</msg>
<status status="PASS" starttime="20230901 12:19:34.223" endtime="20230901 12:19:34.223"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:19:34.270" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:19:34.223" endtime="20230901 12:19:34.270"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:19:34.270" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:19:34.270" endtime="20230901 12:19:34.270"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:19:34.270" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:19:34.270" endtime="20230901 12:19:34.270"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:19:34.271" endtime="20230901 12:19:34.271"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:19:34.271" level="INFO">${log} = False</msg>
<status status="PASS" starttime="20230901 12:19:34.271" endtime="20230901 12:19:34.272"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.272"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.272"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.272"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.272"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.272"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 12:19:34.273" level="FAIL">Unsupported version of Libz found 1.2.13</msg>
<status status="FAIL" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.273"/>
</kw>
<status status="FAIL" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.273"/>
</branch>
<status status="FAIL" starttime="20230901 12:19:34.272" endtime="20230901 12:19:34.273"/>
</if>
<status status="FAIL" starttime="20230901 12:19:34.270" endtime="20230901 12:19:34.273"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:19:34.273" endtime="20230901 12:19:34.273"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Pass Execution</arg>
<arg>Major version ${found_major_version[0]} is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:19:34.273" endtime="20230901 12:19:34.273"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:19:34.273" endtime="20230901 12:19:34.273"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:19:34.273" endtime="20230901 12:19:34.273"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:19:34.273" endtime="20230901 12:19:34.273"/>
</branch>
<status status="FAIL" starttime="20230901 12:19:34.270" endtime="20230901 12:19:34.273"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:20:29.502" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:20:29.502" endtime="20230901 12:20:29.502"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:20:29.502" level="INFO">${desired_minor_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:20:29.502" endtime="20230901 12:20:29.502"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:20:29.550" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:20:29.502" endtime="20230901 12:20:29.550"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:20:29.550" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:20:29.550" endtime="20230901 12:20:29.550"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:20:29.550" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:20:29.550" endtime="20230901 12:20:29.550"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:20:29.550" endtime="20230901 12:20:29.551"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:20:29.551" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:20:29.551" endtime="20230901 12:20:29.551"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:20:29.551" endtime="20230901 12:20:29.551"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:20:29.552" endtime="20230901 12:20:29.552"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:20:29.552" endtime="20230901 12:20:29.552"/>
</kw>
<status status="PASS" starttime="20230901 12:20:29.551" endtime="20230901 12:20:29.552"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</branch>
<status status="PASS" starttime="20230901 12:20:29.551" endtime="20230901 12:20:29.553"/>
</if>
<status status="PASS" starttime="20230901 12:20:29.550" endtime="20230901 12:20:29.553"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Pass Execution</arg>
<arg>Major version ${found_major_version[0]} is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:20:29.553" endtime="20230901 12:20:29.553"/>
</branch>
<status status="PASS" starttime="20230901 12:20:29.550" endtime="20230901 12:20:29.553"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>0.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:20:51.570" level="INFO">${desired_major_version} = 0.2</msg>
<status status="PASS" starttime="20230901 12:20:51.570" endtime="20230901 12:20:51.570"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:20:51.570" level="INFO">${desired_minor_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:20:51.570" endtime="20230901 12:20:51.570"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:20:51.616" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:20:51.571" endtime="20230901 12:20:51.616"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:20:51.616" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:20:51.616" endtime="20230901 12:20:51.616"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:20:51.616" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:20:51.616" endtime="20230901 12:20:51.616"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</if>
<status status="NOT RUN" starttime="20230901 12:20:51.616" endtime="20230901 12:20:51.617"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.617"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Pass Execution</arg>
<arg>Major version ${found_major_version[0]} is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.618"/>
</kw>
<status status="PASS" starttime="20230901 12:20:51.617" endtime="20230901 12:20:51.618"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:20:51.618" endtime="20230901 12:20:51.618"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:20:51.618" endtime="20230901 12:20:51.618"/>
</branch>
<status status="PASS" starttime="20230901 12:20:51.616" endtime="20230901 12:20:51.618"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>0.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:21:21.364" level="INFO">${desired_major_version} = 0.2</msg>
<status status="PASS" starttime="20230901 12:21:21.364" endtime="20230901 12:21:21.364"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:21:21.365" level="INFO">${desired_minor_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:21:21.364" endtime="20230901 12:21:21.365"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:21:21.409" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:21:21.365" endtime="20230901 12:21:21.409"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:21:21.409" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:21:21.409" endtime="20230901 12:21:21.409"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:21:21.410" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:21:21.409" endtime="20230901 12:21:21.410"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</if>
<status status="NOT RUN" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.410"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:21:21.411" endtime="20230901 12:21:21.411"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:21:21.411" endtime="20230901 12:21:21.411"/>
</kw>
<status status="PASS" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.411"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:21:21.411" endtime="20230901 12:21:21.411"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:21:21.411" endtime="20230901 12:21:21.411"/>
</branch>
<status status="PASS" starttime="20230901 12:21:21.410" endtime="20230901 12:21:21.411"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:22:00.453" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:22:00.453" endtime="20230901 12:22:00.453"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:22:00.453" level="INFO">${desired_minor_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:22:00.453" endtime="20230901 12:22:00.453"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:22:00.500" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:22:00.453" endtime="20230901 12:22:00.500"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:22:00.501" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:22:00.500" endtime="20230901 12:22:00.501"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:22:00.501" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:22:00.501" endtime="20230901 12:22:00.501"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:22:00.501" endtime="20230901 12:22:00.501"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:22:00.502" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:22:00.501" endtime="20230901 12:22:00.502"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:22:00.502" endtime="20230901 12:22:00.502"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:22:00.502" endtime="20230901 12:22:00.503"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</kw>
<status status="PASS" starttime="20230901 12:22:00.502" endtime="20230901 12:22:00.503"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</branch>
<status status="PASS" starttime="20230901 12:22:00.502" endtime="20230901 12:22:00.503"/>
</if>
<status status="PASS" starttime="20230901 12:22:00.501" endtime="20230901 12:22:00.503"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:00.503" endtime="20230901 12:22:00.503"/>
</branch>
<status status="PASS" starttime="20230901 12:22:00.501" endtime="20230901 12:22:00.503"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>0.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:22:12.826" level="INFO">${desired_major_version} = 0.2</msg>
<status status="PASS" starttime="20230901 12:22:12.826" endtime="20230901 12:22:12.826"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:22:12.826" level="INFO">${desired_minor_version} = 1.1</msg>
<status status="PASS" starttime="20230901 12:22:12.826" endtime="20230901 12:22:12.826"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:22:12.871" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:22:12.826" endtime="20230901 12:22:12.871"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:22:12.871" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:22:12.871" endtime="20230901 12:22:12.871"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:22:12.871" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:22:12.871" endtime="20230901 12:22:12.871"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.871" endtime="20230901 12:22:12.871"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.871" endtime="20230901 12:22:12.871"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</branch>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</if>
<status status="NOT RUN" starttime="20230901 12:22:12.871" endtime="20230901 12:22:12.872"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<status status="PASS" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:12.872" endtime="20230901 12:22:12.872"/>
</branch>
<status status="PASS" starttime="20230901 12:22:12.871" endtime="20230901 12:22:12.872"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:22:35.822" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230901 12:22:35.822" endtime="20230901 12:22:35.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 12:22:35.822" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230901 12:22:35.822" endtime="20230901 12:22:35.822"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230901 12:22:35.867" level="INFO">${libz_version} = 1.2.13</msg>
<status status="PASS" starttime="20230901 12:22:35.822" endtime="20230901 12:22:35.867"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:22:35.867" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230901 12:22:35.867" endtime="20230901 12:22:35.867"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 12:22:35.867" level="INFO">${found_minor_version} = ['13']</msg>
<status status="PASS" starttime="20230901 12:22:35.867" endtime="20230901 12:22:35.867"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log To Console" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:22:35.867" endtime="20230901 12:22:35.868"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 12:22:35.868" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230901 12:22:35.868" endtime="20230901 12:22:35.868"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 12:22:35.868" endtime="20230901 12:22:35.868"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 12:22:35.869" endtime="20230901 12:22:35.869"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" starttime="20230901 12:22:35.869" endtime="20230901 12:22:35.869"/>
</kw>
<status status="PASS" starttime="20230901 12:22:35.868" endtime="20230901 12:22:35.870"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</branch>
<status status="PASS" starttime="20230901 12:22:35.868" endtime="20230901 12:22:35.870"/>
</if>
<status status="PASS" starttime="20230901 12:22:35.867" endtime="20230901 12:22:35.870"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</kw>
<status status="NOT RUN" starttime="20230901 12:22:35.870" endtime="20230901 12:22:35.870"/>
</branch>
<status status="PASS" starttime="20230901 12:22:35.867" endtime="20230901 12:22:35.870"/>
</if>
<kw name="ant=1.9.3">
<var>@{packages_dict}</var>
<arg>java-11-openjdk=${None}</arg>
<arg>python3=3.7</arg>
<arg>openssl=${None}</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=${None}</arg>
<msg timestamp="20230901 13:47:52.659" level="FAIL">No keyword with name 'ant=1.9.3' found.</msg>
<status status="FAIL" starttime="20230901 13:47:52.658" endtime="20230901 13:47:52.659"/>
</kw>
<kw name="ant=1.9.3">
<var>&amp;{packages_dict}</var>
<arg>java-11-openjdk=${None}</arg>
<arg>python3=3.7</arg>
<arg>openssl=${None}</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=${None}</arg>
<msg timestamp="20230901 13:48:12.188" level="FAIL">No keyword with name 'ant=1.9.3' found.</msg>
<status status="FAIL" starttime="20230901 13:48:12.188" endtime="20230901 13:48:12.188"/>
</kw>
<kw name="ant=1.9.3">
<var>&amp;{packages_dict}</var>
<arg>java-11-openjdk=${None}</arg>
<arg>python3=3.7</arg>
<arg>openssl=${None}</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=${None}</arg>
<msg timestamp="20230901 13:48:25.621" level="FAIL">No keyword with name 'ant=1.9.3' found.</msg>
<status status="FAIL" starttime="20230901 13:48:25.621" endtime="20230901 13:48:25.621"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>@{packages_dict}</var>
<arg>ant=1.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230901 13:50:28.496" level="INFO">@{packages_dict} = [ ant | java-11-openjdk | python3 | openssl | pam | python3-setuptools ]</msg>
<status status="PASS" starttime="20230901 13:50:28.496" endtime="20230901 13:50:28.496"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>@{packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:51:13.182" level="FAIL">Keyword 'Collections.Get From Dictionary' expected 2 to 3 arguments, got 7.</msg>
<status status="FAIL" starttime="20230901 13:51:13.181" endtime="20230901 13:51:13.182"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:51:24.905" level="FAIL">TypeError: Expected argument 1 to be a dictionary or dictionary-like, got list instead.</msg>
<status status="FAIL" starttime="20230901 13:51:24.905" endtime="20230901 13:51:24.905"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>@{packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:51:38.904" level="FAIL">Keyword 'Collections.Get From Dictionary' expected 2 to 3 arguments, got 7.</msg>
<status status="FAIL" starttime="20230901 13:51:38.904" endtime="20230901 13:51:38.905"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>@{packages_dict}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:51:49.611" level="FAIL">Keyword 'Collections.Get From Dictionary' expected 2 to 3 arguments, got 6.</msg>
<status status="FAIL" starttime="20230901 13:51:49.610" endtime="20230901 13:51:49.611"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_dict}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:51:57.057" level="FAIL">Keyword 'Collections.Get From Dictionary' expected 2 to 3 arguments, got 1.</msg>
<status status="FAIL" starttime="20230901 13:51:57.057" endtime="20230901 13:51:57.057"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:52:07.926" level="FAIL">TypeError: Expected argument 1 to be a dictionary or dictionary-like, got list instead.</msg>
<status status="FAIL" starttime="20230901 13:52:07.925" endtime="20230901 13:52:07.926"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>@{packages_dict}</var>
<arg>ant=1.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230901 13:52:44.038" level="INFO">@{packages_dict} = [ ant | java-11-openjdk | python3 | openssl | pam | python3-setuptools ]</msg>
<status status="PASS" starttime="20230901 13:52:44.038" endtime="20230901 13:52:44.038"/>
</kw>
<kw name="Get Type @{packages_dict}">
<msg timestamp="20230901 13:53:08.296" level="FAIL">No keyword with name 'Get Type @{packages_dict}' found.</msg>
<status status="FAIL" starttime="20230901 13:53:08.295" endtime="20230901 13:53:08.296"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>@{packages_list}</arg>
<arg>key</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:53:50.283" level="FAIL">Variable '@{packages_list}' not found. Did you mean:
    @{package_list}</msg>
<status status="FAIL" starttime="20230901 13:53:50.282" endtime="20230901 13:53:50.283"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>@{packages_dict}</arg>
<arg>key</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:54:23.830" level="FAIL">Keyword 'Collections.Get From Dictionary' expected 2 to 3 arguments, got 7.</msg>
<status status="FAIL" starttime="20230901 13:54:23.830" endtime="20230901 13:54:23.830"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_dict}</arg>
<arg>key</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:54:30.558" level="FAIL">TypeError: Expected argument 1 to be a dictionary or dictionary-like, got list instead.</msg>
<status status="FAIL" starttime="20230901 13:54:30.558" endtime="20230901 13:54:30.558"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_dict}</arg>
<arg>key</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:54:38.453" level="FAIL">TypeError: Expected argument 1 to be a dictionary or dictionary-like, got list instead.</msg>
<status status="FAIL" starttime="20230901 13:54:38.453" endtime="20230901 13:54:38.453"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=1.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230901 13:56:01.010" level="INFO">${packages_dict} = {'ant': '1.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': '0', 'pam': '1.3.1.8', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230901 13:56:01.010" endtime="20230901 13:56:01.010"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_list}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 13:56:43.154" level="FAIL">Variable '${packages_list}' not found. Did you mean:
    ${package_list}</msg>
<status status="FAIL" starttime="20230901 13:56:43.153" endtime="20230901 13:56:43.154"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<arg>${packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" starttime="20230901 13:56:53.662" endtime="20230901 13:56:53.662"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=1.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=${None}</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230901 13:57:28.785" level="INFO">${packages_dict} = {'ant': '1.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': None, 'pam': '1.3.1.8', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230901 13:57:28.785" endtime="20230901 13:57:28.785"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${package_version}</var>
<arg>ant-1.10.9-7.el9.noarch</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 14:10:08.686" level="INFO">${package_version} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230901 14:10:08.686" endtime="20230901 14:10:08.686"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${packages_dict}</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20230901 14:11:31.601" level="INFO">${key} = ['ant', 'java-11-openjdk', 'openssl', 'pam', 'python3', 'python3-setuptools']</msg>
<status status="PASS" starttime="20230901 14:11:31.601" endtime="20230901 14:11:31.601"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${packages_dict}</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20230901 14:11:55.637" level="INFO">${key} = ['ant', 'java-11-openjdk', 'openssl', 'pam', 'python3', 'python3-setuptools']</msg>
<status status="PASS" starttime="20230901 14:11:55.637" endtime="20230901 14:11:55.637"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${value}</var>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 14:13:11.084" level="FAIL">Keyword 'Collections.Get From Dictionary' expected 2 to 3 arguments, got 0.</msg>
<status status="FAIL" starttime="20230901 14:13:11.084" endtime="20230901 14:13:11.084"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${value}</var>
<arg>${packages_list}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 14:13:27.953" level="FAIL">Variable '${packages_list}' not found. Did you mean:
    ${package_list}</msg>
<status status="FAIL" starttime="20230901 14:13:27.953" endtime="20230901 14:13:27.953"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${value}</var>
<arg>${packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 14:13:45.683" level="INFO">${value} = 1.9.3</msg>
<status status="PASS" starttime="20230901 14:13:45.683" endtime="20230901 14:13:45.683"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${value}</var>
<arg>${packages_list}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 14:13:50.206" level="FAIL">Variable '${packages_list}' not found. Did you mean:
    ${package_list}</msg>
<status status="FAIL" starttime="20230901 14:13:50.205" endtime="20230901 14:13:50.206"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${value}</var>
<arg>${packages_dict}</arg>
<arg>ant</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230901 14:13:53.535" level="INFO">${value} = 1.9.3</msg>
<status status="PASS" starttime="20230901 14:13:53.534" endtime="20230901 14:13:53.535"/>
</kw>
<if>
<branch type="IF" condition="${value} IN ${package_version}">
<kw name="Fail" library="BuiltIn">
<arg>test</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 14:14:45.738" endtime="20230901 14:14:45.738"/>
</kw>
<msg timestamp="20230901 14:14:45.738" level="FAIL">Invalid IF condition: Evaluating expression '1.9.3 IN ant-1.10.9-7.el9.noarch' failed: SyntaxError: invalid decimal literal (&lt;string&gt;, line 1)

Variables in the original expression '${value} IN ${package_version}' were resolved before the expression was evaluated. Try using '$value IN $package_version' syntax to avoid that. See Evaluating Expressions appendix in Robot Framework User Guide for more details.</msg>
<status status="FAIL" starttime="20230901 14:14:45.738" endtime="20230901 14:14:45.738"/>
</branch>
<status status="FAIL" starttime="20230901 14:14:45.738" endtime="20230901 14:14:45.738"/>
</if>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_version}</arg>
<arg>ant-(.*)-.*</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 14:16:56.580" level="INFO">${installed_version} = ['ant-1.10.9-7.el9.noarch']</msg>
<status status="PASS" starttime="20230901 14:16:56.580" endtime="20230901 14:16:56.580"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_version}</arg>
<arg>ant-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 14:17:04.635" level="INFO">${installed_version} = ['1.10.9']</msg>
<status status="PASS" starttime="20230901 14:17:04.635" endtime="20230901 14:17:04.635"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_version}</arg>
<arg>ant-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230901 14:53:13.891" level="INFO">${installed_version} = ['1.10.9']</msg>
<status status="PASS" starttime="20230901 14:53:13.890" endtime="20230901 14:53:13.891"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 14:54:31.759" level="INFO">${actual_version} = 1.1.1</msg>
<status status="PASS" starttime="20230901 14:54:31.759" endtime="20230901 14:54:31.759"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 14:54:31.759" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 14:54:31.759" endtime="20230901 14:54:31.759"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 14:54:31.759" level="INFO">${actual_segments} = ['1', '1', '1']</msg>
<status status="PASS" starttime="20230901 14:54:31.759" endtime="20230901 14:54:31.759"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 14:54:31.759" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 14:54:31.759" endtime="20230901 14:54:31.759"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<arg>{expected_segments}}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" starttime="20230901 14:55:20.832" endtime="20230901 14:55:20.832"/>
</kw>
<kw name="Get Match Count" library="Collections">
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<status status="PASS" starttime="20230901 14:59:00.893" endtime="20230901 14:59:00.893"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:00:53.751" level="INFO">${actual_version} = 1.1.1</msg>
<status status="PASS" starttime="20230901 15:00:53.751" endtime="20230901 15:00:53.751"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:00:53.751" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:00:53.751" endtime="20230901 15:00:53.751"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:00:53.752" level="INFO">${actual_segments} = ['1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:00:53.751" endtime="20230901 15:00:53.752"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:00:53.752" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:00:53.752" endtime="20230901 15:00:53.752"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:00:53.752" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:00:53.752" endtime="20230901 15:00:53.752"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:00:53.752" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:00:53.752" endtime="20230901 15:00:53.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:01:26.805" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:01:26.805" endtime="20230901 15:01:26.805"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:01:26.805" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:01:26.805" endtime="20230901 15:01:26.805"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:01:26.805" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:01:26.805" endtime="20230901 15:01:26.805"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:01:26.805" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:01:26.805" endtime="20230901 15:01:26.805"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:01:26.805" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:01:26.805" endtime="20230901 15:01:26.805"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:01:26.806" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:01:26.805" endtime="20230901 15:01:26.806"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<arg>condition</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:02:35.011" level="FAIL">At least one value is required</msg>
<status status="FAIL" starttime="20230901 15:02:35.011" endtime="20230901 15:02:35.011"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<arg>condition</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:04:27.856" level="FAIL">At least one value is required</msg>
<status status="FAIL" starttime="20230901 15:04:27.855" endtime="20230901 15:04:27.856"/>
</kw>
<kw name="${min_length} Set Variable">
<arg>19</arg>
<msg timestamp="20230901 15:04:52.940" level="FAIL">No keyword with name '${min_length} Set Variable' found.</msg>
<status status="FAIL" starttime="20230901 15:04:52.940" endtime="20230901 15:04:52.940"/>
</kw>
<kw name="${exp_length} Set Variable">
<arg>1</arg>
<msg timestamp="20230901 15:05:04.978" level="FAIL">No keyword with name '${exp_length} Set Variable' found.</msg>
<status status="FAIL" starttime="20230901 15:05:04.978" endtime="20230901 15:05:04.978"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${exp_length}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:05:08.846" level="INFO">${exp_length} = 1</msg>
<status status="PASS" starttime="20230901 15:05:08.846" endtime="20230901 15:05:08.846"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:06:07.011" level="INFO">${min_length} = 1</msg>
<status status="PASS" starttime="20230901 15:06:07.011" endtime="20230901 15:06:07.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:21:36.552" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:21:36.553" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.553"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:21:36.554" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:21:36.554" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<arg>default=0</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:21:36.554" level="FAIL">'1' cannot be converted to an integer: 'default=0' cannot be converted to an integer: ValueError: invalid literal for int() with base 10: 'default=0'</msg>
<status status="FAIL" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<arg>default=0</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</kw>
<status status="FAIL" starttime="20230901 15:21:36.554" endtime="20230901 15:21:36.554"/>
</iter>
<status status="FAIL" starttime="20230901 15:21:36.553" endtime="20230901 15:21:36.554"/>
</for>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:22:15.052" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.052"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:22:15.053" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:22:15.052" endtime="20230901 15:22:15.053"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.053"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:22:15.053" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.053"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:22:15.053" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.053"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:22:15.053" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.053"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:22:15.053" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.053"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:22:15.053" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.053"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.054"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:22:15.054" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:22:15.054" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:22:15.054" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:22:15.054" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.054"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:22:15.055" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<status status="PASS" starttime="20230901 15:22:15.054" endtime="20230901 15:22:15.055"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:22:15.055" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:22:15.055" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.055"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:22:15.056" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:22:15.056" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:22:15.056" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:22:15.056" endtime="20230901 15:22:15.056"/>
</kw>
<status status="PASS" starttime="20230901 15:22:15.055" endtime="20230901 15:22:15.056"/>
</iter>
<status status="PASS" starttime="20230901 15:22:15.053" endtime="20230901 15:22:15.056"/>
</for>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:24:37.042" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:24:37.042" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.042"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:24:37.042" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:24:37.042" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:24:37.042" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.042"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:24:37.042" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.042"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:24:37.043" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:24:37.042" endtime="20230901 15:24:37.043"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:24:37.043" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:24:37.043" endtime="20230901 15:24:37.043"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:24:37.043" endtime="20230901 15:24:37.043"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:24:37.043" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:24:37.043" endtime="20230901 15:24:37.043"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:24:37.043" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:24:37.043" endtime="20230901 15:24:37.043"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:24:37.044" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:24:37.044" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:24:37.044" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.044" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<status status="PASS" starttime="20230901 15:24:37.043" endtime="20230901 15:24:37.045"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:24:37.045" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:24:37.045" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:24:37.045" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:24:37.045" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:24:37.045" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<status status="PASS" starttime="20230901 15:24:37.045" endtime="20230901 15:24:37.046"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:24:37.046" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:24:37.046" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.046"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:24:37.047" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:24:37.047" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:24:37.047" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:24:37.047" endtime="20230901 15:24:37.047"/>
</kw>
<status status="PASS" starttime="20230901 15:24:37.046" endtime="20230901 15:24:37.047"/>
</iter>
<status status="PASS" starttime="20230901 15:24:37.043" endtime="20230901 15:24:37.047"/>
</for>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:26:48.061" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.061"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:26:48.062" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:26:48.061" endtime="20230901 15:26:48.062"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.062"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:48.062" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.062"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:48.062" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.062"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:48.062" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.062"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:48.062" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.062"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:48.062" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.062"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.063"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:48.063" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:48.063" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:48.063" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.063"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:48.064" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:48.064" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<status status="PASS" starttime="20230901 15:26:48.063" endtime="20230901 15:26:48.064"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.064"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:48.064" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:48.065" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:48.065" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:48.065" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:48.065" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.065" endtime="20230901 15:26:48.065"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:48.066" endtime="20230901 15:26:48.066"/>
</kw>
<status status="PASS" starttime="20230901 15:26:48.064" endtime="20230901 15:26:48.066"/>
</iter>
<status status="PASS" starttime="20230901 15:26:48.062" endtime="20230901 15:26:48.066"/>
</for>
<status status="PASS" starttime="20230901 15:26:48.060" endtime="20230901 15:26:48.066"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>2.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:26:55.845" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:26:55.845" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.845"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:26:55.845" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.845"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:55.845" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.845"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:55.845" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.845"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:26:55.845" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.845"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:26:55.846" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.846"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:26:55.846" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.846"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.846"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:55.846" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.846"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:55.846" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.846"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:55.846" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.846"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:55.846" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.846"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:55.847" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.847"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:55.847" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.847"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:55.848" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:55.848" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:55.848" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:55.848" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.848"/>
</kw>
<status status="PASS" starttime="20230901 15:26:55.847" endtime="20230901 15:26:55.848"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:55.849" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:26:55.849" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:55.849" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:26:55.849" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:26:55.849" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<status status="PASS" starttime="20230901 15:26:55.849" endtime="20230901 15:26:55.849"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.850" endtime="20230901 15:26:55.850"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:26:55.850" endtime="20230901 15:26:55.850"/>
</kw>
<status status="PASS" starttime="20230901 15:26:55.848" endtime="20230901 15:26:55.850"/>
</iter>
<status status="PASS" starttime="20230901 15:26:55.846" endtime="20230901 15:26:55.850"/>
</for>
<status status="PASS" starttime="20230901 15:26:55.845" endtime="20230901 15:26:55.850"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>2.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:22.644" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:27:22.644" endtime="20230901 15:27:22.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:22.644" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:27:22.644" endtime="20230901 15:27:22.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:22.645" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:27:22.644" endtime="20230901 15:27:22.645"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:22.645" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.645"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:22.645" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.645"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:27:22.645" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.645"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:27:22.645" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.645"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:27:22.645" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.645"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:27:22.646" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:27:22.646" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:27:22.646" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:27:22.646" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:22.646" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:22.647" endtime="20230901 15:27:22.647"/>
</kw>
<status status="PASS" starttime="20230901 15:27:22.646" endtime="20230901 15:27:22.647"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:22.647" endtime="20230901 15:27:22.647"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:22.647" endtime="20230901 15:27:22.647"/>
</kw>
<kw name="[Return]">
<arg>True</arg>
<msg timestamp="20230901 15:27:22.648" level="FAIL">No keyword with name '[Return]' found.</msg>
<status status="FAIL" starttime="20230901 15:27:22.648" endtime="20230901 15:27:22.648"/>
</kw>
<status status="FAIL" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.648"/>
</iter>
<status status="FAIL" starttime="20230901 15:27:22.645" endtime="20230901 15:27:22.648"/>
</for>
<status status="FAIL" starttime="20230901 15:27:22.644" endtime="20230901 15:27:22.648"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:51.781" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:27:51.781" endtime="20230901 15:27:51.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:51.781" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:27:51.781" endtime="20230901 15:27:51.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:51.781" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:27:51.781" endtime="20230901 15:27:51.781"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:51.781" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:27:51.781" endtime="20230901 15:27:51.781"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:51.782" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.782"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:27:51.782" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.782"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:27:51.782" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.782"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:27:51.782" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.782"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.782"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:27:51.783" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:27:51.783" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:27:51.783" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:27:51.783" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:51.783" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.783"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:51.783" endtime="20230901 15:27:51.784"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:51.784" endtime="20230901 15:27:51.784"/>
</kw>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:27:51.784" endtime="20230901 15:27:51.784"/>
</return>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.784"/>
</iter>
<status status="PASS" starttime="20230901 15:27:51.782" endtime="20230901 15:27:51.784"/>
</for>
<status status="PASS" starttime="20230901 15:27:51.781" endtime="20230901 15:27:51.784"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:57.113" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:57.113" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.113"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:27:57.113" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.113"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:57.113" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.113"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:57.113" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.113"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:27:57.114" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.114"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:27:57.114" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.114"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:27:57.114" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.114"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.114"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:27:57.114" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.114"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:27:57.114" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.114"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:27:57.115" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:27:57.115" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:27:57.115" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</kw>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:27:57.115" endtime="20230901 15:27:57.115"/>
</return>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.115"/>
</iter>
<status status="PASS" starttime="20230901 15:27:57.114" endtime="20230901 15:27:57.115"/>
</for>
<status status="PASS" starttime="20230901 15:27:57.113" endtime="20230901 15:27:57.115"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:28:55.053" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:28:55.053" endtime="20230901 15:28:55.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:28:55.053" endtime="20230901 15:28:55.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.054"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.054"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.054"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.054"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.054"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:28:55.054" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.054"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:28:55.055" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:28:55.055" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:28:55.055" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:28:55.055" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:28:55.055" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.055"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<status status="PASS" starttime="20230901 15:28:55.055" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.056"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:28:55.056" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:28:55.056" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:28:55.056" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:28:55.056" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:28:55.056" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.056"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<status status="PASS" starttime="20230901 15:28:55.056" endtime="20230901 15:28:55.057"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:28:55.057" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:28:55.057" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:28:55.057" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.057"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:28:55.058" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:28:55.058" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:28:55.058" endtime="20230901 15:28:55.058"/>
</kw>
<status status="PASS" starttime="20230901 15:28:55.057" endtime="20230901 15:28:55.058"/>
</iter>
<status status="PASS" starttime="20230901 15:28:55.054" endtime="20230901 15:28:55.058"/>
</for>
<status status="PASS" starttime="20230901 15:28:55.053" endtime="20230901 15:28:55.058"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:29:00.273" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:29:00.273" endtime="20230901 15:29:00.273"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:29:00.274" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:29:00.274" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:29:00.274" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:29:00.274" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:29:00.274" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.274"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.275"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:29:00.275" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:29:00.275" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:29:00.275" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:29:00.275" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.275"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:29:00.276" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<status status="PASS" starttime="20230901 15:29:00.275" endtime="20230901 15:29:00.276"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.276"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:29:00.276" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:29:00.277" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:29:00.277" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:29:00.277" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:29:00.277" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:29:00.277" endtime="20230901 15:29:00.277"/>
</kw>
<status status="PASS" starttime="20230901 15:29:00.276" endtime="20230901 15:29:00.277"/>
</iter>
<status status="PASS" starttime="20230901 15:29:00.274" endtime="20230901 15:29:00.277"/>
</for>
<status status="PASS" starttime="20230901 15:29:00.272" endtime="20230901 15:29:00.277"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>&lt;</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:30:20.196" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.196"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:30:20.197" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.197"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.197"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:30:20.197" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.197"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:30:20.197" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.197"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:30:20.197" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.197"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:30:20.197" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.197"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:30:20.198" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.198"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:30:20.198" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:30:20.198" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.198"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:30:20.199" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:30:20.199" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:30:20.199" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<status status="PASS" starttime="20230901 15:30:20.198" endtime="20230901 15:30:20.199"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.199"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:30:20.200" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:30:20.200" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:30:20.200" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:30:20.200" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:30:20.200" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.200"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:30:20.200" endtime="20230901 15:30:20.201"/>
</kw>
<status status="PASS" starttime="20230901 15:30:20.199" endtime="20230901 15:30:20.201"/>
</iter>
<status status="PASS" starttime="20230901 15:30:20.197" endtime="20230901 15:30:20.201"/>
</for>
<status status="PASS" starttime="20230901 15:30:20.196" endtime="20230901 15:30:20.201"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>&lt;</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:33:01.906" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:33:01.906" endtime="20230901 15:33:01.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:33:01.906" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:33:01.906" endtime="20230901 15:33:01.906"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:33:01.907" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.907"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:01.907" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.907"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:01.907" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.907"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:33:01.907" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.907"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:33:01.907" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.907"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:33:01.907" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.907"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:01.908" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:01.908" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:01.908" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:01.908" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:01.908" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment}</arg>
<arg>Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230901 15:33:01.908" level="FAIL">Invalid log level 'Expected: 2 Comparison -1'.</msg>
<status status="FAIL" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:33:01.908" endtime="20230901 15:33:01.909"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:33:01.909" endtime="20230901 15:33:01.909"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:33:01.909" endtime="20230901 15:33:01.909"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:33:01.909" endtime="20230901 15:33:01.909"/>
</kw>
<status status="FAIL" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.909"/>
</iter>
<status status="FAIL" starttime="20230901 15:33:01.907" endtime="20230901 15:33:01.909"/>
</for>
<return>
<value>True</value>
<status status="NOT RUN" starttime="20230901 15:33:01.909" endtime="20230901 15:33:01.909"/>
</return>
<status status="FAIL" starttime="20230901 15:33:01.906" endtime="20230901 15:33:01.909"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>&lt;</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:33:41.350" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:33:41.350" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.350"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:33:41.350" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.350"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:41.350" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.350"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:41.350" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.350"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:33:41.350" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.350"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:33:41.351" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.351"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:33:41.351" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.351"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.351"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:41.351" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.351"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:41.351" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.351"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:41.351" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.351"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:41.352" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:41.352" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.352"/>
</kw>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.352"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:41.353" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:41.353" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:41.353" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:41.353" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:41.353" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<status status="PASS" starttime="20230901 15:33:41.353" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<status status="PASS" starttime="20230901 15:33:41.352" endtime="20230901 15:33:41.354"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:41.354" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:33:41.354" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:41.354" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:33:41.354" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.354"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:33:41.354" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</kw>
<status status="PASS" starttime="20230901 15:33:41.354" endtime="20230901 15:33:41.355"/>
</iter>
<status status="PASS" starttime="20230901 15:33:41.351" endtime="20230901 15:33:41.355"/>
</for>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:33:41.355" endtime="20230901 15:33:41.355"/>
</return>
<status status="PASS" starttime="20230901 15:33:41.350" endtime="20230901 15:33:41.355"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>&lt;</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:36:42.731" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:36:42.731" endtime="20230901 15:36:42.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:36:42.731" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:36:42.731" endtime="20230901 15:36:42.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:36:42.732" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.732"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:36:42.732" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.732"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:36:42.732" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.732"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:36:42.732" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.732"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:36:42.732" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.732"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:36:42.732" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.732"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:36:42.733" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:36:42.733" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:36:42.733" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:36:42.733" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:36:42.733" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.733" endtime="20230901 15:36:42.733"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.734"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:36:42.734" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:36:42.734" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:36:42.734" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.734"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:36:42.734" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:36:42.735" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.735"/>
</kw>
<status status="PASS" starttime="20230901 15:36:42.734" endtime="20230901 15:36:42.735"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:36:42.736" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:36:42.736" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:36:42.736" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:36:42.736" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:36:42.736" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.736"/>
</kw>
<status status="PASS" starttime="20230901 15:36:42.736" endtime="20230901 15:36:42.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.737" endtime="20230901 15:36:42.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>False</arg>
<arg>console=${True}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:36:42.737" endtime="20230901 15:36:42.737"/>
</kw>
<status status="PASS" starttime="20230901 15:36:42.735" endtime="20230901 15:36:42.737"/>
</iter>
<status status="PASS" starttime="20230901 15:36:42.732" endtime="20230901 15:36:42.737"/>
</for>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:36:42.737" endtime="20230901 15:36:42.737"/>
</return>
<status status="PASS" starttime="20230901 15:36:42.731" endtime="20230901 15:36:42.737"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>&lt;</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:38:21.734" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:38:21.734" endtime="20230901 15:38:21.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:38:21.734" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:38:21.734" endtime="20230901 15:38:21.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:38:21.734" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:38:21.734" endtime="20230901 15:38:21.734"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:21.735" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:21.735" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:38:21.735" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:38:21.735" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:38:21.735" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:21.735" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.735"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:21.736" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:21.736" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:21.736" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:21.736" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.736"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.737"/>
</kw>
<status status="PASS" starttime="20230901 15:38:21.736" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.737"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:21.737" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:21.737" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:21.737" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:21.737" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:21.737" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<status status="PASS" starttime="20230901 15:38:21.737" endtime="20230901 15:38:21.738"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:21.738" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:21.739" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:21.739" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:21.739" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:21.739" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.739" endtime="20230901 15:38:21.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:21.740" endtime="20230901 15:38:21.740"/>
</kw>
<status status="PASS" starttime="20230901 15:38:21.738" endtime="20230901 15:38:21.740"/>
</iter>
<status status="PASS" starttime="20230901 15:38:21.735" endtime="20230901 15:38:21.740"/>
</for>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:38:21.740" endtime="20230901 15:38:21.740"/>
</return>
<status status="PASS" starttime="20230901 15:38:21.734" endtime="20230901 15:38:21.740"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:38:57.286" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:38:57.286" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:38:57.286" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.286"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:57.286" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.286"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:57.286" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.286"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:38:57.286" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.286"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:38:57.287" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.287"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:38:57.287" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.287"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.287"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:57.287" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.287"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:57.287" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.287"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:57.287" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.287"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:57.287" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.287"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:57.288" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<status status="PASS" starttime="20230901 15:38:57.288" endtime="20230901 15:38:57.288"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.289"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:57.289" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:57.289" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:57.289" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:57.289" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:57.289" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.289"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<status status="PASS" starttime="20230901 15:38:57.289" endtime="20230901 15:38:57.290"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:57.290" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.290"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:38:57.291" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:57.291" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:38:57.291" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:38:57.291" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.291" endtime="20230901 15:38:57.291"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:38:57.292" endtime="20230901 15:38:57.292"/>
</kw>
<status status="PASS" starttime="20230901 15:38:57.290" endtime="20230901 15:38:57.292"/>
</iter>
<status status="PASS" starttime="20230901 15:38:57.287" endtime="20230901 15:38:57.292"/>
</for>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:38:57.292" endtime="20230901 15:38:57.292"/>
</return>
<status status="PASS" starttime="20230901 15:38:57.286" endtime="20230901 15:38:57.292"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>&lt;</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${operator} = &lt;</msg>
<status status="PASS" starttime="20230901 15:39:38.736" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:39:38.737" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.737"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:39:38.738" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:39:38.738" endtime="20230901 15:39:38.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:39:38.738" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:39:38.738" endtime="20230901 15:39:38.738"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:39:38.738" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:39:38.738" endtime="20230901 15:39:38.738"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:39:38.738" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:39:38.738" endtime="20230901 15:39:38.738"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:39:38.738" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:39:38.738" endtime="20230901 15:39:38.738"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:39:38.738" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.739"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.739"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:39:38.740" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:39:38.740" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:39:38.740" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:39:38.740" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:39:38.740" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.741" endtime="20230901 15:39:38.741"/>
</kw>
<status status="PASS" starttime="20230901 15:39:38.740" endtime="20230901 15:39:38.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.741" endtime="20230901 15:39:38.741"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.741" endtime="20230901 15:39:38.741"/>
</kw>
<status status="PASS" starttime="20230901 15:39:38.739" endtime="20230901 15:39:38.741"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:39:38.741" endtime="20230901 15:39:38.741"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:39:38.742" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:39:38.741" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:39:38.742" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:39:38.742" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:39:38.742" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:39:38.742" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.742"/>
</kw>
<status status="PASS" starttime="20230901 15:39:38.742" endtime="20230901 15:39:38.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.743" endtime="20230901 15:39:38.743"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:39:38.743" endtime="20230901 15:39:38.743"/>
</kw>
<status status="PASS" starttime="20230901 15:39:38.741" endtime="20230901 15:39:38.743"/>
</iter>
<status status="PASS" starttime="20230901 15:39:38.737" endtime="20230901 15:39:38.743"/>
</for>
<return>
<value>True</value>
<status status="PASS" starttime="20230901 15:39:38.743" endtime="20230901 15:39:38.743"/>
</return>
<status status="PASS" starttime="20230901 15:39:38.736" endtime="20230901 15:39:38.743"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:40:29.540" level="INFO">${actual_segments} = ['1', '2', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:40:29.539" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:40:29.540" level="INFO">${expected_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:40:29.540" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:40:29.540" level="INFO">${exp_length} = 4</msg>
<status status="PASS" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:40:29.540" level="INFO">${min_length} = None</msg>
<status status="PASS" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.540"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:40:29.541" endtime="20230901 15:40:29.541"/>
</kw>
<status status="NOT RUN" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.541"/>
</iter>
<msg timestamp="20230901 15:40:29.541" level="FAIL">Converting FOR IN RANGE values failed: TypeError: Expected number, got None..</msg>
<status status="FAIL" starttime="20230901 15:40:29.540" endtime="20230901 15:40:29.541"/>
</for>
<status status="FAIL" starttime="20230901 15:40:29.539" endtime="20230901 15:40:29.541"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>1.1.1.1</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:54:30.243" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:54:30.243" endtime="20230901 15:54:30.243"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:54:30.243" level="INFO">${expected_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:54:30.243" endtime="20230901 15:54:30.243"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:54:30.244" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:54:30.243" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:54:30.244" level="INFO">${exp_length} = 4</msg>
<status status="PASS" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:54:30.244" level="INFO">${min_length} = None</msg>
<status status="PASS" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.245" endtime="20230901 15:54:30.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.245" endtime="20230901 15:54:30.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.245" endtime="20230901 15:54:30.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:54:30.245" endtime="20230901 15:54:30.245"/>
</kw>
<status status="NOT RUN" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.245"/>
</iter>
<msg timestamp="20230901 15:54:30.245" level="FAIL">Converting FOR IN RANGE values failed: TypeError: Expected number, got None..</msg>
<status status="FAIL" starttime="20230901 15:54:30.244" endtime="20230901 15:54:30.245"/>
</for>
<status status="FAIL" starttime="20230901 15:54:30.243" endtime="20230901 15:54:30.245"/>
</kw>
<kw name="Compare Package Versions">
<msg timestamp="20230901 15:55:43.621" level="FAIL">Keyword 'Compare Package Versions' expected 3 arguments, got 0.</msg>
<status status="FAIL" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.621"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.622"/>
</iter>
<status status="NOT RUN" starttime="20230901 15:55:43.621" endtime="20230901 15:55:43.622"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>True</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 15:55:43.622" endtime="20230901 15:55:43.622"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:55:59.868" level="INFO">${operator} = ==</msg>
<status status="PASS" starttime="20230901 15:55:59.868" endtime="20230901 15:55:59.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:55:59.868" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:55:59.868" endtime="20230901 15:55:59.868"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:55:59.868" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:55:59.868" endtime="20230901 15:55:59.868"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:55:59.869" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:55:59.868" endtime="20230901 15:55:59.869"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:55:59.869" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.869"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:55:59.869" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.869"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:55:59.869" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.869"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:55:59.869" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.869"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.869"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:55:59.869" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.869"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:55:59.870" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:55:59.870" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:55:59.870" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:55:59.870" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>False</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 15:55:59.871" endtime="20230901 15:55:59.871"/>
</kw>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.871"/>
</kw>
<status status="PASS" starttime="20230901 15:55:59.870" endtime="20230901 15:55:59.871"/>
</kw>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.871"/>
</iter>
<status status="PASS" starttime="20230901 15:55:59.869" endtime="20230901 15:55:59.871"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>True</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 15:55:59.871" endtime="20230901 15:55:59.871"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:57:28.584" level="INFO">${operator} = ==</msg>
<status status="PASS" starttime="20230901 15:57:28.584" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:57:28.585" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.585"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:57:28.586" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:57:28.586" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:57:28.586" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:57:28.586" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:57:28.586" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.586"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:57:28.586" endtime="20230901 15:57:28.587"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>False</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 15:57:28.587" endtime="20230901 15:57:28.587"/>
</kw>
<status status="PASS" starttime="20230901 15:57:28.587" endtime="20230901 15:57:28.587"/>
</kw>
<status status="PASS" starttime="20230901 15:57:28.587" endtime="20230901 15:57:28.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 15:57:28.587" endtime="20230901 15:57:28.587"/>
</kw>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.587"/>
</iter>
<status status="PASS" starttime="20230901 15:57:28.585" endtime="20230901 15:57:28.587"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>True</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230901 15:57:28.587" endtime="20230901 15:57:28.587"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:59:15.162" level="INFO">${operator} = ==</msg>
<status status="PASS" starttime="20230901 15:59:15.162" endtime="20230901 15:59:15.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:59:15.162" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:59:15.162" endtime="20230901 15:59:15.162"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:59:15.162" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:59:15.162" endtime="20230901 15:59:15.162"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:15.163" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.163"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:15.163" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.163"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:59:15.163" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.163"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:59:15.163" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.163"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:59:15.163" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.163"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:15.164" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:15.164" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:15.164" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:15.164" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:15.164" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log</arg>
<arg>4</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log" library="BuiltIn">
<arg>5</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.164" endtime="20230901 15:59:15.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.165"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:15.165" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:15.165" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:15.165" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:15.165" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.165"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:15.166" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log</arg>
<arg>4</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log" library="BuiltIn">
<arg>5</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.165" endtime="20230901 15:59:15.166"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:15.166" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.166"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:15.167" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:15.167" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:15.167" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:15.167" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log</arg>
<arg>4</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Log</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log" library="BuiltIn">
<arg>5</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:15.167" endtime="20230901 15:59:15.167"/>
</kw>
<status status="PASS" starttime="20230901 15:59:15.166" endtime="20230901 15:59:15.168"/>
</iter>
<status status="PASS" starttime="20230901 15:59:15.163" endtime="20230901 15:59:15.168"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>True</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 15:59:15.168" level="FAIL">True</msg>
<status status="FAIL" starttime="20230901 15:59:15.168" endtime="20230901 15:59:15.168"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>==</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${operator} = ==</msg>
<status status="PASS" starttime="20230901 15:59:37.736" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${actual_version}</var>
<arg>1.1.1.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${actual_version} = 1.1.1.1</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${expected_version}</var>
<arg>2.2.3</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${expected_version} = 2.2.3</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 15:59:37.737" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.737"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:37.738" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:37.738" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:37.738" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:37.738" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:37.738" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log To Console</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log To Console</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.738"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log To Console</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.738" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log To Console</arg>
<arg>4</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log To Console</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Log To Console</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>5</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.739"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:37.739" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:37.739" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:37.739" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.739"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:37.740" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.740"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:37.740" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log To Console</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log To Console</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log To Console</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log To Console</arg>
<arg>4</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.740"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log To Console</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Log To Console</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>5</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.741"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.741"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.740" endtime="20230901 15:59:37.741"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:37.741" endtime="20230901 15:59:37.741"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.739" endtime="20230901 15:59:37.741"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:37.741" endtime="20230901 15:59:37.741"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:37.741" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:37.741" endtime="20230901 15:59:37.741"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 15:59:37.741" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:59:37.741" endtime="20230901 15:59:37.741"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:37.741" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 15:59:37.741" endtime="20230901 15:59:37.741"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 15:59:37.742" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.742"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 15:59:37.742" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Log To Console</arg>
<arg>1</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Log To Console</arg>
<arg>2</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Log To Console</arg>
<arg>3</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Log To Console</arg>
<arg>4</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.742"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Log To Console</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Log To Console</arg>
<arg>5</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>5</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 15:59:37.743" endtime="20230901 15:59:37.743"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.743" endtime="20230901 15:59:37.743"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.742" endtime="20230901 15:59:37.743"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Missed all evals</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 15:59:37.743" endtime="20230901 15:59:37.743"/>
</kw>
<status status="PASS" starttime="20230901 15:59:37.741" endtime="20230901 15:59:37.743"/>
</iter>
<status status="PASS" starttime="20230901 15:59:37.737" endtime="20230901 15:59:37.743"/>
</for>
<kw name="Fail" library="BuiltIn">
<arg>True</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230901 15:59:37.743" level="FAIL">True</msg>
<status status="FAIL" starttime="20230901 15:59:37.743" endtime="20230901 15:59:37.743"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:08:26.802" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 16:08:26.802" endtime="20230901 16:08:26.802"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:08:26.802" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:08:26.802" endtime="20230901 16:08:26.802"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:08:26.802" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 16:08:26.802" endtime="20230901 16:08:26.802"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:08:26.802" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:08:26.802" endtime="20230901 16:08:26.802"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:08:26.803" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:08:26.802" endtime="20230901 16:08:26.803"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.803"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:08:26.803" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.803"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:08:26.803" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.803"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:08:26.803" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.803"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:08:26.803" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.803"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:08:26.803" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.803"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.804"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>RETURN</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>RETURN</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return" library="Reserved">
<arg>False</arg>
<msg timestamp="20230901 16:08:26.804" level="FAIL">'Return' is a reserved keyword.</msg>
<status status="FAIL" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<status status="FAIL" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<status status="FAIL" starttime="20230901 16:08:26.804" endtime="20230901 16:08:26.804"/>
</kw>
<status status="FAIL" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.804"/>
</iter>
<status status="FAIL" starttime="20230901 16:08:26.803" endtime="20230901 16:08:26.805"/>
</for>
<status status="FAIL" starttime="20230901 16:08:26.802" endtime="20230901 16:08:26.805"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.1.1.1</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:27.318" level="INFO">${actual_segments} = ['1', '1', '1', '1']</msg>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.318"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:27.318" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.318"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:10:27.318" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.318"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:10:27.318" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.318"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:10:27.318" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.318"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:27.319" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:27.319" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:27.319" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:27.319" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:27.319" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:27.319" endtime="20230901 16:10:27.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:27.320" endtime="20230901 16:10:27.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:27.320" endtime="20230901 16:10:27.320"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>False</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:10:27.320" endtime="20230901 16:10:27.320"/>
</kw>
<status status="PASS" starttime="20230901 16:10:27.320" endtime="20230901 16:10:27.320"/>
</kw>
<status status="PASS" starttime="20230901 16:10:27.320" endtime="20230901 16:10:27.320"/>
</kw>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.320"/>
</iter>
<status status="PASS" starttime="20230901 16:10:27.318" endtime="20230901 16:10:27.320"/>
</for>
<status status="PASS" starttime="20230901 16:10:27.317" endtime="20230901 16:10:27.320"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:43.676" level="INFO">${actual_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:10:43.676" endtime="20230901 16:10:43.676"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:43.676" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:10:43.676" endtime="20230901 16:10:43.676"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:10:43.677" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:10:43.676" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:10:43.677" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:10:43.677" level="INFO">${min_length} = None</msg>
<status status="PASS" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</iter>
<msg timestamp="20230901 16:10:43.677" level="FAIL">Converting FOR IN RANGE values failed: TypeError: Expected number, got None..</msg>
<status status="FAIL" starttime="20230901 16:10:43.677" endtime="20230901 16:10:43.677"/>
</for>
<status status="FAIL" starttime="20230901 16:10:43.676" endtime="20230901 16:10:43.678"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3.1</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:55.039" level="INFO">${actual_segments} = ['2', '2', '3', '1']</msg>
<status status="PASS" starttime="20230901 16:10:55.039" endtime="20230901 16:10:55.039"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:55.039" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:10:55.039" endtime="20230901 16:10:55.039"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:10:55.040" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 16:10:55.039" endtime="20230901 16:10:55.040"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:10:55.040" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.040"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:10:55.040" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.040"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.040"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:55.040" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.040"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:55.040" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.040"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:55.040" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.040"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:55.041" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:55.041" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.041"/>
</kw>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.041"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:55.042" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:55.042" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:55.042" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:55.042" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:55.042" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.042" endtime="20230901 16:10:55.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.043" endtime="20230901 16:10:55.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.043" endtime="20230901 16:10:55.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.043" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<status status="PASS" starttime="20230901 16:10:55.041" endtime="20230901 16:10:55.044"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:55.044" level="INFO">${actual_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:10:55.044" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:55.044" level="INFO">${actual_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:10:55.044" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:10:55.044" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.044"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<status status="PASS" starttime="20230901 16:10:55.045" endtime="20230901 16:10:55.045"/>
</kw>
<status status="PASS" starttime="20230901 16:10:55.044" endtime="20230901 16:10:55.045"/>
</iter>
<status status="PASS" starttime="20230901 16:10:55.040" endtime="20230901 16:10:55.045"/>
</for>
<status status="PASS" starttime="20230901 16:10:55.039" endtime="20230901 16:10:55.045"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3.1</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:11:49.563" level="INFO">${actual_segments} = ['2', '2', '3', '1']</msg>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.563"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:11:49.563" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.563"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:11:49.563" level="INFO">${min_length} = 4</msg>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.563"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:11:49.563" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.563"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:11:49.563" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.563"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:11:49.564" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:11:49.564" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:11:49.564" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:11:49.564" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:11:49.564" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.564"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:11:49.564" endtime="20230901 16:11:49.565"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:11:49.565" endtime="20230901 16:11:49.565"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:11:49.565" endtime="20230901 16:11:49.565"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:11:49.565" endtime="20230901 16:11:49.565"/>
</kw>
<status status="PASS" starttime="20230901 16:11:49.565" endtime="20230901 16:11:49.565"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:11:49.565" endtime="20230901 16:11:49.565"/>
</kw>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.565"/>
</iter>
<status status="PASS" starttime="20230901 16:11:49.563" endtime="20230901 16:11:49.565"/>
</for>
<status status="PASS" starttime="20230901 16:11:49.562" endtime="20230901 16:11:49.565"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:11:57.231" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:11:57.231" endtime="20230901 16:11:57.231"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:11:57.231" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:11:57.231" endtime="20230901 16:11:57.231"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:11:57.232" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:11:57.231" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:11:57.232" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:11:57.232" level="INFO">${min_length} = None</msg>
<status status="PASS" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.232"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.233" endtime="20230901 16:11:57.233"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.233" endtime="20230901 16:11:57.233"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230901 16:11:57.233" endtime="20230901 16:11:57.233"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.233"/>
</iter>
<msg timestamp="20230901 16:11:57.233" level="FAIL">Converting FOR IN RANGE values failed: TypeError: Expected number, got None..</msg>
<status status="FAIL" starttime="20230901 16:11:57.232" endtime="20230901 16:11:57.233"/>
</for>
<status status="FAIL" starttime="20230901 16:11:57.231" endtime="20230901 16:11:57.233"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:13:39.838" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:13:39.838" endtime="20230901 16:13:39.838"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:13:39.838" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:13:39.838" endtime="20230901 16:13:39.838"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:13:39.838" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:13:39.838" endtime="20230901 16:13:39.838"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:13:39.839" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:13:39.838" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${min_length}</var>
<arg>${exp_length} &lt; ${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230901 16:13:39.839" level="INFO">${min_length} = None</msg>
<status status="PASS" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.839"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.840"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.840"/>
</iter>
<msg timestamp="20230901 16:13:39.840" level="FAIL">Converting FOR IN RANGE values failed: TypeError: Expected number, got None..</msg>
<status status="FAIL" starttime="20230901 16:13:39.839" endtime="20230901 16:13:39.840"/>
</for>
<status status="FAIL" starttime="20230901 16:13:39.838" endtime="20230901 16:13:39.840"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${test}</arg>
<arg>123</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 16:14:31.749" level="FAIL">Variable '${test}' not found. Did you mean:
    ${TEST_TAGS}
    ${TEST_NAME}</msg>
<status status="FAIL" starttime="20230901 16:14:31.748" endtime="20230901 16:14:31.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${test}</arg>
<arg>123</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 16:14:45.442" level="FAIL">Variable '${test}' not found. Did you mean:
    ${TEST_TAGS}
    ${TEST_NAME}</msg>
<status status="FAIL" starttime="20230901 16:14:45.442" endtime="20230901 16:14:45.442"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${test}</var>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230901 16:15:33.017" level="INFO">${test} = </msg>
<status status="PASS" starttime="20230901 16:15:33.017" endtime="20230901 16:15:33.017"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<arg>${test}</arg>
<arg>123</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 16:15:36.572" endtime="20230901 16:15:36.573"/>
</kw>
<if>
<branch type="IF" condition="2 &gt; 1">
<kw name="Set Variable" library="BuiltIn">
<arg>${i}</arg>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 16:22:37.778" endtime="20230901 16:22:37.779"/>
</kw>
<status status="PASS" starttime="20230901 16:22:37.778" endtime="20230901 16:22:37.779"/>
</branch>
<status status="PASS" starttime="20230901 16:22:37.778" endtime="20230901 16:22:37.779"/>
</if>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:24:54.469" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:24:54.469" endtime="20230901 16:24:54.469"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:24:54.469" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:24:54.469" endtime="20230901 16:24:54.469"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:24:54.469" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:24:54.469" endtime="20230901 16:24:54.469"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:24:54.469" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:24:54.469" endtime="20230901 16:24:54.469"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:24:54.469" endtime="20230901 16:24:54.469"/>
</kw>
<kw name="IF ${exp_length} &lt; ${min_length}">
<arg>Set Variable</arg>
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<msg timestamp="20230901 16:24:54.471" level="FAIL">No keyword with name 'IF ${exp_length} &lt; ${min_length}' found.</msg>
<status status="FAIL" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}"/>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</iter>
<status status="NOT RUN" starttime="20230901 16:24:54.471" endtime="20230901 16:24:54.471"/>
</for>
<status status="FAIL" starttime="20230901 16:24:54.468" endtime="20230901 16:24:54.471"/>
</kw>
<if>
<branch type="IF" condition="2 &gt; 1">
<kw name="Set Variable" library="BuiltIn">
<arg>${i}</arg>
<arg>2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230901 16:25:13.617" endtime="20230901 16:25:13.617"/>
</kw>
<status status="PASS" starttime="20230901 16:25:13.617" endtime="20230901 16:25:13.617"/>
</branch>
<status status="PASS" starttime="20230901 16:25:13.617" endtime="20230901 16:25:13.617"/>
</if>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:25:16.227" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:25:16.226" endtime="20230901 16:25:16.227"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:25:16.227" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:25:16.227" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:25:16.227" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</branch>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.227"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:25:16.229" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:25:16.229" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:25:16.229" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:25:16.229" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:25:16.229" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.229"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:25:16.229" endtime="20230901 16:25:16.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:25:16.230" endtime="20230901 16:25:16.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:25:16.230" endtime="20230901 16:25:16.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:25:16.230" endtime="20230901 16:25:16.230"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:25:16.230" endtime="20230901 16:25:16.230"/>
</kw>
<status status="PASS" starttime="20230901 16:25:16.230" endtime="20230901 16:25:16.230"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:25:16.230" endtime="20230901 16:25:16.230"/>
</kw>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.230"/>
</iter>
<status status="PASS" starttime="20230901 16:25:16.227" endtime="20230901 16:25:16.230"/>
</for>
<status status="PASS" starttime="20230901 16:25:16.226" endtime="20230901 16:25:16.230"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:26:48.663" level="INFO">${actual_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:26:48.663" endtime="20230901 16:26:48.663"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:26:48.663" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:26:48.663" endtime="20230901 16:26:48.663"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:26:48.663" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:26:48.663" endtime="20230901 16:26:48.663"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:26:48.664" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</branch>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:26:48.664" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.664"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:26:48.665" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:26:48.665" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:26:48.665" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:26:48.665" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.665"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:26:48.665" endtime="20230901 16:26:48.666"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:26:48.666" endtime="20230901 16:26:48.666"/>
</kw>
<status status="PASS" starttime="20230901 16:26:48.666" endtime="20230901 16:26:48.666"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:26:48.666" endtime="20230901 16:26:48.666"/>
</kw>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.666"/>
</iter>
<status status="PASS" starttime="20230901 16:26:48.664" endtime="20230901 16:26:48.666"/>
</for>
<status status="PASS" starttime="20230901 16:26:48.663" endtime="20230901 16:26:48.666"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:07.429" level="INFO">${actual_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:27:07.429" endtime="20230901 16:27:07.429"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:07.429" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:27:07.429" endtime="20230901 16:27:07.429"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:07.430" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:07.429" endtime="20230901 16:27:07.430"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:07.430" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</branch>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:07.430" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.430"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:07.431" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:07.431" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:07.431" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:07.431" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:07.431" endtime="20230901 16:27:07.431"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:07.432" endtime="20230901 16:27:07.432"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:07.432" endtime="20230901 16:27:07.432"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:27:07.432" endtime="20230901 16:27:07.432"/>
</kw>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.432"/>
</iter>
<status status="PASS" starttime="20230901 16:27:07.430" endtime="20230901 16:27:07.432"/>
</for>
<status status="PASS" starttime="20230901 16:27:07.429" endtime="20230901 16:27:07.432"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3</arg>
<arg>&lt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:19.693" level="INFO">${actual_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:27:19.693" endtime="20230901 16:27:19.693"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:19.693" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:27:19.693" endtime="20230901 16:27:19.693"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:19.693" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:19.693" endtime="20230901 16:27:19.693"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:19.693" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:19.693" endtime="20230901 16:27:19.693"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:19.693" endtime="20230901 16:27:19.694"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</branch>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:19.694" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:19.694" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.694"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:19.694" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:19.695" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:19.695" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:19.695" endtime="20230901 16:27:19.695"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:27:19.696" endtime="20230901 16:27:19.696"/>
</kw>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.696"/>
</iter>
<status status="PASS" starttime="20230901 16:27:19.694" endtime="20230901 16:27:19.696"/>
</for>
<status status="PASS" starttime="20230901 16:27:19.692" endtime="20230901 16:27:19.696"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.2</arg>
<arg>&lt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:28.040" level="INFO">${actual_segments} = ['2', '2', '2']</msg>
<status status="PASS" starttime="20230901 16:27:28.040" endtime="20230901 16:27:28.040"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:28.040" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:27:28.040" endtime="20230901 16:27:28.040"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:28.040" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:28.040" endtime="20230901 16:27:28.040"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:28.041" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:28.040" endtime="20230901 16:27:28.041"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</branch>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:28.041" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.041"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:28.042" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:28.042" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:28.042" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:28.042" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.042"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:28.043" endtime="20230901 16:27:28.043"/>
</kw>
<status status="PASS" starttime="20230901 16:27:28.042" endtime="20230901 16:27:28.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:28.043" endtime="20230901 16:27:28.043"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:27:28.043" endtime="20230901 16:27:28.043"/>
</kw>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.043"/>
</iter>
<status status="PASS" starttime="20230901 16:27:28.041" endtime="20230901 16:27:28.043"/>
</for>
<status status="PASS" starttime="20230901 16:27:28.040" endtime="20230901 16:27:28.043"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.4</arg>
<arg>&lt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:37.828" level="INFO">${actual_segments} = ['2', '2', '4']</msg>
<status status="PASS" starttime="20230901 16:27:37.828" endtime="20230901 16:27:37.828"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:37.828" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:27:37.828" endtime="20230901 16:27:37.828"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:37.829" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:37.828" endtime="20230901 16:27:37.829"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:27:37.829" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</branch>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.829"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:37.830" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:27:37.830" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:37.830" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:27:37.830" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:27:37.830" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.830"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:37.830" endtime="20230901 16:27:37.831"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:37.831" endtime="20230901 16:27:37.831"/>
</kw>
<status status="PASS" starttime="20230901 16:27:37.831" endtime="20230901 16:27:37.831"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:27:37.831" endtime="20230901 16:27:37.831"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:27:37.831" endtime="20230901 16:27:37.831"/>
</kw>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.831"/>
</iter>
<status status="PASS" starttime="20230901 16:27:37.829" endtime="20230901 16:27:37.831"/>
</for>
<status status="PASS" starttime="20230901 16:27:37.828" endtime="20230901 16:27:37.831"/>
</kw>
<kw name="Compare Package Versions">
<arg>1.2.4</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:28:11.491" level="INFO">${actual_segments} = ['1', '2', '4']</msg>
<status status="PASS" starttime="20230901 16:28:11.490" endtime="20230901 16:28:11.491"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:28:11.491" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:28:11.491" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:28:11.491" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</branch>
<status status="PASS" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.491"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:11.491" endtime="20230901 16:28:11.492"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.492"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:28:11.492" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.492"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:28:11.492" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.492"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:28:11.492" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.492"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:28:11.492" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.492"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:28:11.492" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.492"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>False</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<status status="PASS" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230901 16:28:11.493" endtime="20230901 16:28:11.493"/>
</kw>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.493"/>
</iter>
<status status="PASS" starttime="20230901 16:28:11.492" endtime="20230901 16:28:11.493"/>
</for>
<status status="PASS" starttime="20230901 16:28:11.490" endtime="20230901 16:28:11.493"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.4</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:28:21.278" level="INFO">${actual_segments} = ['2', '2', '4']</msg>
<status status="PASS" starttime="20230901 16:28:21.278" endtime="20230901 16:28:21.278"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:28:21.278" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:28:21.278" endtime="20230901 16:28:21.278"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:28:21.278" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:28:21.278" endtime="20230901 16:28:21.278"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:28:21.278" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:28:21.278" endtime="20230901 16:28:21.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</branch>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:28:21.279" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.279"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:28:21.280" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:28:21.280" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:28:21.280" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:28:21.280" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.280"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:28:21.281" endtime="20230901 16:28:21.281"/>
</kw>
<status status="PASS" starttime="20230901 16:28:21.280" endtime="20230901 16:28:21.281"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:28:21.281" endtime="20230901 16:28:21.281"/>
</kw>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.281"/>
</iter>
<status status="PASS" starttime="20230901 16:28:21.279" endtime="20230901 16:28:21.281"/>
</for>
<status status="PASS" starttime="20230901 16:28:21.278" endtime="20230901 16:28:21.281"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.4</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:29:31.931" level="INFO">${actual_segments} = ['2', '2', '4']</msg>
<status status="PASS" starttime="20230901 16:29:31.931" endtime="20230901 16:29:31.931"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:29:31.931" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:29:31.931" endtime="20230901 16:29:31.931"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:29:31.932" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:29:31.931" endtime="20230901 16:29:31.932"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:29:31.932" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</branch>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.932"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:29:31.933" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:29:31.933" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:29:31.933" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:29:31.933" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:29:31.933" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.933" endtime="20230901 16:29:31.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.934"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:29:31.934" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:29:31.934" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:29:31.934" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:29:31.934" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:29:31.934" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.934"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.935"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.935"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.934" endtime="20230901 16:29:31.935"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:29:31.936" level="INFO">${actual_segment} = 4</msg>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:29:31.936" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:29:31.936" level="INFO">${actual_segment} = 4</msg>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:29:31.936" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:29:31.936" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.936"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.936" endtime="20230901 16:29:31.937"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:29:31.937" endtime="20230901 16:29:31.937"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>False</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:29:31.937" endtime="20230901 16:29:31.937"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.937" endtime="20230901 16:29:31.937"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.937" endtime="20230901 16:29:31.937"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.935" endtime="20230901 16:29:31.937"/>
</iter>
<status status="PASS" starttime="20230901 16:29:31.932" endtime="20230901 16:29:31.937"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230901 16:29:31.937" endtime="20230901 16:29:31.937"/>
</kw>
<status status="PASS" starttime="20230901 16:29:31.931" endtime="20230901 16:29:31.937"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:38.762" level="INFO">${actual_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:38.762" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:32:38.762" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:32:38.762" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</branch>
<status status="PASS" starttime="20230901 16:32:38.762" endtime="20230901 16:32:38.762"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:38.763" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:38.763" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:38.763" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:38.763" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:38.763" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.763"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.764"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.764"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.764"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:38.765" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:38.765" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:38.765" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:38.765" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:38.765" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.765" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.764" endtime="20230901 16:32:38.766"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:38.766" level="INFO">${actual_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:38.766" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:38.766" level="INFO">${actual_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:38.766" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.766"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:38.767" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.766" endtime="20230901 16:32:38.767"/>
</iter>
<status status="PASS" starttime="20230901 16:32:38.763" endtime="20230901 16:32:38.767"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:32:38.767" endtime="20230901 16:32:38.767"/>
</kw>
<status status="PASS" starttime="20230901 16:32:38.761" endtime="20230901 16:32:38.767"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.3</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:48.613" level="INFO">${actual_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:48.613" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:32:48.613" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:32:48.613" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</branch>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.613"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.613" endtime="20230901 16:32:48.614"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.614"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:48.614" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.614"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:48.614" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.614"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:48.614" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.614"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:48.614" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.614"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:48.614" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.614"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.615"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.615"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.615"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:48.616" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:48.616" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:48.616" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:48.616" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:48.616" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.616"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.616" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.615" endtime="20230901 16:32:48.617"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:48.617" level="INFO">${actual_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:32:48.617" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:48.617" level="INFO">${actual_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:32:48.617" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.617"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:32:48.618" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.618"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.617" endtime="20230901 16:32:48.618"/>
</iter>
<status status="PASS" starttime="20230901 16:32:48.614" endtime="20230901 16:32:48.618"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:32:48.618" endtime="20230901 16:32:48.619"/>
</kw>
<status status="PASS" starttime="20230901 16:32:48.612" endtime="20230901 16:32:48.619"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.1</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:02.749" level="INFO">${actual_segments} = ['2', '2', '1']</msg>
<status status="PASS" starttime="20230901 16:33:02.748" endtime="20230901 16:33:02.749"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:02.749" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:02.749" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:02.749" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</branch>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.749"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:02.750" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:02.750" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:02.750" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:02.750" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:02.750" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.750"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.750" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.751"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:02.751" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.751"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:02.752" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:02.752" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:02.752" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:02.752" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.752"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.752" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.751" endtime="20230901 16:33:02.753"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:02.753" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:02.753" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:02.753" level="INFO">${actual_segment} = 1</msg>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:02.753" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:02.753" level="INFO">${comparison} = -2</msg>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.753"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>False</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.753" endtime="20230901 16:33:02.754"/>
</iter>
<status status="PASS" starttime="20230901 16:33:02.749" endtime="20230901 16:33:02.754"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230901 16:33:02.754" endtime="20230901 16:33:02.754"/>
</kw>
<status status="PASS" starttime="20230901 16:33:02.748" endtime="20230901 16:33:02.754"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2.4</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:10.241" level="INFO">${actual_segments} = ['2', '2', '4']</msg>
<status status="PASS" starttime="20230901 16:33:10.241" endtime="20230901 16:33:10.241"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:10.241" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:33:10.241" endtime="20230901 16:33:10.241"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:10.242" level="INFO">${min_length} = 3</msg>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:10.242" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</branch>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.242"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:10.243" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:10.243" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:10.243" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:10.243" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:10.243" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.243"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.243" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.244"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:10.244" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:10.244" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.244"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:10.245" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:10.245" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:10.245" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.245"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.245" endtime="20230901 16:33:10.246"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.244" endtime="20230901 16:33:10.246"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:10.246" level="INFO">${actual_segment} = 4</msg>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:10.246" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:10.246" level="INFO">${actual_segment} = 4</msg>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:10.246" level="INFO">${expected_segment} = 3</msg>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:10.246" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.246"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.247" endtime="20230901 16:33:10.247"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.247" endtime="20230901 16:33:10.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.247" endtime="20230901 16:33:10.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.247" endtime="20230901 16:33:10.247"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:10.247" endtime="20230901 16:33:10.247"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.246" endtime="20230901 16:33:10.247"/>
</iter>
<status status="PASS" starttime="20230901 16:33:10.242" endtime="20230901 16:33:10.247"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:33:10.247" endtime="20230901 16:33:10.247"/>
</kw>
<status status="PASS" starttime="20230901 16:33:10.241" endtime="20230901 16:33:10.247"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:17.890" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:33:17.890" endtime="20230901 16:33:17.890"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:17.891" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:33:17.890" endtime="20230901 16:33:17.891"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:17.891" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.891"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:17.891" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.891"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.891"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.891"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.891"/>
</branch>
<status status="PASS" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.891"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:17.891" endtime="20230901 16:33:17.892"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:17.892" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:17.892" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:17.892" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:17.892" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:17.892" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.892"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.893"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:17.893" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:17.893" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.893"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:17.894" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:17.894" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:17.894" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<status status="PASS" starttime="20230901 16:33:17.893" endtime="20230901 16:33:17.894"/>
</iter>
<status status="PASS" starttime="20230901 16:33:17.892" endtime="20230901 16:33:17.894"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:33:17.894" endtime="20230901 16:33:17.894"/>
</kw>
<status status="PASS" starttime="20230901 16:33:17.890" endtime="20230901 16:33:17.894"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>==</arg>
<arg>2.2.3</arg>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:25.180" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:33:25.180" endtime="20230901 16:33:25.180"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:25.180" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:33:25.180" endtime="20230901 16:33:25.180"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:25.180" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.180" endtime="20230901 16:33:25.180"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:33:25.180" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:33:25.180" endtime="20230901 16:33:25.180"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:25.180" endtime="20230901 16:33:25.181"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</branch>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${min_length}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:25.181" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:25.181" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.181"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:25.182" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:25.182" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:25.182" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.182" endtime="20230901 16:33:25.182"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.183"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:25.183" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:33:25.183" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:25.183" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:33:25.183" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:33:25.183" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.183"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<status status="PASS" starttime="20230901 16:33:25.183" endtime="20230901 16:33:25.184"/>
</iter>
<status status="PASS" starttime="20230901 16:33:25.181" endtime="20230901 16:33:25.184"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:33:25.184" endtime="20230901 16:33:25.184"/>
</kw>
<status status="PASS" starttime="20230901 16:33:25.180" endtime="20230901 16:33:25.184"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.2</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:41:59.065" level="INFO">${actual_segments} = ['2', '2']</msg>
<status status="PASS" starttime="20230901 16:41:59.064" endtime="20230901 16:41:59.065"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:41:59.065" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.065"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:41:59.065" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.065"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:41:59.065" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.065"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.065"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.065"/>
</branch>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.065"/>
</if>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:41:59.066" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:41:59.066" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:41:59.066" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:41:59.066" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:41:59.066" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.066"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.066" endtime="20230901 16:41:59.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.067"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:41:59.067" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.067"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:41:59.067" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:41:59.068" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:41:59.068" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:41:59.068" level="INFO">${comparison} = 0</msg>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Actual: ${actual_segment} Expected: ${expected_segment} Comparison ${comparison}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Operator selected: ${operator}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.068"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.068" endtime="20230901 16:41:59.069"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>False</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230901 16:41:59.069" endtime="20230901 16:41:59.069"/>
</kw>
<status status="PASS" starttime="20230901 16:41:59.067" endtime="20230901 16:41:59.069"/>
</iter>
<status status="PASS" starttime="20230901 16:41:59.065" endtime="20230901 16:41:59.069"/>
</for>
<kw name="Return From Keyword" library="BuiltIn">
<arg>True</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="PASS" starttime="20230901 16:41:59.069" endtime="20230901 16:41:59.069"/>
</kw>
<status status="PASS" starttime="20230901 16:41:59.064" endtime="20230901 16:41:59.069"/>
</kw>
<kw name="Compare Package Versions">
<arg>2.1</arg>
<arg>&gt;=</arg>
<arg>2.2.3</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${actual_segments}</var>
<arg>"${actual_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:42:04.307" level="INFO">${actual_segments} = ['2', '1']</msg>
<status status="PASS" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_segments}</var>
<arg>"${expected_version}".split('.')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:42:04.307" level="INFO">${expected_segments} = ['2', '2', '3']</msg>
<status status="PASS" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${min_length}</var>
<arg>${actual_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:42:04.307" level="INFO">${min_length} = 2</msg>
<status status="PASS" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</kw>
<kw name="Get Match Count" library="Collections">
<var>${exp_length}</var>
<arg>${expected_segments}</arg>
<arg>*</arg>
<doc>Returns the count of matches to ``pattern`` in ``list``.</doc>
<msg timestamp="20230901 16:42:04.307" level="INFO">${exp_length} = 3</msg>
<status status="PASS" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</kw>
<if>
<branch type="IF" condition="${exp_length} &lt; ${min_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${min_length}</arg>
<arg>${exp_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</kw>
<status status="NOT RUN" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</branch>
<status status="PASS" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.307"/>
</if>
<for flavor="IN RANGE">
<var>${i}</var>
<value>${min_length}</value>
<iter>
<var name="${i}">0</var>
<kw name="Log" library="BuiltIn">
<arg>${i}</arg>
<arg>console=${True}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230901 16:42:04.307" endtime="20230901 16:42:04.308"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${actual_segment}</var>
<arg>${actual_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:42:04.308" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:42:04.308" endtime="20230901 16:42:04.308"/>
</kw>
<kw name="Get From List" library="Collections">
<var>${expected_segment}</var>
<arg>${expected_segments}</arg>
<arg>${i}</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230901 16:42:04.308" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:42:04.308" endtime="20230901 16:42:04.308"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${actual_segment}</var>
<arg>${actual_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:42:04.308" level="INFO">${actual_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:42:04.308" endtime="20230901 16:42:04.308"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${expected_segment}</var>
<arg>${expected_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230901 16:42:04.308" level="INFO">${expected_segment} = 2</msg>
<status status="PASS" starttime="20230901 16:42:04.308" endtime="20230901 16:42:04.308"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>${actual_segment} - ${expected_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230901 16:42:04.308" level="INFO">${comparison} = 0</msg>
