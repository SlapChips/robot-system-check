<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230923 09:31:40.369" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:40.454" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230923 09:31:40.454" endtime="20230923 09:31:40.455"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:40.456" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230923 09:31:40.456" endtime="20230923 09:31:40.456"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 09:31:40.457" endtime="20230923 09:31:40.458"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:31:40.458" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 09:31:40.458" endtime="20230923 09:31:40.458"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.459" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230923 09:31:40.459" endtime="20230923 09:31:40.459"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.460" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230923 09:31:40.460" endtime="20230923 09:31:40.460"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.468" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.507" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 09:31:40.460" endtime="20230923 09:31:40.507"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.511" endtime="20230923 09:31:40.512"/>
</kw>
<msg timestamp="20230923 09:31:40.512" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.512" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.509" endtime="20230923 09:31:40.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:40.513" endtime="20230923 09:31:40.513"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.459" endtime="20230923 09:31:40.513"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.514" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 09:31:40.514" endtime="20230923 09:31:40.514"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.515" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 09:31:40.515" endtime="20230923 09:31:40.515"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.521" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.560" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 09:31:40.515" endtime="20230923 09:31:40.560"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.564" endtime="20230923 09:31:40.565"/>
</kw>
<msg timestamp="20230923 09:31:40.565" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.565" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.562" endtime="20230923 09:31:40.565"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:40.566" endtime="20230923 09:31:40.566"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.514" endtime="20230923 09:31:40.566"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.567" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230923 09:31:40.567" endtime="20230923 09:31:40.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.568" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230923 09:31:40.568" endtime="20230923 09:31:40.568"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.574" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.612" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 09:31:40.568" endtime="20230923 09:31:40.612"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.616" endtime="20230923 09:31:40.617"/>
</kw>
<msg timestamp="20230923 09:31:40.618" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.618" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.615" endtime="20230923 09:31:40.618"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:40.618" endtime="20230923 09:31:40.619"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.567" endtime="20230923 09:31:40.619"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.620" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230923 09:31:40.620" endtime="20230923 09:31:40.620"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.621" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230923 09:31:40.621" endtime="20230923 09:31:40.621"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.627" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.670" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 09:31:40.621" endtime="20230923 09:31:40.670"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.674" endtime="20230923 09:31:40.675"/>
</kw>
<msg timestamp="20230923 09:31:40.675" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.676" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.672" endtime="20230923 09:31:40.676"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:40.676" endtime="20230923 09:31:40.676"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.619" endtime="20230923 09:31:40.676"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.678" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230923 09:31:40.677" endtime="20230923 09:31:40.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.678" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230923 09:31:40.678" endtime="20230923 09:31:40.679"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.684" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.726" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 09:31:40.679" endtime="20230923 09:31:40.726"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.730" endtime="20230923 09:31:40.731"/>
</kw>
<msg timestamp="20230923 09:31:40.731" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.732" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.728" endtime="20230923 09:31:40.732"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:40.732" endtime="20230923 09:31:40.732"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.677" endtime="20230923 09:31:40.732"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.734" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 09:31:40.733" endtime="20230923 09:31:40.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.734" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 09:31:40.734" endtime="20230923 09:31:40.735"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.740" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.783" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 09:31:40.735" endtime="20230923 09:31:40.784"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.788" endtime="20230923 09:31:40.789"/>
</kw>
<msg timestamp="20230923 09:31:40.789" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.789" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.786" endtime="20230923 09:31:40.789"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:40.790" endtime="20230923 09:31:40.790"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.733" endtime="20230923 09:31:40.790"/>
</iter>
<status status="PASS" starttime="20230923 09:31:40.459" endtime="20230923 09:31:40.790"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 09:31:40.791" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 09:31:40.791" endtime="20230923 09:31:40.792"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.457" endtime="20230923 09:31:40.792"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 09:31:40.452" endtime="20230923 09:31:40.794"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=1.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230923 09:31:40.804" level="INFO">${packages_dict} = {'ant': '1.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': '0', 'pam': '1.3.1.8', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230923 09:31:40.800" endtime="20230923 09:31:40.804"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<var>${element}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${key}">ant</var>
<var name="${element}">1.9.3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}:${element}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:31:40.805" endtime="20230923 09:31:40.807"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.805" endtime="20230923 09:31:40.807"/>
</iter>
<iter>
<var name="${key}">java-11-openjdk</var>
<var name="${element}">1.1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}:${element}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:31:40.807" endtime="20230923 09:31:40.809"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.807" endtime="20230923 09:31:40.809"/>
</iter>
<iter>
<var name="${key}">python3</var>
<var name="${element}">3.7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}:${element}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:31:40.809" endtime="20230923 09:31:40.810"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.809" endtime="20230923 09:31:40.810"/>
</iter>
<iter>
<var name="${key}">openssl</var>
<var name="${element}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}:${element}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:31:40.810" endtime="20230923 09:31:40.812"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.810" endtime="20230923 09:31:40.812"/>
</iter>
<iter>
<var name="${key}">pam</var>
<var name="${element}">1.3.1.8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}:${element}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:31:40.812" endtime="20230923 09:31:40.815"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.812" endtime="20230923 09:31:40.815"/>
</iter>
<iter>
<var name="${key}">python3-setuptools</var>
<var name="${element}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}:${element}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:31:40.815" endtime="20230923 09:31:40.817"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.815" endtime="20230923 09:31:40.817"/>
</iter>
<status status="PASS" starttime="20230923 09:31:40.805" endtime="20230923 09:31:40.817"/>
</for>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="PASS" starttime="20230923 09:31:40.798" endtime="20230923 09:31:40.818"/>
</test>
<test id="s1-t3" name="Check library availability" line="62">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:31:40.822" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230923 09:31:40.822" endtime="20230923 09:31:40.822"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.829" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.848" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230923 09:31:40.823" endtime="20230923 09:31:40.848"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:31:40.854" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 09:31:40.853" endtime="20230923 09:31:40.854"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.857" endtime="20230923 09:31:40.858"/>
</kw>
<msg timestamp="20230923 09:31:40.858" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.858" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.857" endtime="20230923 09:31:40.858"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.861" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230923 09:31:40.860" endtime="20230923 09:31:40.861"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.859" endtime="20230923 09:31:40.862"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.862" endtime="20230923 09:31:40.862"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:31:40.862" endtime="20230923 09:31:40.862"/>
</branch>
<status status="PASS" starttime="20230923 09:31:40.859" endtime="20230923 09:31:40.862"/>
</if>
<status status="PASS" starttime="20230923 09:31:40.856" endtime="20230923 09:31:40.862"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.863" endtime="20230923 09:31:40.863"/>
</kw>
<msg timestamp="20230923 09:31:40.864" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.864" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.863" endtime="20230923 09:31:40.864"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.865" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230923 09:31:40.864" endtime="20230923 09:31:40.865"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.864" endtime="20230923 09:31:40.865"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.865" endtime="20230923 09:31:40.865"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:31:40.865" endtime="20230923 09:31:40.866"/>
</branch>
<status status="PASS" starttime="20230923 09:31:40.864" endtime="20230923 09:31:40.866"/>
</if>
<status status="PASS" starttime="20230923 09:31:40.862" endtime="20230923 09:31:40.866"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:40.866" endtime="20230923 09:31:40.867"/>
</kw>
<msg timestamp="20230923 09:31:40.867" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:40.867" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:40.866" endtime="20230923 09:31:40.867"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.868" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230923 09:31:40.867" endtime="20230923 09:31:40.868"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.867" endtime="20230923 09:31:40.868"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.868" endtime="20230923 09:31:40.868"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:31:40.868" endtime="20230923 09:31:40.868"/>
</branch>
<status status="PASS" starttime="20230923 09:31:40.867" endtime="20230923 09:31:40.868"/>
</if>
<status status="PASS" starttime="20230923 09:31:40.866" endtime="20230923 09:31:40.868"/>
</iter>
<status status="PASS" starttime="20230923 09:31:40.855" endtime="20230923 09:31:40.868"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 09:31:40.870" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 09:31:40.869" endtime="20230923 09:31:40.870"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230923 09:31:40.821" endtime="20230923 09:31:40.871"/>
</test>
<test id="s1-t4" name="Check libz library version" line="79">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:40.877" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230923 09:31:40.877" endtime="20230923 09:31:40.878"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:40.879" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230923 09:31:40.878" endtime="20230923 09:31:40.879"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.886" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:40.937" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230923 09:31:40.879" endtime="20230923 09:31:40.937"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:31:40.944" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230923 09:31:40.941" endtime="20230923 09:31:40.944"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:31:40.946" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230923 09:31:40.946" endtime="20230923 09:31:40.946"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.951" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230923 09:31:40.950" endtime="20230923 09:31:40.953"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:31:40.955" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230923 09:31:40.954" endtime="20230923 09:31:40.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.956" level="INFO">True</msg>
<status status="PASS" starttime="20230923 09:31:40.955" endtime="20230923 09:31:40.956"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.960" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230923 09:31:40.958" endtime="20230923 09:31:40.960"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 09:31:40.961" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230923 09:31:40.960" endtime="20230923 09:31:40.962"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.956" endtime="20230923 09:31:40.962"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.962" endtime="20230923 09:31:40.962"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.963" endtime="20230923 09:31:40.963"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:31:40.962" endtime="20230923 09:31:40.963"/>
</branch>
<status status="PASS" starttime="20230923 09:31:40.956" endtime="20230923 09:31:40.963"/>
</if>
<status status="PASS" starttime="20230923 09:31:40.948" endtime="20230923 09:31:40.963"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.963" endtime="20230923 09:31:40.963"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.963" endtime="20230923 09:31:40.963"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:31:40.963" endtime="20230923 09:31:40.963"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 09:31:40.964" endtime="20230923 09:31:40.964"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:31:40.964" endtime="20230923 09:31:40.964"/>
</branch>
<status status="PASS" starttime="20230923 09:31:40.947" endtime="20230923 09:31:40.964"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230923 09:31:40.875" endtime="20230923 09:31:40.965">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="105">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:40.973" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230923 09:31:40.972" endtime="20230923 09:31:40.973"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:40.974" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230923 09:31:40.974" endtime="20230923 09:31:40.974"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 09:31:40.976" endtime="20230923 09:31:40.976"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:31:40.977" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 09:31:40.976" endtime="20230923 09:31:40.977"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:40.979" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230923 09:31:40.979" endtime="20230923 09:31:40.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:40.980" level="INFO">which tar</msg>
<status status="PASS" starttime="20230923 09:31:40.980" endtime="20230923 09:31:40.980"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:40.986" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.005" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230923 09:31:40.980" endtime="20230923 09:31:41.005"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:41.009" endtime="20230923 09:31:41.010"/>
</kw>
<msg timestamp="20230923 09:31:41.010" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:41.011" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:41.007" endtime="20230923 09:31:41.011"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:41.011" endtime="20230923 09:31:41.011"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.978" endtime="20230923 09:31:41.011"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:41.013" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230923 09:31:41.012" endtime="20230923 09:31:41.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:41.013" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230923 09:31:41.013" endtime="20230923 09:31:41.013"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.020" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.037" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230923 09:31:41.014" endtime="20230923 09:31:41.037"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:41.041" endtime="20230923 09:31:41.042"/>
</kw>
<msg timestamp="20230923 09:31:41.043" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:41.043" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:41.039" endtime="20230923 09:31:41.043"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:41.043" endtime="20230923 09:31:41.044"/>
</kw>
<status status="PASS" starttime="20230923 09:31:41.012" endtime="20230923 09:31:41.044"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:41.045" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230923 09:31:41.044" endtime="20230923 09:31:41.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:41.046" level="INFO">which find</msg>
<status status="PASS" starttime="20230923 09:31:41.045" endtime="20230923 09:31:41.046"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.052" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.069" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230923 09:31:41.046" endtime="20230923 09:31:41.070"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:41.074" endtime="20230923 09:31:41.075"/>
</kw>
<msg timestamp="20230923 09:31:41.075" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:41.075" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:41.072" endtime="20230923 09:31:41.075"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:41.076" endtime="20230923 09:31:41.076"/>
</kw>
<status status="PASS" starttime="20230923 09:31:41.044" endtime="20230923 09:31:41.076"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:31:41.077" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230923 09:31:41.077" endtime="20230923 09:31:41.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:31:41.078" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230923 09:31:41.078" endtime="20230923 09:31:41.078"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.084" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.100" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230923 09:31:41.078" endtime="20230923 09:31:41.101"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:31:41.105" endtime="20230923 09:31:41.106"/>
</kw>
<msg timestamp="20230923 09:31:41.106" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:31:41.107" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:31:41.103" endtime="20230923 09:31:41.107"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:31:41.107" endtime="20230923 09:31:41.107"/>
</kw>
<status status="PASS" starttime="20230923 09:31:41.077" endtime="20230923 09:31:41.107"/>
</iter>
<status status="PASS" starttime="20230923 09:31:40.977" endtime="20230923 09:31:41.108"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 09:31:41.109" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 09:31:41.108" endtime="20230923 09:31:41.109"/>
</kw>
<status status="PASS" starttime="20230923 09:31:40.975" endtime="20230923 09:31:41.109"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 09:31:40.970" endtime="20230923 09:31:41.111"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="112">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.123" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.144" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230923 09:31:41.117" endtime="20230923 09:31:41.144"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:31:41.155" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230923 09:31:41.148" endtime="20230923 09:31:41.155"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:31:41.157" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230923 09:31:41.156" endtime="20230923 09:31:41.157"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:31:41.160" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 09:31:41.157" endtime="20230923 09:31:41.160"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 09:31:41.164" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230923 09:31:41.163" endtime="20230923 09:31:41.164"/>
</kw>
<status status="PASS" starttime="20230923 09:31:41.162" endtime="20230923 09:31:41.164"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 09:31:41.114" endtime="20230923 09:31:41.165">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="126">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.180" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.373" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230923 09:31:41.173" endtime="20230923 09:31:41.373"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 09:31:41.379" endtime="20230923 09:31:41.381"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 09:31:41.171" endtime="20230923 09:31:41.387"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="132">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.404" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:41.424" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230923 09:31:41.397" endtime="20230923 09:31:41.424"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 09:31:41.432" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230923 09:31:41.430" endtime="20230923 09:31:41.432"/>
</kw>
<status status="FAIL" starttime="20230923 09:31:41.429" endtime="20230923 09:31:41.433"/>
</iter>
<status status="FAIL" starttime="20230923 09:31:41.427" endtime="20230923 09:31:41.433"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 09:31:41.394" endtime="20230923 09:31:41.434">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="140">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:41.449" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:42.049" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6  ...</msg>
<status status="PASS" starttime="20230923 09:31:41.443" endtime="20230923 09:31:42.049"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 09:31:42.057" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377    60  +8392us[  +18ms] +/-   32ms
^- ntp4.bit.nl                   1   6   377     0    +23ms[  +23ms] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377     7    +20ms[  +31ms] +/- 7968us
^- mail.emuadmin.com             3   6   377    63  +7386us[  +17ms] +/-   94ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230923 09:31:42.055" endtime="20230923 09:31:42.057"/>
</kw>
<status status="FAIL" starttime="20230923 09:31:42.054" endtime="20230923 09:31:42.057"/>
</iter>
<status status="FAIL" starttime="20230923 09:31:42.052" endtime="20230923 09:31:42.058"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 09:31:41.441" endtime="20230923 09:31:42.059">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377    60  +8392us[  +18ms] +/-   32ms
^- ntp4.bit.nl                   1   6   377     0    +23ms[  +23ms] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377     7    +20ms[  +31ms] +/- 7968us
^- mail.emuadmin.com             3   6   377    63  +7386us[  +17ms] +/-   94ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="148">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:31:42.075" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:31:42.273" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230923 09:31:42.069" endtime="20230923 09:31:42.273"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 09:31:42.276" endtime="20230923 09:31:42.278"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 09:31:42.067" endtime="20230923 09:31:42.280"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230923 09:31:40.370" endtime="20230923 09:31:42.286"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
