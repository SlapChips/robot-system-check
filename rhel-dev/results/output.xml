<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230922 16:19:53.408" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.494" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230922 16:19:53.493" endtime="20230922 16:19:53.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.495" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230922 16:19:53.495" endtime="20230922 16:19:53.495"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230922 16:19:53.496" endtime="20230922 16:19:53.497"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:19:53.498" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230922 16:19:53.497" endtime="20230922 16:19:53.498"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.499" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230922 16:19:53.498" endtime="20230922 16:19:53.499"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.500" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230922 16:19:53.499" endtime="20230922 16:19:53.500"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.504" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.525" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230922 16:19:53.500" endtime="20230922 16:19:53.525"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.527" endtime="20230922 16:19:53.528"/>
</kw>
<msg timestamp="20230922 16:19:53.528" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.528" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.526" endtime="20230922 16:19:53.529"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.529" endtime="20230922 16:19:53.530"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.498" endtime="20230922 16:19:53.530"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.531" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230922 16:19:53.530" endtime="20230922 16:19:53.531"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.532" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230922 16:19:53.531" endtime="20230922 16:19:53.532"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.535" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.551" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230922 16:19:53.532" endtime="20230922 16:19:53.551"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.552" endtime="20230922 16:19:53.553"/>
</kw>
<msg timestamp="20230922 16:19:53.553" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.553" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.552" endtime="20230922 16:19:53.553"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.553" endtime="20230922 16:19:53.554"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.530" endtime="20230922 16:19:53.554"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.554" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230922 16:19:53.554" endtime="20230922 16:19:53.554"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.555" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230922 16:19:53.555" endtime="20230922 16:19:53.555"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.558" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.573" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230922 16:19:53.555" endtime="20230922 16:19:53.573"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.574" endtime="20230922 16:19:53.574"/>
</kw>
<msg timestamp="20230922 16:19:53.575" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.575" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.573" endtime="20230922 16:19:53.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.575" endtime="20230922 16:19:53.575"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.554" endtime="20230922 16:19:53.575"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.576" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230922 16:19:53.576" endtime="20230922 16:19:53.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.576" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230922 16:19:53.576" endtime="20230922 16:19:53.576"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.579" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.596" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230922 16:19:53.577" endtime="20230922 16:19:53.596"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.598" endtime="20230922 16:19:53.598"/>
</kw>
<msg timestamp="20230922 16:19:53.598" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.599" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.597" endtime="20230922 16:19:53.599"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.599" endtime="20230922 16:19:53.599"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.575" endtime="20230922 16:19:53.600"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.600" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230922 16:19:53.600" endtime="20230922 16:19:53.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.601" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230922 16:19:53.600" endtime="20230922 16:19:53.601"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.603" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.621" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230922 16:19:53.601" endtime="20230922 16:19:53.621"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.622" endtime="20230922 16:19:53.623"/>
</kw>
<msg timestamp="20230922 16:19:53.623" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.623" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.622" endtime="20230922 16:19:53.623"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.623" endtime="20230922 16:19:53.624"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.600" endtime="20230922 16:19:53.624"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.624" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230922 16:19:53.624" endtime="20230922 16:19:53.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.625" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230922 16:19:53.625" endtime="20230922 16:19:53.625"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.627" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.645" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230922 16:19:53.625" endtime="20230922 16:19:53.645"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.646" endtime="20230922 16:19:53.646"/>
</kw>
<msg timestamp="20230922 16:19:53.647" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.647" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.645" endtime="20230922 16:19:53.647"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.647" endtime="20230922 16:19:53.647"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.624" endtime="20230922 16:19:53.647"/>
</iter>
<status status="PASS" starttime="20230922 16:19:53.498" endtime="20230922 16:19:53.647"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230922 16:19:53.648" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230922 16:19:53.648" endtime="20230922 16:19:53.648"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.496" endtime="20230922 16:19:53.648"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230922 16:19:53.491" endtime="20230922 16:19:53.649"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${key}"/>
<var name="${value}"/>
<kw name="Log" library="BuiltIn">
<arg>${key}:${value}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.654" endtime="20230922 16:19:53.654"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package}</var>
<arg>rpm -q ${key}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.654" endtime="20230922 16:19:53.654"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package}</arg>
<arg>${key}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.654" endtime="20230922 16:19:53.654"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${required_version}</var>
<arg>${packages_dict}</arg>
<arg>${key}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.655" endtime="20230922 16:19:53.655"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.653" endtime="20230922 16:19:53.655"/>
</iter>
<msg timestamp="20230922 16:19:53.655" level="FAIL">Value of variable '&amp;{packages_dict}' is not dictionary or dictionary-like.</msg>
<status status="FAIL" starttime="20230922 16:19:53.653" endtime="20230922 16:19:53.655"/>
</for>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="FAIL" starttime="20230922 16:19:53.651" endtime="20230922 16:19:53.656">Value of variable '&amp;{packages_dict}' is not dictionary or dictionary-like.</status>
</test>
<test id="s1-t3" name="Check library availability" line="55">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:19:53.659" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230922 16:19:53.659" endtime="20230922 16:19:53.659"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.663" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.671" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230922 16:19:53.660" endtime="20230922 16:19:53.671"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:19:53.673" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230922 16:19:53.672" endtime="20230922 16:19:53.673"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.675" endtime="20230922 16:19:53.676"/>
</kw>
<msg timestamp="20230922 16:19:53.676" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.676" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.675" endtime="20230922 16:19:53.676"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.678" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230922 16:19:53.677" endtime="20230922 16:19:53.678"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.677" endtime="20230922 16:19:53.678"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.678" endtime="20230922 16:19:53.678"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.678" endtime="20230922 16:19:53.679"/>
</branch>
<status status="PASS" starttime="20230922 16:19:53.676" endtime="20230922 16:19:53.679"/>
</if>
<status status="PASS" starttime="20230922 16:19:53.674" endtime="20230922 16:19:53.679"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.680" endtime="20230922 16:19:53.681"/>
</kw>
<msg timestamp="20230922 16:19:53.681" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.681" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.679" endtime="20230922 16:19:53.682"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.682" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230922 16:19:53.682" endtime="20230922 16:19:53.683"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.682" endtime="20230922 16:19:53.683"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.683" endtime="20230922 16:19:53.683"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.683" endtime="20230922 16:19:53.683"/>
</branch>
<status status="PASS" starttime="20230922 16:19:53.682" endtime="20230922 16:19:53.683"/>
</if>
<status status="PASS" starttime="20230922 16:19:53.679" endtime="20230922 16:19:53.683"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.684" endtime="20230922 16:19:53.685"/>
</kw>
<msg timestamp="20230922 16:19:53.685" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.686" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.683" endtime="20230922 16:19:53.686"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.687" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230922 16:19:53.686" endtime="20230922 16:19:53.687"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.686" endtime="20230922 16:19:53.687"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.687" endtime="20230922 16:19:53.687"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.687" endtime="20230922 16:19:53.687"/>
</branch>
<status status="PASS" starttime="20230922 16:19:53.686" endtime="20230922 16:19:53.687"/>
</if>
<status status="PASS" starttime="20230922 16:19:53.683" endtime="20230922 16:19:53.687"/>
</iter>
<status status="PASS" starttime="20230922 16:19:53.674" endtime="20230922 16:19:53.687"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230922 16:19:53.688" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230922 16:19:53.688" endtime="20230922 16:19:53.688"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230922 16:19:53.658" endtime="20230922 16:19:53.689"/>
</test>
<test id="s1-t4" name="Check libz library version" line="72">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.693" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230922 16:19:53.692" endtime="20230922 16:19:53.693"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.694" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230922 16:19:53.694" endtime="20230922 16:19:53.695"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.698" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.724" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230922 16:19:53.695" endtime="20230922 16:19:53.724"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230922 16:19:53.726" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230922 16:19:53.725" endtime="20230922 16:19:53.726"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230922 16:19:53.727" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230922 16:19:53.727" endtime="20230922 16:19:53.728"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.731" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230922 16:19:53.730" endtime="20230922 16:19:53.732"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230922 16:19:53.733" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230922 16:19:53.732" endtime="20230922 16:19:53.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.734" level="INFO">True</msg>
<status status="PASS" starttime="20230922 16:19:53.733" endtime="20230922 16:19:53.734"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.737" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230922 16:19:53.735" endtime="20230922 16:19:53.737"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230922 16:19:53.739" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230922 16:19:53.737" endtime="20230922 16:19:53.739"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.734" endtime="20230922 16:19:53.739"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.739" endtime="20230922 16:19:53.739"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.739" endtime="20230922 16:19:53.739"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.739" endtime="20230922 16:19:53.739"/>
</branch>
<status status="PASS" starttime="20230922 16:19:53.734" endtime="20230922 16:19:53.739"/>
</if>
<status status="PASS" starttime="20230922 16:19:53.728" endtime="20230922 16:19:53.740"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.740" endtime="20230922 16:19:53.740"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.740" endtime="20230922 16:19:53.740"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.740" endtime="20230922 16:19:53.740"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230922 16:19:53.740" endtime="20230922 16:19:53.740"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:19:53.740" endtime="20230922 16:19:53.740"/>
</branch>
<status status="PASS" starttime="20230922 16:19:53.728" endtime="20230922 16:19:53.740"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230922 16:19:53.691" endtime="20230922 16:19:53.741">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="98">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.745" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230922 16:19:53.744" endtime="20230922 16:19:53.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.746" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230922 16:19:53.745" endtime="20230922 16:19:53.746"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230922 16:19:53.747" endtime="20230922 16:19:53.747"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:19:53.747" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230922 16:19:53.747" endtime="20230922 16:19:53.748"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.748" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230922 16:19:53.748" endtime="20230922 16:19:53.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.749" level="INFO">which tar</msg>
<status status="PASS" starttime="20230922 16:19:53.749" endtime="20230922 16:19:53.749"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.752" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.759" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230922 16:19:53.749" endtime="20230922 16:19:53.759"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.760" endtime="20230922 16:19:53.761"/>
</kw>
<msg timestamp="20230922 16:19:53.761" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.761" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.760" endtime="20230922 16:19:53.761"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.761" endtime="20230922 16:19:53.762"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.748" endtime="20230922 16:19:53.762"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.763" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230922 16:19:53.762" endtime="20230922 16:19:53.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.764" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230922 16:19:53.763" endtime="20230922 16:19:53.764"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.769" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.776" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230922 16:19:53.764" endtime="20230922 16:19:53.776"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.777" endtime="20230922 16:19:53.778"/>
</kw>
<msg timestamp="20230922 16:19:53.778" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.778" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.777" endtime="20230922 16:19:53.778"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.778" endtime="20230922 16:19:53.779"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.762" endtime="20230922 16:19:53.779"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.779" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230922 16:19:53.779" endtime="20230922 16:19:53.779"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.780" level="INFO">which find</msg>
<status status="PASS" starttime="20230922 16:19:53.780" endtime="20230922 16:19:53.780"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.783" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.789" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230922 16:19:53.780" endtime="20230922 16:19:53.789"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.790" endtime="20230922 16:19:53.791"/>
</kw>
<msg timestamp="20230922 16:19:53.791" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.791" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.790" endtime="20230922 16:19:53.791"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.791" endtime="20230922 16:19:53.792"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.779" endtime="20230922 16:19:53.792"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:19:53.792" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230922 16:19:53.792" endtime="20230922 16:19:53.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:19:53.793" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230922 16:19:53.793" endtime="20230922 16:19:53.793"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.796" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.802" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230922 16:19:53.793" endtime="20230922 16:19:53.802"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:19:53.803" endtime="20230922 16:19:53.804"/>
</kw>
<msg timestamp="20230922 16:19:53.804" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:19:53.804" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:19:53.803" endtime="20230922 16:19:53.804"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:19:53.804" endtime="20230922 16:19:53.805"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.792" endtime="20230922 16:19:53.805"/>
</iter>
<status status="PASS" starttime="20230922 16:19:53.748" endtime="20230922 16:19:53.805"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230922 16:19:53.805" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230922 16:19:53.805" endtime="20230922 16:19:53.805"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.746" endtime="20230922 16:19:53.806"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230922 16:19:53.743" endtime="20230922 16:19:53.806"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="105">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.813" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.820" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230922 16:19:53.810" endtime="20230922 16:19:53.820"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230922 16:19:53.823" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230922 16:19:53.821" endtime="20230922 16:19:53.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:19:53.824" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230922 16:19:53.824" endtime="20230922 16:19:53.824"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230922 16:19:53.827" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230922 16:19:53.825" endtime="20230922 16:19:53.827"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230922 16:19:53.830" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230922 16:19:53.829" endtime="20230922 16:19:53.830"/>
</kw>
<status status="PASS" starttime="20230922 16:19:53.828" endtime="20230922 16:19:53.830"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230922 16:19:53.809" endtime="20230922 16:19:53.831">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="119">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.837" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.936" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230922 16:19:53.835" endtime="20230922 16:19:53.936"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230922 16:19:53.937" endtime="20230922 16:19:53.938"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230922 16:19:53.834" endtime="20230922 16:19:53.940"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="125">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.952" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:53.960" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230922 16:19:53.946" endtime="20230922 16:19:53.960"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230922 16:19:53.962" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230922 16:19:53.961" endtime="20230922 16:19:53.962"/>
</kw>
<status status="FAIL" starttime="20230922 16:19:53.961" endtime="20230922 16:19:53.962"/>
</iter>
<status status="FAIL" starttime="20230922 16:19:53.961" endtime="20230922 16:19:53.962"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230922 16:19:53.944" endtime="20230922 16:19:53.963">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="133">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:53.969" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:54.555" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- 5.255.99.180                  2   6  ...</msg>
<status status="PASS" starttime="20230922 16:19:53.967" endtime="20230922 16:19:54.555"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230922 16:19:54.558" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- 5.255.99.180                  2   6   377     2    +10ms[  +10ms] +/-   15ms
^- ntp4.bit.nl                   1   6   377     1  +9265us[+9265us] +/-  305ms
^* 149-225-172-081.dynamic.&gt;     1   6   377     4  +4451us[  +21ms] +/- 7993us
^- mail.emuadmin.com             3   6   377     6    +11ms[  +28ms] +/-   73ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230922 16:19:54.556" endtime="20230922 16:19:54.558"/>
</kw>
<status status="FAIL" starttime="20230922 16:19:54.556" endtime="20230922 16:19:54.558"/>
</iter>
<status status="FAIL" starttime="20230922 16:19:54.556" endtime="20230922 16:19:54.558"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230922 16:19:53.966" endtime="20230922 16:19:54.559">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- 5.255.99.180                  2   6   377     2    +10ms[  +10ms] +/-   15ms
^- ntp4.bit.nl                   1   6   377     1  +9265us[+9265us] +/-  305ms
^* 149-225-172-081.dynamic.&gt;     1   6   377     4  +4451us[  +21ms] +/- 7993us
^- mail.emuadmin.com             3   6   377     6    +11ms[  +28ms] +/-   73ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="141">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:19:54.566" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:19:54.656" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230922 16:19:54.564" endtime="20230922 16:19:54.656"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230922 16:19:54.657" endtime="20230922 16:19:54.658"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230922 16:19:54.563" endtime="20230922 16:19:54.659"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230922 16:19:53.409" endtime="20230922 16:19:54.662"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="7" fail="3" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
