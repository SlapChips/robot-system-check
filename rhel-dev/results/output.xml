<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230923 09:45:26.160" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:26.245" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230923 09:45:26.244" endtime="20230923 09:45:26.245"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:26.247" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230923 09:45:26.246" endtime="20230923 09:45:26.247"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 09:45:26.249" endtime="20230923 09:45:26.249"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:45:26.249" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 09:45:26.249" endtime="20230923 09:45:26.249"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:26.250" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230923 09:45:26.250" endtime="20230923 09:45:26.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.251" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230923 09:45:26.251" endtime="20230923 09:45:26.251"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.258" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.297" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 09:45:26.251" endtime="20230923 09:45:26.297"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:26.301" endtime="20230923 09:45:26.302"/>
</kw>
<msg timestamp="20230923 09:45:26.303" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:26.303" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:26.300" endtime="20230923 09:45:26.303"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.303" endtime="20230923 09:45:26.304"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.250" endtime="20230923 09:45:26.304"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:26.305" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 09:45:26.305" endtime="20230923 09:45:26.305"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.306" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 09:45:26.306" endtime="20230923 09:45:26.306"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.312" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.350" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.306" endtime="20230923 09:45:26.351"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:26.355" endtime="20230923 09:45:26.356"/>
</kw>
<msg timestamp="20230923 09:45:26.357" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:26.357" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:26.353" endtime="20230923 09:45:26.357"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.357" endtime="20230923 09:45:26.357"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.305" endtime="20230923 09:45:26.358"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:26.359" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230923 09:45:26.358" endtime="20230923 09:45:26.359"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.359" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230923 09:45:26.359" endtime="20230923 09:45:26.359"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.366" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.403" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.360" endtime="20230923 09:45:26.403"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:26.408" endtime="20230923 09:45:26.409"/>
</kw>
<msg timestamp="20230923 09:45:26.410" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:26.410" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:26.406" endtime="20230923 09:45:26.410"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.410" endtime="20230923 09:45:26.410"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.358" endtime="20230923 09:45:26.411"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:26.412" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230923 09:45:26.411" endtime="20230923 09:45:26.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.412" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230923 09:45:26.412" endtime="20230923 09:45:26.412"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.418" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.458" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.413" endtime="20230923 09:45:26.458"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:26.462" endtime="20230923 09:45:26.463"/>
</kw>
<msg timestamp="20230923 09:45:26.464" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:26.464" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:26.461" endtime="20230923 09:45:26.464"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.464" endtime="20230923 09:45:26.465"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.411" endtime="20230923 09:45:26.465"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:26.466" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230923 09:45:26.465" endtime="20230923 09:45:26.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.466" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230923 09:45:26.466" endtime="20230923 09:45:26.467"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.473" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.514" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.467" endtime="20230923 09:45:26.515"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:26.518" endtime="20230923 09:45:26.520"/>
</kw>
<msg timestamp="20230923 09:45:26.520" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:26.520" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:26.517" endtime="20230923 09:45:26.520"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.520" endtime="20230923 09:45:26.521"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.465" endtime="20230923 09:45:26.521"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:26.522" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 09:45:26.522" endtime="20230923 09:45:26.522"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.523" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 09:45:26.522" endtime="20230923 09:45:26.523"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.529" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.572" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 09:45:26.523" endtime="20230923 09:45:26.572"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:26.576" endtime="20230923 09:45:26.577"/>
</kw>
<msg timestamp="20230923 09:45:26.578" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:26.578" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:26.575" endtime="20230923 09:45:26.578"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.578" endtime="20230923 09:45:26.578"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.521" endtime="20230923 09:45:26.579"/>
</iter>
<status status="PASS" starttime="20230923 09:45:26.250" endtime="20230923 09:45:26.579"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 09:45:26.580" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 09:45:26.579" endtime="20230923 09:45:26.580"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.248" endtime="20230923 09:45:26.581"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 09:45:26.242" endtime="20230923 09:45:26.582"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=9.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230923 09:45:26.592" level="INFO">${packages_dict} = {'ant': '9.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': '0', 'pam': '1.3.1.8', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230923 09:45:26.589" endtime="20230923 09:45:26.592"/>
</kw>
<for flavor="IN">
<var>${package}</var>
<var>${required_version}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${package}">ant</var>
<var name="${required_version}">9.9.3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.594" endtime="20230923 09:45:26.596"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.602" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.642" level="INFO">${package_rpm} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 09:45:26.596" endtime="20230923 09:45:26.642"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.645" endtime="20230923 09:45:26.649"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:26.651" level="INFO">${installed_version} = ['1.10.9']</msg>
<status status="PASS" starttime="20230923 09:45:26.649" endtime="20230923 09:45:26.651"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.651" endtime="20230923 09:45:26.654"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>"${actual_version}" &lt; "${expected_version}" and -1 or "${actual_version}" &gt; "${expected_version}" and 1 or 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:26.657" level="INFO">${comparison} = -1</msg>
<status status="PASS" starttime="20230923 09:45:26.656" endtime="20230923 09:45:26.657"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.658" endtime="20230923 09:45:26.658"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version is not greater or equal</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20230923 09:45:26.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:45:26.659" endtime="20230923 09:45:26.660"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.659" endtime="20230923 09:45:26.660"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.658" endtime="20230923 09:45:26.660"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 09:45:26.660" endtime="20230923 09:45:26.661"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 09:45:26.661" endtime="20230923 09:45:26.661"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 09:45:26.661" endtime="20230923 09:45:26.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 09:45:26.661" endtime="20230923 09:45:26.661"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version Passes</arg>
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" starttime="20230923 09:45:26.662" endtime="20230923 09:45:26.662"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.655" endtime="20230923 09:45:26.663"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.594" endtime="20230923 09:45:26.663"/>
</iter>
<iter>
<var name="${package}">java-11-openjdk</var>
<var name="${required_version}">1.1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.663" endtime="20230923 09:45:26.665"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.671" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.711" level="INFO">${package_rpm} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.665" endtime="20230923 09:45:26.711"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.713" endtime="20230923 09:45:26.716"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:26.719" level="INFO">${installed_version} = ['11.0.18.0.10']</msg>
<status status="PASS" starttime="20230923 09:45:26.717" endtime="20230923 09:45:26.719"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.719" endtime="20230923 09:45:26.722"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>"${actual_version}" &lt; "${expected_version}" and -1 or "${actual_version}" &gt; "${expected_version}" and 1 or 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:26.726" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230923 09:45:26.725" endtime="20230923 09:45:26.726"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.727" endtime="20230923 09:45:26.727"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.728" endtime="20230923 09:45:26.728"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.727" endtime="20230923 09:45:26.728"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.729" endtime="20230923 09:45:26.729"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.729" endtime="20230923 09:45:26.730"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.730" endtime="20230923 09:45:26.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.731" level="INFO">Package version comparison passed</msg>
<status status="PASS" starttime="20230923 09:45:26.731" endtime="20230923 09:45:26.731"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version Passes</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20230923 09:45:26.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:45:26.731" endtime="20230923 09:45:26.732"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.722" endtime="20230923 09:45:26.732"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.663" endtime="20230923 09:45:26.732"/>
</iter>
<iter>
<var name="${package}">python3</var>
<var name="${required_version}">3.7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.733" endtime="20230923 09:45:26.735"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.741" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.782" level="INFO">${package_rpm} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.735" endtime="20230923 09:45:26.783"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.785" endtime="20230923 09:45:26.788"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:26.790" level="INFO">${installed_version} = ['3.9.16']</msg>
<status status="PASS" starttime="20230923 09:45:26.788" endtime="20230923 09:45:26.790"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.790" endtime="20230923 09:45:26.794"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>"${actual_version}" &lt; "${expected_version}" and -1 or "${actual_version}" &gt; "${expected_version}" and 1 or 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:26.797" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230923 09:45:26.796" endtime="20230923 09:45:26.797"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.797" endtime="20230923 09:45:26.797"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.798" endtime="20230923 09:45:26.799"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.798" endtime="20230923 09:45:26.799"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.799" endtime="20230923 09:45:26.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.800" endtime="20230923 09:45:26.800"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.800" endtime="20230923 09:45:26.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.801" level="INFO">Package version comparison passed</msg>
<status status="PASS" starttime="20230923 09:45:26.801" endtime="20230923 09:45:26.801"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version Passes</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20230923 09:45:26.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:45:26.802" endtime="20230923 09:45:26.802"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.794" endtime="20230923 09:45:26.802"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.733" endtime="20230923 09:45:26.802"/>
</iter>
<iter>
<var name="${package}">openssl</var>
<var name="${required_version}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.803" endtime="20230923 09:45:26.805"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.811" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.854" level="INFO">${package_rpm} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.805" endtime="20230923 09:45:26.854"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.857" endtime="20230923 09:45:26.860"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:26.862" level="INFO">${installed_version} = ['3.0.7']</msg>
<status status="PASS" starttime="20230923 09:45:26.861" endtime="20230923 09:45:26.862"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.863" endtime="20230923 09:45:26.866"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>"${actual_version}" &lt; "${expected_version}" and -1 or "${actual_version}" &gt; "${expected_version}" and 1 or 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:26.869" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230923 09:45:26.868" endtime="20230923 09:45:26.869"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.869" endtime="20230923 09:45:26.870"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.871" endtime="20230923 09:45:26.871"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.870" endtime="20230923 09:45:26.871"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.871" endtime="20230923 09:45:26.872"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.872" endtime="20230923 09:45:26.872"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.872" endtime="20230923 09:45:26.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.873" level="INFO">Package version comparison passed</msg>
<status status="PASS" starttime="20230923 09:45:26.873" endtime="20230923 09:45:26.873"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version Passes</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20230923 09:45:26.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:45:26.873" endtime="20230923 09:45:26.874"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.866" endtime="20230923 09:45:26.874"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.803" endtime="20230923 09:45:26.874"/>
</iter>
<iter>
<var name="${package}">pam</var>
<var name="${required_version}">1.3.1.8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.875" endtime="20230923 09:45:26.878"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.886" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:26.931" level="INFO">${package_rpm} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 09:45:26.878" endtime="20230923 09:45:26.932"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.934" endtime="20230923 09:45:26.937"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:26.939" level="INFO">${installed_version} = ['1.5.1']</msg>
<status status="PASS" starttime="20230923 09:45:26.937" endtime="20230923 09:45:26.939"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.939" endtime="20230923 09:45:26.943"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>"${actual_version}" &lt; "${expected_version}" and -1 or "${actual_version}" &gt; "${expected_version}" and 1 or 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:26.946" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230923 09:45:26.945" endtime="20230923 09:45:26.946"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.946" endtime="20230923 09:45:26.947"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.948" endtime="20230923 09:45:26.948"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.947" endtime="20230923 09:45:26.948"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.948" endtime="20230923 09:45:26.949"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.949" endtime="20230923 09:45:26.949"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:26.949" endtime="20230923 09:45:26.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:26.950" level="INFO">Package version comparison passed</msg>
<status status="PASS" starttime="20230923 09:45:26.950" endtime="20230923 09:45:26.950"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version Passes</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20230923 09:45:26.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:45:26.950" endtime="20230923 09:45:26.951"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.943" endtime="20230923 09:45:26.951"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.875" endtime="20230923 09:45:26.951"/>
</iter>
<iter>
<var name="${package}">python3-setuptools</var>
<var name="${required_version}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:26.952" endtime="20230923 09:45:26.953"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:26.960" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.004" level="INFO">${package_rpm} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 09:45:26.954" endtime="20230923 09:45:27.005"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:27.007" endtime="20230923 09:45:27.011"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:27.013" level="INFO">${installed_version} = ['53.0.0']</msg>
<status status="PASS" starttime="20230923 09:45:27.011" endtime="20230923 09:45:27.013"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 09:45:27.013" endtime="20230923 09:45:27.016"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Takes dotted decimal package versions and comparies them with a provided operator</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${comparison}</var>
<arg>"${actual_version}" &lt; "${expected_version}" and -1 or "${actual_version}" &gt; "${expected_version}" and 1 or 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:27.019" level="INFO">${comparison} = 1</msg>
<status status="PASS" starttime="20230923 09:45:27.019" endtime="20230923 09:45:27.019"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.020" endtime="20230923 09:45:27.020"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&gt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${comparison} &lt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not greater or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.021" endtime="20230923 09:45:27.023"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.020" endtime="20230923 09:45:27.023"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;"</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt;= 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.023" endtime="20230923 09:45:27.023"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "&lt;="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} &gt; 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not less or equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.024" endtime="20230923 09:45:27.024"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${operator}" == "=="</arg>
<arg>Run Keyword If</arg>
<arg>${comparison} != 0</arg>
<arg>Return From Keyword</arg>
<arg>Package Version is not equal</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.024" endtime="20230923 09:45:27.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.025" level="INFO">Package version comparison passed</msg>
<status status="PASS" starttime="20230923 09:45:27.025" endtime="20230923 09:45:27.025"/>
</kw>
<kw name="Return From Keyword" library="BuiltIn">
<arg>Package Version Passes</arg>
<doc>Returns from the enclosing user keyword.</doc>
<msg timestamp="20230923 09:45:27.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20230923 09:45:27.025" endtime="20230923 09:45:27.026"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.017" endtime="20230923 09:45:27.026"/>
</kw>
<status status="PASS" starttime="20230923 09:45:26.952" endtime="20230923 09:45:27.026"/>
</iter>
<status status="PASS" starttime="20230923 09:45:26.593" endtime="20230923 09:45:27.026"/>
</for>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="PASS" starttime="20230923 09:45:26.586" endtime="20230923 09:45:27.028"/>
</test>
<test id="s1-t3" name="Check library availability" line="68">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:45:27.035" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230923 09:45:27.034" endtime="20230923 09:45:27.035"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.042" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.061" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230923 09:45:27.036" endtime="20230923 09:45:27.061"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:45:27.066" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 09:45:27.065" endtime="20230923 09:45:27.066"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.069" endtime="20230923 09:45:27.070"/>
</kw>
<msg timestamp="20230923 09:45:27.070" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.070" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.069" endtime="20230923 09:45:27.071"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.072" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230923 09:45:27.072" endtime="20230923 09:45:27.072"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.071" endtime="20230923 09:45:27.072"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.072" endtime="20230923 09:45:27.073"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:45:27.072" endtime="20230923 09:45:27.073"/>
</branch>
<status status="PASS" starttime="20230923 09:45:27.071" endtime="20230923 09:45:27.073"/>
</if>
<status status="PASS" starttime="20230923 09:45:27.068" endtime="20230923 09:45:27.073"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.073" endtime="20230923 09:45:27.074"/>
</kw>
<msg timestamp="20230923 09:45:27.074" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.074" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.073" endtime="20230923 09:45:27.074"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.075" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230923 09:45:27.075" endtime="20230923 09:45:27.075"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.074" endtime="20230923 09:45:27.075"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.075" endtime="20230923 09:45:27.075"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:45:27.075" endtime="20230923 09:45:27.075"/>
</branch>
<status status="PASS" starttime="20230923 09:45:27.074" endtime="20230923 09:45:27.075"/>
</if>
<status status="PASS" starttime="20230923 09:45:27.073" endtime="20230923 09:45:27.076"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.076" endtime="20230923 09:45:27.077"/>
</kw>
<msg timestamp="20230923 09:45:27.077" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.077" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.076" endtime="20230923 09:45:27.077"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.079" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230923 09:45:27.078" endtime="20230923 09:45:27.079"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.077" endtime="20230923 09:45:27.079"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.079" endtime="20230923 09:45:27.079"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:45:27.079" endtime="20230923 09:45:27.079"/>
</branch>
<status status="PASS" starttime="20230923 09:45:27.077" endtime="20230923 09:45:27.079"/>
</if>
<status status="PASS" starttime="20230923 09:45:27.076" endtime="20230923 09:45:27.079"/>
</iter>
<status status="PASS" starttime="20230923 09:45:27.067" endtime="20230923 09:45:27.079"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 09:45:27.081" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 09:45:27.080" endtime="20230923 09:45:27.081"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230923 09:45:27.032" endtime="20230923 09:45:27.082"/>
</test>
<test id="s1-t4" name="Check libz library version" line="85">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:27.088" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230923 09:45:27.088" endtime="20230923 09:45:27.088"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:27.089" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230923 09:45:27.089" endtime="20230923 09:45:27.089"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.097" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.149" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230923 09:45:27.090" endtime="20230923 09:45:27.150"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:27.156" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230923 09:45:27.153" endtime="20230923 09:45:27.156"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:27.158" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230923 09:45:27.157" endtime="20230923 09:45:27.158"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.162" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230923 09:45:27.161" endtime="20230923 09:45:27.163"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:27.164" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230923 09:45:27.163" endtime="20230923 09:45:27.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.165" level="INFO">True</msg>
<status status="PASS" starttime="20230923 09:45:27.164" endtime="20230923 09:45:27.165"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.169" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230923 09:45:27.167" endtime="20230923 09:45:27.170"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 09:45:27.171" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230923 09:45:27.170" endtime="20230923 09:45:27.172"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.165" endtime="20230923 09:45:27.172"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.172" endtime="20230923 09:45:27.172"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.172" endtime="20230923 09:45:27.172"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:45:27.172" endtime="20230923 09:45:27.172"/>
</branch>
<status status="PASS" starttime="20230923 09:45:27.165" endtime="20230923 09:45:27.172"/>
</if>
<status status="PASS" starttime="20230923 09:45:27.159" endtime="20230923 09:45:27.173"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.173" endtime="20230923 09:45:27.173"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.173" endtime="20230923 09:45:27.173"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:45:27.173" endtime="20230923 09:45:27.173"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 09:45:27.173" endtime="20230923 09:45:27.174"/>
</kw>
<status status="NOT RUN" starttime="20230923 09:45:27.173" endtime="20230923 09:45:27.174"/>
</branch>
<status status="PASS" starttime="20230923 09:45:27.159" endtime="20230923 09:45:27.174"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230923 09:45:27.086" endtime="20230923 09:45:27.175">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="111">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:27.183" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230923 09:45:27.182" endtime="20230923 09:45:27.183"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:27.184" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230923 09:45:27.184" endtime="20230923 09:45:27.184"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 09:45:27.186" endtime="20230923 09:45:27.186"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 09:45:27.187" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 09:45:27.186" endtime="20230923 09:45:27.187"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:27.188" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230923 09:45:27.188" endtime="20230923 09:45:27.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.188" level="INFO">which tar</msg>
<status status="PASS" starttime="20230923 09:45:27.188" endtime="20230923 09:45:27.189"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.196" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.215" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230923 09:45:27.189" endtime="20230923 09:45:27.215"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.219" endtime="20230923 09:45:27.221"/>
</kw>
<msg timestamp="20230923 09:45:27.221" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.221" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.218" endtime="20230923 09:45:27.221"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.221" endtime="20230923 09:45:27.222"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.187" endtime="20230923 09:45:27.222"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:27.223" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230923 09:45:27.223" endtime="20230923 09:45:27.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.224" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230923 09:45:27.223" endtime="20230923 09:45:27.224"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.230" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.249" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230923 09:45:27.224" endtime="20230923 09:45:27.249"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.253" endtime="20230923 09:45:27.254"/>
</kw>
<msg timestamp="20230923 09:45:27.255" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.255" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.251" endtime="20230923 09:45:27.255"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.255" endtime="20230923 09:45:27.256"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.222" endtime="20230923 09:45:27.256"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:27.257" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230923 09:45:27.256" endtime="20230923 09:45:27.257"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.258" level="INFO">which find</msg>
<status status="PASS" starttime="20230923 09:45:27.257" endtime="20230923 09:45:27.258"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.264" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.281" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230923 09:45:27.258" endtime="20230923 09:45:27.281"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.285" endtime="20230923 09:45:27.286"/>
</kw>
<msg timestamp="20230923 09:45:27.286" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.287" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.283" endtime="20230923 09:45:27.287"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.287" endtime="20230923 09:45:27.287"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.256" endtime="20230923 09:45:27.287"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 09:45:27.289" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230923 09:45:27.288" endtime="20230923 09:45:27.289"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 09:45:27.289" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230923 09:45:27.289" endtime="20230923 09:45:27.289"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.295" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.312" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230923 09:45:27.289" endtime="20230923 09:45:27.312"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 09:45:27.317" endtime="20230923 09:45:27.318"/>
</kw>
<msg timestamp="20230923 09:45:27.318" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 09:45:27.318" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 09:45:27.315" endtime="20230923 09:45:27.318"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 09:45:27.318" endtime="20230923 09:45:27.319"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.288" endtime="20230923 09:45:27.319"/>
</iter>
<status status="PASS" starttime="20230923 09:45:27.187" endtime="20230923 09:45:27.319"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 09:45:27.320" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 09:45:27.319" endtime="20230923 09:45:27.320"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.185" endtime="20230923 09:45:27.321"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 09:45:27.180" endtime="20230923 09:45:27.322"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="118">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.334" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.353" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230923 09:45:27.328" endtime="20230923 09:45:27.353"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 09:45:27.361" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230923 09:45:27.358" endtime="20230923 09:45:27.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 09:45:27.363" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230923 09:45:27.362" endtime="20230923 09:45:27.363"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 09:45:27.367" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 09:45:27.364" endtime="20230923 09:45:27.367"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 09:45:27.370" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230923 09:45:27.369" endtime="20230923 09:45:27.370"/>
</kw>
<status status="PASS" starttime="20230923 09:45:27.368" endtime="20230923 09:45:27.370"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 09:45:27.326" endtime="20230923 09:45:27.372">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="132">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.386" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.582" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230923 09:45:27.380" endtime="20230923 09:45:27.582"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 09:45:27.588" endtime="20230923 09:45:27.596"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 09:45:27.378" endtime="20230923 09:45:27.599"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="138">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.617" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:27.636" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230923 09:45:27.610" endtime="20230923 09:45:27.636"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 09:45:27.645" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230923 09:45:27.643" endtime="20230923 09:45:27.646"/>
</kw>
<status status="FAIL" starttime="20230923 09:45:27.641" endtime="20230923 09:45:27.646"/>
</iter>
<status status="FAIL" starttime="20230923 09:45:27.639" endtime="20230923 09:45:27.646"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 09:45:27.607" endtime="20230923 09:45:27.648">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="146">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:27.664" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:28.265" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6  ...</msg>
<status status="PASS" starttime="20230923 09:45:27.658" endtime="20230923 09:45:28.266"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 09:45:28.272" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377    46    +14ms[  +14ms] +/-   46ms
^- ntp4.bit.nl                   1   6   377    50    +10ms[  +10ms] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    56  +7790us[+4593us] +/- 8367us
^- mail.emuadmin.com             3   6   377    49    +14ms[  +14ms] +/-   51ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230923 09:45:28.271" endtime="20230923 09:45:28.273"/>
</kw>
<status status="FAIL" starttime="20230923 09:45:28.269" endtime="20230923 09:45:28.273"/>
</iter>
<status status="FAIL" starttime="20230923 09:45:28.268" endtime="20230923 09:45:28.273"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 09:45:27.656" endtime="20230923 09:45:28.275">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377    46    +14ms[  +14ms] +/-   46ms
^- ntp4.bit.nl                   1   6   377    50    +10ms[  +10ms] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    56  +7790us[+4593us] +/- 8367us
^- mail.emuadmin.com             3   6   377    49    +14ms[  +14ms] +/-   51ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="154">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 09:45:28.291" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 09:45:28.488" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230923 09:45:28.286" endtime="20230923 09:45:28.489"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 09:45:28.492" endtime="20230923 09:45:28.494"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 09:45:28.284" endtime="20230923 09:45:28.495"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230923 09:45:26.162" endtime="20230923 09:45:28.501"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
