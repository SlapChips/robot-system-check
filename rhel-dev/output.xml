<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230923 12:15:00.882" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:00.975" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230923 12:15:00.975" endtime="20230923 12:15:00.975"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:00.976" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230923 12:15:00.976" endtime="20230923 12:15:00.976"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 12:15:00.978" endtime="20230923 12:15:00.978"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:15:00.978" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 12:15:00.978" endtime="20230923 12:15:00.979"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:00.979" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230923 12:15:00.979" endtime="20230923 12:15:00.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:00.980" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230923 12:15:00.980" endtime="20230923 12:15:00.980"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:00.987" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.026" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:15:00.980" endtime="20230923 12:15:01.026"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.030" endtime="20230923 12:15:01.031"/>
</kw>
<msg timestamp="20230923 12:15:01.031" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.031" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.028" endtime="20230923 12:15:01.031"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.032" endtime="20230923 12:15:01.032"/>
</kw>
<status status="PASS" starttime="20230923 12:15:00.979" endtime="20230923 12:15:01.032"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.034" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 12:15:01.033" endtime="20230923 12:15:01.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.034" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 12:15:01.034" endtime="20230923 12:15:01.034"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.041" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.079" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.034" endtime="20230923 12:15:01.079"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.083" endtime="20230923 12:15:01.084"/>
</kw>
<msg timestamp="20230923 12:15:01.085" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.085" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.081" endtime="20230923 12:15:01.085"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.085" endtime="20230923 12:15:01.085"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.033" endtime="20230923 12:15:01.086"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.087" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230923 12:15:01.086" endtime="20230923 12:15:01.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.088" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230923 12:15:01.087" endtime="20230923 12:15:01.088"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.094" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.132" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.088" endtime="20230923 12:15:01.132"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.137" endtime="20230923 12:15:01.138"/>
</kw>
<msg timestamp="20230923 12:15:01.139" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.139" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.135" endtime="20230923 12:15:01.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.139" endtime="20230923 12:15:01.140"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.086" endtime="20230923 12:15:01.140"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.141" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230923 12:15:01.140" endtime="20230923 12:15:01.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.142" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230923 12:15:01.141" endtime="20230923 12:15:01.142"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.148" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.188" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.142" endtime="20230923 12:15:01.188"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.192" endtime="20230923 12:15:01.193"/>
</kw>
<msg timestamp="20230923 12:15:01.193" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.193" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.190" endtime="20230923 12:15:01.194"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.194" endtime="20230923 12:15:01.194"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.140" endtime="20230923 12:15:01.194"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.196" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230923 12:15:01.195" endtime="20230923 12:15:01.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.196" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230923 12:15:01.196" endtime="20230923 12:15:01.196"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.202" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.244" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.196" endtime="20230923 12:15:01.244"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.248" endtime="20230923 12:15:01.249"/>
</kw>
<msg timestamp="20230923 12:15:01.249" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.249" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.246" endtime="20230923 12:15:01.250"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.250" endtime="20230923 12:15:01.250"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.195" endtime="20230923 12:15:01.250"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.252" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 12:15:01.251" endtime="20230923 12:15:01.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.252" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 12:15:01.252" endtime="20230923 12:15:01.252"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.258" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.301" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:15:01.252" endtime="20230923 12:15:01.301"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.305" endtime="20230923 12:15:01.307"/>
</kw>
<msg timestamp="20230923 12:15:01.307" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.307" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.304" endtime="20230923 12:15:01.307"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.307" endtime="20230923 12:15:01.308"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.251" endtime="20230923 12:15:01.308"/>
</iter>
<status status="PASS" starttime="20230923 12:15:00.979" endtime="20230923 12:15:01.308"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:15:01.309" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:15:01.308" endtime="20230923 12:15:01.309"/>
</kw>
<status status="PASS" starttime="20230923 12:15:00.977" endtime="20230923 12:15:01.310"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:15:00.973" endtime="20230923 12:15:01.311"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=9.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230923 12:15:01.319" level="INFO">${packages_dict} = {'ant': '9.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': '0', 'pam': '1.3.1.8', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230923 12:15:01.317" endtime="20230923 12:15:01.319"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:15:01.320" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 12:15:01.320" endtime="20230923 12:15:01.320"/>
</kw>
<for flavor="IN">
<var>${package}</var>
<var>${required_version}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${package}">ant</var>
<var name="${required_version}">9.9.3</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.325" level="INFO">Package = ant Version = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:15:01.324" endtime="20230923 12:15:01.325"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.331" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.370" level="INFO">${package_rpm} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:15:01.325" endtime="20230923 12:15:01.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.375" level="INFO">ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:15:01.373" endtime="20230923 12:15:01.375"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.377" level="INFO">${installed_version} = ['1.10.9']</msg>
<status status="PASS" starttime="20230923 12:15:01.375" endtime="20230923 12:15:01.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.379" level="INFO">Installed Version : 1.10.9</msg>
<status status="PASS" starttime="20230923 12:15:01.377" endtime="20230923 12:15:01.379"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.382" level="INFO">@{installed_segments} = [ 1 | 10 | 9 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.381" endtime="20230923 12:15:01.382"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.383" level="INFO">@{required_segments} = [ 9 | 9 | 3 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.382" endtime="20230923 12:15:01.383"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.383" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.383" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.383" endtime="20230923 12:15:01.383"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.384" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.384" level="INFO">${required_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.384" endtime="20230923 12:15:01.384"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.385" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.384" endtime="20230923 12:15:01.385"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.386" endtime="20230923 12:15:01.386"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.385" endtime="20230923 12:15:01.386"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.385" endtime="20230923 12:15:01.386"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.387" level="INFO">${segments} = ['1', '10', '9']</msg>
<status status="PASS" starttime="20230923 12:15:01.387" endtime="20230923 12:15:01.387"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.388" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.388" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.387" endtime="20230923 12:15:01.388"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.389" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.388" endtime="20230923 12:15:01.389"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.390" endtime="20230923 12:15:01.390"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.390" endtime="20230923 12:15:01.390"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.389" endtime="20230923 12:15:01.390"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.391" level="INFO">${padded_version} = 1.10.9</msg>
<status status="PASS" starttime="20230923 12:15:01.391" endtime="20230923 12:15:01.391"/>
</kw>
<msg timestamp="20230923 12:15:01.391" level="INFO">${installed_version} = 1.10.9</msg>
<status status="PASS" starttime="20230923 12:15:01.386" endtime="20230923 12:15:01.391"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.392" level="INFO">${segments} = ['9', '9', '3']</msg>
<status status="PASS" starttime="20230923 12:15:01.392" endtime="20230923 12:15:01.393"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.393" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.393" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.393" endtime="20230923 12:15:01.393"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.394" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.393" endtime="20230923 12:15:01.394"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.394" endtime="20230923 12:15:01.394"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.394" endtime="20230923 12:15:01.394"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.394" endtime="20230923 12:15:01.395"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.395" level="INFO">${padded_version} = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:15:01.395" endtime="20230923 12:15:01.395"/>
</kw>
<msg timestamp="20230923 12:15:01.395" level="INFO">${required_version} = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:15:01.392" endtime="20230923 12:15:01.395"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.396" level="INFO">@{installed_segments} = [ 1 | 10 | 9 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.396" endtime="20230923 12:15:01.396"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.397" level="INFO">@{required_segments} = [ 9 | 9 | 3 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.396" endtime="20230923 12:15:01.397"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">1</var>
<var name="${required_segment}">10</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.398" level="INFO">${installed_segment} = 1</msg>
<status status="PASS" starttime="20230923 12:15:01.397" endtime="20230923 12:15:01.398"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.398" level="INFO">${required_segment} = 10</msg>
<status status="PASS" starttime="20230923 12:15:01.398" endtime="20230923 12:15:01.398"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:15:01.399" endtime="20230923 12:15:01.400"/>
</kw>
<msg timestamp="20230923 12:15:01.400" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.399" endtime="20230923 12:15:01.400"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:15:01.401" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:15:01.400" endtime="20230923 12:15:01.401"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.397" endtime="20230923 12:15:01.401"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.397" endtime="20230923 12:15:01.401"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:15:01.402" endtime="20230923 12:15:01.403"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.402" endtime="20230923 12:15:01.404"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:15:01.404" endtime="20230923 12:15:01.404"/>
</return>
<status status="PASS" starttime="20230923 12:15:01.404" endtime="20230923 12:15:01.404"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.404" endtime="20230923 12:15:01.404"/>
</if>
<msg timestamp="20230923 12:15:01.405" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.380" endtime="20230923 12:15:01.405"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.405" level="INFO">Package : ant, Version:9.9.3</msg>
<status status="PASS" starttime="20230923 12:15:01.405" endtime="20230923 12:15:01.405"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.406" endtime="20230923 12:15:01.406"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.405" endtime="20230923 12:15:01.406"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.405" endtime="20230923 12:15:01.406"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.324" endtime="20230923 12:15:01.406"/>
</iter>
<iter>
<var name="${package}">java-11-openjdk</var>
<var name="${required_version}">1.1</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.407" level="INFO">Package = java-11-openjdk Version = 1.1</msg>
<status status="PASS" starttime="20230923 12:15:01.406" endtime="20230923 12:15:01.407"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.413" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.455" level="INFO">${package_rpm} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.407" endtime="20230923 12:15:01.455"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.459" level="INFO">java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.457" endtime="20230923 12:15:01.459"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.461" level="INFO">${installed_version} = ['11.0.18.0.10']</msg>
<status status="PASS" starttime="20230923 12:15:01.459" endtime="20230923 12:15:01.461"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.463" level="INFO">Installed Version : 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:15:01.461" endtime="20230923 12:15:01.463"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.466" level="INFO">@{installed_segments} = [ 11 | 0 | 18 | 0 | 10 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.466" endtime="20230923 12:15:01.466"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.467" level="INFO">@{required_segments} = [ 1 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.466" endtime="20230923 12:15:01.467"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.468" level="INFO">Length is 5</msg>
<msg timestamp="20230923 12:15:01.468" level="INFO">${installed_length} = 5</msg>
<status status="PASS" starttime="20230923 12:15:01.467" endtime="20230923 12:15:01.468"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.468" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:15:01.468" level="INFO">${required_length} = 2</msg>
<status status="PASS" starttime="20230923 12:15:01.468" endtime="20230923 12:15:01.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.469" level="INFO">${max_length} = 5</msg>
<status status="PASS" starttime="20230923 12:15:01.469" endtime="20230923 12:15:01.469"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.470" endtime="20230923 12:15:01.470"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.470" endtime="20230923 12:15:01.470"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.469" endtime="20230923 12:15:01.470"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.471" level="INFO">${segments} = ['11', '0', '18', '0', '10']</msg>
<status status="PASS" starttime="20230923 12:15:01.471" endtime="20230923 12:15:01.471"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.472" level="INFO">Length is 5</msg>
<msg timestamp="20230923 12:15:01.472" level="INFO">${segments_length} = 5</msg>
<status status="PASS" starttime="20230923 12:15:01.472" endtime="20230923 12:15:01.472"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.473" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.472" endtime="20230923 12:15:01.473"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.474" endtime="20230923 12:15:01.474"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.474" endtime="20230923 12:15:01.474"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.473" endtime="20230923 12:15:01.474"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.475" level="INFO">${padded_version} = 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:15:01.474" endtime="20230923 12:15:01.475"/>
</kw>
<msg timestamp="20230923 12:15:01.475" level="INFO">${installed_version} = 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:15:01.471" endtime="20230923 12:15:01.475"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.476" level="INFO">${segments} = ['1', '1']</msg>
<status status="PASS" starttime="20230923 12:15:01.476" endtime="20230923 12:15:01.476"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.477" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:15:01.477" level="INFO">${segments_length} = 2</msg>
<status status="PASS" starttime="20230923 12:15:01.476" endtime="20230923 12:15:01.477"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.478" level="INFO">${pad_count} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.477" endtime="20230923 12:15:01.478"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:15:01.478" endtime="20230923 12:15:01.479"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.478" endtime="20230923 12:15:01.479"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:15:01.479" endtime="20230923 12:15:01.480"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.479" endtime="20230923 12:15:01.480"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:15:01.480" endtime="20230923 12:15:01.481"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.480" endtime="20230923 12:15:01.481"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.478" endtime="20230923 12:15:01.481"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.481" level="INFO">${padded_version} = 1.1.0.0.0</msg>
<status status="PASS" starttime="20230923 12:15:01.481" endtime="20230923 12:15:01.481"/>
</kw>
<msg timestamp="20230923 12:15:01.482" level="INFO">${required_version} = 1.1.0.0.0</msg>
<status status="PASS" starttime="20230923 12:15:01.475" endtime="20230923 12:15:01.482"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.482" level="INFO">@{installed_segments} = [ 11 | 0 | 18 | 0 | 10 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.482" endtime="20230923 12:15:01.482"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.483" level="INFO">@{required_segments} = [ 1 | 1 | 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.482" endtime="20230923 12:15:01.483"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">11</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.484" level="INFO">${installed_segment} = 11</msg>
<status status="PASS" starttime="20230923 12:15:01.484" endtime="20230923 12:15:01.484"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.485" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.484" endtime="20230923 12:15:01.485"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:15:01.485" endtime="20230923 12:15:01.486"/>
</kw>
<msg timestamp="20230923 12:15:01.486" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.485" endtime="20230923 12:15:01.486"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:15:01.487" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:15:01.486" endtime="20230923 12:15:01.487"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.483" endtime="20230923 12:15:01.487"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.483" endtime="20230923 12:15:01.487"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:15:01.488" endtime="20230923 12:15:01.489"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.487" endtime="20230923 12:15:01.489"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:15:01.490" endtime="20230923 12:15:01.490"/>
</return>
<status status="PASS" starttime="20230923 12:15:01.490" endtime="20230923 12:15:01.490"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.490" endtime="20230923 12:15:01.490"/>
</if>
<msg timestamp="20230923 12:15:01.490" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.464" endtime="20230923 12:15:01.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.491" level="INFO">Package : java-11-openjdk, Version:1.1</msg>
<status status="PASS" starttime="20230923 12:15:01.491" endtime="20230923 12:15:01.491"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.491" endtime="20230923 12:15:01.492"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.491" endtime="20230923 12:15:01.492"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.491" endtime="20230923 12:15:01.492"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.406" endtime="20230923 12:15:01.492"/>
</iter>
<iter>
<var name="${package}">python3</var>
<var name="${required_version}">3.7</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.492" level="INFO">Package = python3 Version = 3.7</msg>
<status status="PASS" starttime="20230923 12:15:01.492" endtime="20230923 12:15:01.493"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.499" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.539" level="INFO">${package_rpm} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.493" endtime="20230923 12:15:01.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.543" level="INFO">python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.541" endtime="20230923 12:15:01.544"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.546" level="INFO">${installed_version} = ['3.9.16']</msg>
<status status="PASS" starttime="20230923 12:15:01.544" endtime="20230923 12:15:01.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.548" level="INFO">Installed Version : 3.9.16</msg>
<status status="PASS" starttime="20230923 12:15:01.546" endtime="20230923 12:15:01.548"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.551" level="INFO">@{installed_segments} = [ 3 | 9 | 16 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.550" endtime="20230923 12:15:01.551"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.551" level="INFO">@{required_segments} = [ 3 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.551" endtime="20230923 12:15:01.551"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.552" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.552" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.552" endtime="20230923 12:15:01.552"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.553" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:15:01.553" level="INFO">${required_length} = 2</msg>
<status status="PASS" starttime="20230923 12:15:01.552" endtime="20230923 12:15:01.553"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.553" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.553" endtime="20230923 12:15:01.554"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.555" endtime="20230923 12:15:01.555"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.554" endtime="20230923 12:15:01.555"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.554" endtime="20230923 12:15:01.555"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.556" level="INFO">${segments} = ['3', '9', '16']</msg>
<status status="PASS" starttime="20230923 12:15:01.556" endtime="20230923 12:15:01.556"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.556" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.557" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.556" endtime="20230923 12:15:01.557"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.557" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.557" endtime="20230923 12:15:01.557"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.558" endtime="20230923 12:15:01.558"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.558" endtime="20230923 12:15:01.559"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.558" endtime="20230923 12:15:01.559"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.559" level="INFO">${padded_version} = 3.9.16</msg>
<status status="PASS" starttime="20230923 12:15:01.559" endtime="20230923 12:15:01.559"/>
</kw>
<msg timestamp="20230923 12:15:01.560" level="INFO">${installed_version} = 3.9.16</msg>
<status status="PASS" starttime="20230923 12:15:01.555" endtime="20230923 12:15:01.560"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.561" level="INFO">${segments} = ['3', '7']</msg>
<status status="PASS" starttime="20230923 12:15:01.560" endtime="20230923 12:15:01.561"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.561" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:15:01.561" level="INFO">${segments_length} = 2</msg>
<status status="PASS" starttime="20230923 12:15:01.561" endtime="20230923 12:15:01.561"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.563" level="INFO">${pad_count} = 1</msg>
<status status="PASS" starttime="20230923 12:15:01.561" endtime="20230923 12:15:01.563"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:15:01.563" endtime="20230923 12:15:01.563"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.563" endtime="20230923 12:15:01.564"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.563" endtime="20230923 12:15:01.564"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.564" level="INFO">${padded_version} = 3.7.0</msg>
<status status="PASS" starttime="20230923 12:15:01.564" endtime="20230923 12:15:01.564"/>
</kw>
<msg timestamp="20230923 12:15:01.564" level="INFO">${required_version} = 3.7.0</msg>
<status status="PASS" starttime="20230923 12:15:01.560" endtime="20230923 12:15:01.564"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.565" level="INFO">@{installed_segments} = [ 3 | 9 | 16 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.565" endtime="20230923 12:15:01.565"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.566" level="INFO">@{required_segments} = [ 3 | 7 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.565" endtime="20230923 12:15:01.566"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">3</var>
<var name="${required_segment}">9</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.567" level="INFO">${installed_segment} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.566" endtime="20230923 12:15:01.567"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.567" level="INFO">${required_segment} = 9</msg>
<status status="PASS" starttime="20230923 12:15:01.567" endtime="20230923 12:15:01.567"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:15:01.568" endtime="20230923 12:15:01.569"/>
</kw>
<msg timestamp="20230923 12:15:01.569" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.568" endtime="20230923 12:15:01.569"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:15:01.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:15:01.569" endtime="20230923 12:15:01.570"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.566" endtime="20230923 12:15:01.570"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.566" endtime="20230923 12:15:01.570"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:15:01.571" endtime="20230923 12:15:01.572"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.570" endtime="20230923 12:15:01.572"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:15:01.572" endtime="20230923 12:15:01.573"/>
</return>
<status status="PASS" starttime="20230923 12:15:01.572" endtime="20230923 12:15:01.573"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.572" endtime="20230923 12:15:01.573"/>
</if>
<msg timestamp="20230923 12:15:01.573" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.548" endtime="20230923 12:15:01.573"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.573" level="INFO">Package : python3, Version:3.7</msg>
<status status="PASS" starttime="20230923 12:15:01.573" endtime="20230923 12:15:01.574"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.574" endtime="20230923 12:15:01.574"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.574" endtime="20230923 12:15:01.574"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.574" endtime="20230923 12:15:01.574"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.492" endtime="20230923 12:15:01.574"/>
</iter>
<iter>
<var name="${package}">openssl</var>
<var name="${required_version}">0</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.575" level="INFO">Package = openssl Version = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.575" endtime="20230923 12:15:01.575"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.581" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.624" level="INFO">${package_rpm} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.575" endtime="20230923 12:15:01.624"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.629" level="INFO">openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.627" endtime="20230923 12:15:01.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.631" level="INFO">${installed_version} = ['3.0.7']</msg>
<status status="PASS" starttime="20230923 12:15:01.629" endtime="20230923 12:15:01.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.633" level="INFO">Installed Version : 3.0.7</msg>
<status status="PASS" starttime="20230923 12:15:01.631" endtime="20230923 12:15:01.634"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.636" level="INFO">@{installed_segments} = [ 3 | 0 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.636" endtime="20230923 12:15:01.636"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.637" level="INFO">@{required_segments} = [ 0 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.637" endtime="20230923 12:15:01.637"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.638" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.638" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.637" endtime="20230923 12:15:01.638"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.639" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:15:01.639" level="INFO">${required_length} = 1</msg>
<status status="PASS" starttime="20230923 12:15:01.638" endtime="20230923 12:15:01.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.639" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.639" endtime="20230923 12:15:01.639"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.640" endtime="20230923 12:15:01.640"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.640" endtime="20230923 12:15:01.641"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.640" endtime="20230923 12:15:01.641"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.642" level="INFO">${segments} = ['3', '0', '7']</msg>
<status status="PASS" starttime="20230923 12:15:01.641" endtime="20230923 12:15:01.642"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.642" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.642" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.642" endtime="20230923 12:15:01.642"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.643" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.643" endtime="20230923 12:15:01.643"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.644" endtime="20230923 12:15:01.644"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.644" endtime="20230923 12:15:01.644"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.644" endtime="20230923 12:15:01.645"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.647" level="INFO">${padded_version} = 3.0.7</msg>
<status status="PASS" starttime="20230923 12:15:01.646" endtime="20230923 12:15:01.647"/>
</kw>
<msg timestamp="20230923 12:15:01.647" level="INFO">${installed_version} = 3.0.7</msg>
<status status="PASS" starttime="20230923 12:15:01.641" endtime="20230923 12:15:01.647"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.648" level="INFO">${segments} = ['0']</msg>
<status status="PASS" starttime="20230923 12:15:01.648" endtime="20230923 12:15:01.648"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.649" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:15:01.650" level="INFO">${segments_length} = 1</msg>
<status status="PASS" starttime="20230923 12:15:01.649" endtime="20230923 12:15:01.650"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.650" level="INFO">${pad_count} = 2</msg>
<status status="PASS" starttime="20230923 12:15:01.650" endtime="20230923 12:15:01.650"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:15:01.651" endtime="20230923 12:15:01.651"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.651" endtime="20230923 12:15:01.651"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:15:01.651" endtime="20230923 12:15:01.652"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.651" endtime="20230923 12:15:01.652"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.650" endtime="20230923 12:15:01.652"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.652" level="INFO">${padded_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:15:01.652" endtime="20230923 12:15:01.652"/>
</kw>
<msg timestamp="20230923 12:15:01.653" level="INFO">${required_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:15:01.647" endtime="20230923 12:15:01.653"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.653" level="INFO">@{installed_segments} = [ 3 | 0 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.653" endtime="20230923 12:15:01.653"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.654" level="INFO">@{required_segments} = [ 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.654" endtime="20230923 12:15:01.654"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">3</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.655" level="INFO">${installed_segment} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.655" endtime="20230923 12:15:01.655"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:15:01.656" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.655" endtime="20230923 12:15:01.656"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:15:01.657" endtime="20230923 12:15:01.657"/>
</kw>
<msg timestamp="20230923 12:15:01.657" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.656" endtime="20230923 12:15:01.657"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:15:01.658" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:15:01.657" endtime="20230923 12:15:01.658"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.654" endtime="20230923 12:15:01.658"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.654" endtime="20230923 12:15:01.658"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:15:01.659" endtime="20230923 12:15:01.660"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.658" endtime="20230923 12:15:01.661"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:15:01.661" endtime="20230923 12:15:01.661"/>
</return>
<status status="PASS" starttime="20230923 12:15:01.661" endtime="20230923 12:15:01.661"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.661" endtime="20230923 12:15:01.661"/>
</if>
<msg timestamp="20230923 12:15:01.661" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.634" endtime="20230923 12:15:01.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.662" level="INFO">Package : openssl, Version:0</msg>
<status status="PASS" starttime="20230923 12:15:01.662" endtime="20230923 12:15:01.662"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.663" endtime="20230923 12:15:01.663"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.662" endtime="20230923 12:15:01.663"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.662" endtime="20230923 12:15:01.663"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.574" endtime="20230923 12:15:01.663"/>
</iter>
<iter>
<var name="${package}">pam</var>
<var name="${required_version}">1.3.1.8</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.664" level="INFO">Package = pam Version = 1.3.1.8</msg>
<status status="PASS" starttime="20230923 12:15:01.663" endtime="20230923 12:15:01.664"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.670" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.714" level="INFO">${package_rpm} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.664" endtime="20230923 12:15:01.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.718" level="INFO">pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:15:01.716" endtime="20230923 12:15:01.718"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.721" level="INFO">${installed_version} = ['1.5.1']</msg>
<status status="PASS" starttime="20230923 12:15:01.718" endtime="20230923 12:15:01.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.723" level="INFO">Installed Version : 1.5.1</msg>
<status status="PASS" starttime="20230923 12:15:01.721" endtime="20230923 12:15:01.723"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.726" level="INFO">@{installed_segments} = [ 1 | 5 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.725" endtime="20230923 12:15:01.726"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.726" level="INFO">@{required_segments} = [ 1 | 3 | 1 | 8 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.726" endtime="20230923 12:15:01.726"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.727" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.727" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.727" endtime="20230923 12:15:01.727"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.728" level="INFO">Length is 4</msg>
<msg timestamp="20230923 12:15:01.728" level="INFO">${required_length} = 4</msg>
<status status="PASS" starttime="20230923 12:15:01.727" endtime="20230923 12:15:01.728"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.728" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.728" endtime="20230923 12:15:01.728"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230923 12:15:01.729" endtime="20230923 12:15:01.730"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.729" endtime="20230923 12:15:01.731"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.729" endtime="20230923 12:15:01.731"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.732" level="INFO">${segments} = ['1', '5', '1']</msg>
<status status="PASS" starttime="20230923 12:15:01.731" endtime="20230923 12:15:01.732"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.732" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:15:01.732" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:15:01.732" endtime="20230923 12:15:01.733"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.733" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:15:01.733" endtime="20230923 12:15:01.733"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.734" endtime="20230923 12:15:01.734"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.734" endtime="20230923 12:15:01.735"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.734" endtime="20230923 12:15:01.735"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.735" level="INFO">${padded_version} = 1.5.1</msg>
<status status="PASS" starttime="20230923 12:15:01.735" endtime="20230923 12:15:01.735"/>
</kw>
<msg timestamp="20230923 12:15:01.736" level="INFO">${installed_version} = 1.5.1</msg>
<status status="PASS" starttime="20230923 12:15:01.731" endtime="20230923 12:15:01.736"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.737" level="INFO">${segments} = ['1', '3', '1', '8']</msg>
<status status="PASS" starttime="20230923 12:15:01.737" endtime="20230923 12:15:01.737"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:15:01.738" level="INFO">Length is 4</msg>
<msg timestamp="20230923 12:15:01.738" level="INFO">${segments_length} = 4</msg>
<status status="PASS" starttime="20230923 12:15:01.737" endtime="20230923 12:15:01.738"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.739" level="INFO">${pad_count} = -1</msg>
<status status="PASS" starttime="20230923 12:15:01.738" endtime="20230923 12:15:01.739"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.739" endtime="20230923 12:15:01.739"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.739" endtime="20230923 12:15:01.739"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:15:01.739" endtime="20230923 12:15:01.739"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.740" level="INFO">${padded_version} = 1.3.1.8</msg>
<status status="PASS" starttime="20230923 12:15:01.739" endtime="20230923 12:15:01.740"/>
</kw>
<msg timestamp="20230923 12:15:01.740" level="INFO">${required_version} = 1.3.1.8</msg>
<status status="PASS" starttime="20230923 12:15:01.736" endtime="20230923 12:15:01.740"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.741" level="INFO">@{installed_segments} = [ 1 | 5 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.740" endtime="20230923 12:15:01.741"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:15:01.741" level="INFO">@{required_segments} = [ 1 | 3 | 1 | 8 ]</msg>
<status status="PASS" starttime="20230923 12:15:01.741" endtime="20230923 12:15:01.742"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}"/>
<var name="${required_segment}"/>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.742" endtime="20230923 12:15:01.742"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.742" endtime="20230923 12:15:01.742"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.743" endtime="20230923 12:15:01.743"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.743" endtime="20230923 12:15:01.743"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.742" endtime="20230923 12:15:01.743"/>
</iter>
<msg timestamp="20230923 12:15:01.743" level="FAIL">Number of FOR loop values should be multiple of its variables. Got 2 variables but 7 values.</msg>
<status status="FAIL" starttime="20230923 12:15:01.742" endtime="20230923 12:15:01.744"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.744" endtime="20230923 12:15:01.744"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20230923 12:15:01.744" endtime="20230923 12:15:01.744"/>
</return>
<status status="NOT RUN" starttime="20230923 12:15:01.744" endtime="20230923 12:15:01.744"/>
</branch>
<status status="NOT RUN" starttime="20230923 12:15:01.744" endtime="20230923 12:15:01.744"/>
</if>
<status status="FAIL" starttime="20230923 12:15:01.723" endtime="20230923 12:15:01.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.745" endtime="20230923 12:15:01.745"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.745" endtime="20230923 12:15:01.745"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.745" endtime="20230923 12:15:01.746"/>
</branch>
<status status="NOT RUN" starttime="20230923 12:15:01.745" endtime="20230923 12:15:01.746"/>
</if>
<status status="FAIL" starttime="20230923 12:15:01.663" endtime="20230923 12:15:01.746"/>
</iter>
<status status="FAIL" starttime="20230923 12:15:01.321" endtime="20230923 12:15:01.746"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${error_list}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.747" endtime="20230923 12:15:01.747"/>
</kw>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="FAIL" starttime="20230923 12:15:01.315" endtime="20230923 12:15:01.748">Number of FOR loop values should be multiple of its variables. Got 2 variables but 7 values.</status>
</test>
<test id="s1-t3" name="Check library availability" line="71">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:15:01.755" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230923 12:15:01.754" endtime="20230923 12:15:01.755"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.762" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.781" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230923 12:15:01.756" endtime="20230923 12:15:01.781"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:15:01.786" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 12:15:01.784" endtime="20230923 12:15:01.786"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.790" endtime="20230923 12:15:01.790"/>
</kw>
<msg timestamp="20230923 12:15:01.790" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.791" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.789" endtime="20230923 12:15:01.791"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.793" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230923 12:15:01.792" endtime="20230923 12:15:01.793"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.791" endtime="20230923 12:15:01.793"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.793" endtime="20230923 12:15:01.793"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.793" endtime="20230923 12:15:01.793"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.791" endtime="20230923 12:15:01.793"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.788" endtime="20230923 12:15:01.793"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.794" endtime="20230923 12:15:01.794"/>
</kw>
<msg timestamp="20230923 12:15:01.795" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.795" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.794" endtime="20230923 12:15:01.795"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.795" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230923 12:15:01.795" endtime="20230923 12:15:01.796"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.795" endtime="20230923 12:15:01.796"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.796" endtime="20230923 12:15:01.796"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.796" endtime="20230923 12:15:01.796"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.795" endtime="20230923 12:15:01.796"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.793" endtime="20230923 12:15:01.796"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.797" endtime="20230923 12:15:01.797"/>
</kw>
<msg timestamp="20230923 12:15:01.797" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.797" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.796" endtime="20230923 12:15:01.798"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.798" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230923 12:15:01.798" endtime="20230923 12:15:01.798"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.798" endtime="20230923 12:15:01.799"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.799" endtime="20230923 12:15:01.799"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.799" endtime="20230923 12:15:01.799"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.798" endtime="20230923 12:15:01.799"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.796" endtime="20230923 12:15:01.799"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.787" endtime="20230923 12:15:01.799"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:15:01.801" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:15:01.800" endtime="20230923 12:15:01.801"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230923 12:15:01.753" endtime="20230923 12:15:01.802"/>
</test>
<test id="s1-t4" name="Check libz library version" line="88">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.809" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230923 12:15:01.809" endtime="20230923 12:15:01.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.811" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230923 12:15:01.811" endtime="20230923 12:15:01.811"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.817" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.867" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230923 12:15:01.812" endtime="20230923 12:15:01.867"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.874" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230923 12:15:01.870" endtime="20230923 12:15:01.874"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:01.875" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230923 12:15:01.875" endtime="20230923 12:15:01.875"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.881" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230923 12:15:01.879" endtime="20230923 12:15:01.881"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:01.882" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230923 12:15:01.881" endtime="20230923 12:15:01.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.883" level="INFO">True</msg>
<status status="PASS" starttime="20230923 12:15:01.882" endtime="20230923 12:15:01.883"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.886" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230923 12:15:01.884" endtime="20230923 12:15:01.887"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 12:15:01.888" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230923 12:15:01.887" endtime="20230923 12:15:01.889"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.883" endtime="20230923 12:15:01.889"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.889" endtime="20230923 12:15:01.889"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.890" endtime="20230923 12:15:01.890"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.889" endtime="20230923 12:15:01.890"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.883" endtime="20230923 12:15:01.890"/>
</if>
<status status="PASS" starttime="20230923 12:15:01.876" endtime="20230923 12:15:01.890"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.890" endtime="20230923 12:15:01.890"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.891" endtime="20230923 12:15:01.891"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.890" endtime="20230923 12:15:01.891"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 12:15:01.891" endtime="20230923 12:15:01.891"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:15:01.891" endtime="20230923 12:15:01.891"/>
</branch>
<status status="PASS" starttime="20230923 12:15:01.876" endtime="20230923 12:15:01.891"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230923 12:15:01.806" endtime="20230923 12:15:01.892">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="114">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.900" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230923 12:15:01.899" endtime="20230923 12:15:01.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:01.901" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230923 12:15:01.901" endtime="20230923 12:15:01.901"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 12:15:01.903" endtime="20230923 12:15:01.904"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:15:01.904" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 12:15:01.904" endtime="20230923 12:15:01.904"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.906" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230923 12:15:01.905" endtime="20230923 12:15:01.906"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.907" level="INFO">which tar</msg>
<status status="PASS" starttime="20230923 12:15:01.906" endtime="20230923 12:15:01.907"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.913" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.934" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230923 12:15:01.907" endtime="20230923 12:15:01.934"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.938" endtime="20230923 12:15:01.939"/>
</kw>
<msg timestamp="20230923 12:15:01.940" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.940" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.936" endtime="20230923 12:15:01.940"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.940" endtime="20230923 12:15:01.941"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.905" endtime="20230923 12:15:01.941"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.942" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230923 12:15:01.942" endtime="20230923 12:15:01.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.943" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230923 12:15:01.942" endtime="20230923 12:15:01.943"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.949" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.967" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230923 12:15:01.943" endtime="20230923 12:15:01.967"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:01.971" endtime="20230923 12:15:01.973"/>
</kw>
<msg timestamp="20230923 12:15:01.973" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:01.973" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:01.970" endtime="20230923 12:15:01.973"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:01.973" endtime="20230923 12:15:01.974"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.941" endtime="20230923 12:15:01.974"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:01.975" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230923 12:15:01.975" endtime="20230923 12:15:01.975"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:01.976" level="INFO">which find</msg>
<status status="PASS" starttime="20230923 12:15:01.976" endtime="20230923 12:15:01.976"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:01.982" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:01.999" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230923 12:15:01.976" endtime="20230923 12:15:01.999"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:02.004" endtime="20230923 12:15:02.005"/>
</kw>
<msg timestamp="20230923 12:15:02.005" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:02.005" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:02.002" endtime="20230923 12:15:02.005"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:02.006" endtime="20230923 12:15:02.006"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.975" endtime="20230923 12:15:02.007"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:15:02.008" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:15:02.007" endtime="20230923 12:15:02.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:15:02.008" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:15:02.008" endtime="20230923 12:15:02.008"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:02.014" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:02.031" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:15:02.009" endtime="20230923 12:15:02.031"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:15:02.036" endtime="20230923 12:15:02.037"/>
</kw>
<msg timestamp="20230923 12:15:02.038" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:15:02.038" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:15:02.034" endtime="20230923 12:15:02.038"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:15:02.038" endtime="20230923 12:15:02.038"/>
</kw>
<status status="PASS" starttime="20230923 12:15:02.007" endtime="20230923 12:15:02.039"/>
</iter>
<status status="PASS" starttime="20230923 12:15:01.905" endtime="20230923 12:15:02.039"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:15:02.040" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:15:02.039" endtime="20230923 12:15:02.040"/>
</kw>
<status status="PASS" starttime="20230923 12:15:01.902" endtime="20230923 12:15:02.040"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:15:01.897" endtime="20230923 12:15:02.042"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="121">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:02.054" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:02.072" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230923 12:15:02.048" endtime="20230923 12:15:02.073"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:15:02.080" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230923 12:15:02.076" endtime="20230923 12:15:02.080"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:15:02.081" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230923 12:15:02.081" endtime="20230923 12:15:02.081"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:15:02.085" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:15:02.082" endtime="20230923 12:15:02.085"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 12:15:02.089" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230923 12:15:02.088" endtime="20230923 12:15:02.089"/>
</kw>
<status status="PASS" starttime="20230923 12:15:02.086" endtime="20230923 12:15:02.089"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:15:02.046" endtime="20230923 12:15:02.090">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="135">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:02.103" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:02.294" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230923 12:15:02.097" endtime="20230923 12:15:02.294"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 12:15:02.301" endtime="20230923 12:15:02.304"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 12:15:02.095" endtime="20230923 12:15:02.309"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="141">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:02.327" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:02.348" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230923 12:15:02.320" endtime="20230923 12:15:02.348"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 12:15:02.356" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230923 12:15:02.354" endtime="20230923 12:15:02.356"/>
</kw>
<status status="FAIL" starttime="20230923 12:15:02.352" endtime="20230923 12:15:02.357"/>
</iter>
<status status="FAIL" starttime="20230923 12:15:02.351" endtime="20230923 12:15:02.357"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 12:15:02.316" endtime="20230923 12:15:02.358">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="149">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:02.373" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:02.974" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6  ...</msg>
<status status="PASS" starttime="20230923 12:15:02.367" endtime="20230923 12:15:02.974"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 12:15:02.981" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377    22  +2444us[+2444us] +/-   33ms
^- ntp4.bit.nl                   1   6   377    94  -1508us[-1896us] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    33  -3084us[-3525us] +/-   11ms
^- mail.emuadmin.com             3   6   376   353  +4299us[+5323us] +/-   75ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230923 12:15:02.979" endtime="20230923 12:15:02.981"/>
</kw>
<status status="FAIL" starttime="20230923 12:15:02.978" endtime="20230923 12:15:02.982"/>
</iter>
<status status="FAIL" starttime="20230923 12:15:02.976" endtime="20230923 12:15:02.982"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 12:15:02.365" endtime="20230923 12:15:02.983">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377    22  +2444us[+2444us] +/-   33ms
^- ntp4.bit.nl                   1   6   377    94  -1508us[-1896us] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    33  -3084us[-3525us] +/-   11ms
^- mail.emuadmin.com             3   6   376   353  +4299us[+5323us] +/-   75ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="157">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:15:02.999" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:15:03.194" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230923 12:15:02.993" endtime="20230923 12:15:03.194"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 12:15:03.197" endtime="20230923 12:15:03.200"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 12:15:02.991" endtime="20230923 12:15:03.201"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230923 12:15:00.885" endtime="20230923 12:15:03.208"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="7" fail="3" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
