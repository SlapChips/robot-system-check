<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230923 12:06:03.208" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:03.297" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230923 12:06:03.296" endtime="20230923 12:06:03.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:03.298" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230923 12:06:03.297" endtime="20230923 12:06:03.298"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 12:06:03.299" endtime="20230923 12:06:03.300"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:06:03.300" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 12:06:03.300" endtime="20230923 12:06:03.300"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.301" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230923 12:06:03.301" endtime="20230923 12:06:03.301"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:03.302" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230923 12:06:03.302" endtime="20230923 12:06:03.302"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.309" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.347" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:06:03.302" endtime="20230923 12:06:03.347"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:03.352" endtime="20230923 12:06:03.353"/>
</kw>
<msg timestamp="20230923 12:06:03.353" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:03.353" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:03.350" endtime="20230923 12:06:03.353"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:03.353" endtime="20230923 12:06:03.354"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.301" endtime="20230923 12:06:03.354"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.355" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 12:06:03.355" endtime="20230923 12:06:03.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:03.356" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 12:06:03.356" endtime="20230923 12:06:03.356"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.362" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.400" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.356" endtime="20230923 12:06:03.400"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:03.404" endtime="20230923 12:06:03.406"/>
</kw>
<msg timestamp="20230923 12:06:03.406" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:03.406" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:03.402" endtime="20230923 12:06:03.406"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:03.406" endtime="20230923 12:06:03.407"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.355" endtime="20230923 12:06:03.407"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.408" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230923 12:06:03.408" endtime="20230923 12:06:03.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:03.409" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230923 12:06:03.409" endtime="20230923 12:06:03.409"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.416" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.456" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.409" endtime="20230923 12:06:03.456"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:03.461" endtime="20230923 12:06:03.462"/>
</kw>
<msg timestamp="20230923 12:06:03.462" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:03.462" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:03.459" endtime="20230923 12:06:03.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:03.462" endtime="20230923 12:06:03.463"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.408" endtime="20230923 12:06:03.463"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.464" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230923 12:06:03.464" endtime="20230923 12:06:03.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:03.465" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230923 12:06:03.464" endtime="20230923 12:06:03.465"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.471" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.511" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.465" endtime="20230923 12:06:03.511"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:03.515" endtime="20230923 12:06:03.517"/>
</kw>
<msg timestamp="20230923 12:06:03.517" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:03.517" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:03.514" endtime="20230923 12:06:03.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:03.517" endtime="20230923 12:06:03.518"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.463" endtime="20230923 12:06:03.518"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.519" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230923 12:06:03.518" endtime="20230923 12:06:03.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:03.520" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230923 12:06:03.519" endtime="20230923 12:06:03.520"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.525" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.568" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.520" endtime="20230923 12:06:03.568"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:03.572" endtime="20230923 12:06:03.573"/>
</kw>
<msg timestamp="20230923 12:06:03.574" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:03.574" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:03.570" endtime="20230923 12:06:03.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:03.574" endtime="20230923 12:06:03.574"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.518" endtime="20230923 12:06:03.574"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.576" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 12:06:03.575" endtime="20230923 12:06:03.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:03.577" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 12:06:03.576" endtime="20230923 12:06:03.577"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.583" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.627" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:06:03.577" endtime="20230923 12:06:03.627"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:03.631" endtime="20230923 12:06:03.633"/>
</kw>
<msg timestamp="20230923 12:06:03.633" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:03.633" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:03.630" endtime="20230923 12:06:03.633"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:03.633" endtime="20230923 12:06:03.634"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.575" endtime="20230923 12:06:03.634"/>
</iter>
<status status="PASS" starttime="20230923 12:06:03.301" endtime="20230923 12:06:03.634"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:06:03.636" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:06:03.635" endtime="20230923 12:06:03.636"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.299" endtime="20230923 12:06:03.636"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:06:03.294" endtime="20230923 12:06:03.638"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=9.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1.8</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230923 12:06:03.647" level="INFO">${packages_dict} = {'ant': '9.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': '0', 'pam': '1.3.1.8', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230923 12:06:03.645" endtime="20230923 12:06:03.647"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:06:03.649" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 12:06:03.648" endtime="20230923 12:06:03.649"/>
</kw>
<for flavor="IN">
<var>${package}</var>
<var>${required_version}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${package}">ant</var>
<var name="${required_version}">9.9.3</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.654" endtime="20230923 12:06:03.656"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.662" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.701" level="INFO">${package_rpm} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:06:03.656" endtime="20230923 12:06:03.701"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.704" endtime="20230923 12:06:03.707"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:03.709" level="INFO">${installed_version} = ['1.10.9']</msg>
<status status="PASS" starttime="20230923 12:06:03.707" endtime="20230923 12:06:03.709"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.709" endtime="20230923 12:06:03.714"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.717" level="INFO">@{installed_segments} = [ 1 | 10 | 9 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.716" endtime="20230923 12:06:03.717"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.717" level="INFO">@{required_segments} = [ 9 | 9 | 3 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.717" endtime="20230923 12:06:03.718"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.719" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:03.719" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.718" endtime="20230923 12:06:03.719"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.720" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:03.720" level="INFO">${required_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.719" endtime="20230923 12:06:03.720"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:03.721" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.720" endtime="20230923 12:06:03.721"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.723" endtime="20230923 12:06:03.723"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.722" endtime="20230923 12:06:03.723"/>
</branch>
<status status="PASS" starttime="20230923 12:06:03.722" endtime="20230923 12:06:03.723"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.724" level="INFO">${segments} = ['1', '10', '9']</msg>
<status status="PASS" starttime="20230923 12:06:03.724" endtime="20230923 12:06:03.724"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.725" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:03.725" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.724" endtime="20230923 12:06:03.725"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:03.726" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:06:03.725" endtime="20230923 12:06:03.726"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.727" endtime="20230923 12:06:03.727"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.727" endtime="20230923 12:06:03.727"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:03.726" endtime="20230923 12:06:03.727"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.728" level="INFO">${padded_version} = 1.10.9</msg>
<status status="PASS" starttime="20230923 12:06:03.727" endtime="20230923 12:06:03.728"/>
</kw>
<msg timestamp="20230923 12:06:03.728" level="INFO">${installed_version} = 1.10.9</msg>
<status status="PASS" starttime="20230923 12:06:03.723" endtime="20230923 12:06:03.728"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.729" level="INFO">${segments} = ['9', '9', '3']</msg>
<status status="PASS" starttime="20230923 12:06:03.729" endtime="20230923 12:06:03.729"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.730" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:03.730" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.730" endtime="20230923 12:06:03.730"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:03.731" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:06:03.730" endtime="20230923 12:06:03.731"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.731" endtime="20230923 12:06:03.731"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.731" endtime="20230923 12:06:03.732"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:03.731" endtime="20230923 12:06:03.732"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.732" level="INFO">${padded_version} = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:06:03.732" endtime="20230923 12:06:03.732"/>
</kw>
<msg timestamp="20230923 12:06:03.733" level="INFO">${required_version} = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:06:03.728" endtime="20230923 12:06:03.733"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.733" level="INFO">@{installed_segments} = [ 1 | 10 | 9 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.733" endtime="20230923 12:06:03.733"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.734" level="INFO">@{required_segments} = [ 9 | 9 | 3 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.733" endtime="20230923 12:06:03.734"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">1</var>
<var name="${required_segment}">10</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:03.735" level="INFO">${installed_segment} = 1</msg>
<status status="PASS" starttime="20230923 12:06:03.734" endtime="20230923 12:06:03.735"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:03.736" level="INFO">${required_segment} = 10</msg>
<status status="PASS" starttime="20230923 12:06:03.735" endtime="20230923 12:06:03.736"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:06:03.738" endtime="20230923 12:06:03.739"/>
</kw>
<msg timestamp="20230923 12:06:03.739" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.736" endtime="20230923 12:06:03.739"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:06:03.740" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:06:03.739" endtime="20230923 12:06:03.740"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.734" endtime="20230923 12:06:03.740"/>
</iter>
<status status="PASS" starttime="20230923 12:06:03.734" endtime="20230923 12:06:03.741"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.741" endtime="20230923 12:06:03.743"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.741" endtime="20230923 12:06:03.743"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:06:03.743" endtime="20230923 12:06:03.744"/>
</return>
<status status="PASS" starttime="20230923 12:06:03.743" endtime="20230923 12:06:03.744"/>
</branch>
<status status="PASS" starttime="20230923 12:06:03.743" endtime="20230923 12:06:03.744"/>
</if>
<msg timestamp="20230923 12:06:03.744" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.714" endtime="20230923 12:06:03.744"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Package : ${package}, Version : ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.744" endtime="20230923 12:06:03.746"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.653" endtime="20230923 12:06:03.746"/>
</iter>
<iter>
<var name="${package}">java-11-openjdk</var>
<var name="${required_version}">1.1</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.747" endtime="20230923 12:06:03.748"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.755" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.796" level="INFO">${package_rpm} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.749" endtime="20230923 12:06:03.796"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.798" endtime="20230923 12:06:03.802"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:03.804" level="INFO">${installed_version} = ['11.0.18.0.10']</msg>
<status status="PASS" starttime="20230923 12:06:03.802" endtime="20230923 12:06:03.804"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.804" endtime="20230923 12:06:03.808"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.811" level="INFO">@{installed_segments} = [ 11 | 0 | 18 | 0 | 10 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.810" endtime="20230923 12:06:03.811"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.811" level="INFO">@{required_segments} = [ 1 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.811" endtime="20230923 12:06:03.811"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.812" level="INFO">Length is 5</msg>
<msg timestamp="20230923 12:06:03.812" level="INFO">${installed_length} = 5</msg>
<status status="PASS" starttime="20230923 12:06:03.812" endtime="20230923 12:06:03.812"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.813" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:06:03.813" level="INFO">${required_length} = 2</msg>
<status status="PASS" starttime="20230923 12:06:03.813" endtime="20230923 12:06:03.813"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:03.814" level="INFO">${max_length} = 5</msg>
<status status="PASS" starttime="20230923 12:06:03.813" endtime="20230923 12:06:03.814"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.816" endtime="20230923 12:06:03.816"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.815" endtime="20230923 12:06:03.816"/>
</branch>
<status status="PASS" starttime="20230923 12:06:03.815" endtime="20230923 12:06:03.816"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.818" level="INFO">${segments} = ['11', '0', '18', '0', '10']</msg>
<status status="PASS" starttime="20230923 12:06:03.817" endtime="20230923 12:06:03.818"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.818" level="INFO">Length is 5</msg>
<msg timestamp="20230923 12:06:03.818" level="INFO">${segments_length} = 5</msg>
<status status="PASS" starttime="20230923 12:06:03.818" endtime="20230923 12:06:03.818"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:03.819" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:06:03.819" endtime="20230923 12:06:03.819"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.820" endtime="20230923 12:06:03.820"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.820" endtime="20230923 12:06:03.820"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:03.820" endtime="20230923 12:06:03.820"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.821" level="INFO">${padded_version} = 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:06:03.821" endtime="20230923 12:06:03.821"/>
</kw>
<msg timestamp="20230923 12:06:03.821" level="INFO">${installed_version} = 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:06:03.816" endtime="20230923 12:06:03.821"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.823" level="INFO">${segments} = ['1', '1']</msg>
<status status="PASS" starttime="20230923 12:06:03.822" endtime="20230923 12:06:03.823"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.823" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:06:03.824" level="INFO">${segments_length} = 2</msg>
<status status="PASS" starttime="20230923 12:06:03.823" endtime="20230923 12:06:03.824"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:03.824" level="INFO">${pad_count} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.824" endtime="20230923 12:06:03.824"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:06:03.825" endtime="20230923 12:06:03.825"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.825" endtime="20230923 12:06:03.825"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:06:03.826" endtime="20230923 12:06:03.826"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.825" endtime="20230923 12:06:03.826"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:06:03.826" endtime="20230923 12:06:03.827"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.826" endtime="20230923 12:06:03.827"/>
</iter>
<status status="PASS" starttime="20230923 12:06:03.824" endtime="20230923 12:06:03.827"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.828" level="INFO">${padded_version} = 1.1.0.0.0</msg>
<status status="PASS" starttime="20230923 12:06:03.828" endtime="20230923 12:06:03.828"/>
</kw>
<msg timestamp="20230923 12:06:03.828" level="INFO">${required_version} = 1.1.0.0.0</msg>
<status status="PASS" starttime="20230923 12:06:03.822" endtime="20230923 12:06:03.828"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.829" level="INFO">@{installed_segments} = [ 11 | 0 | 18 | 0 | 10 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.829" endtime="20230923 12:06:03.829"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.830" level="INFO">@{required_segments} = [ 1 | 1 | 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.829" endtime="20230923 12:06:03.830"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">11</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:03.831" level="INFO">${installed_segment} = 11</msg>
<status status="PASS" starttime="20230923 12:06:03.830" endtime="20230923 12:06:03.831"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:03.831" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:06:03.831" endtime="20230923 12:06:03.831"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:06:03.832" endtime="20230923 12:06:03.833"/>
</kw>
<msg timestamp="20230923 12:06:03.833" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.832" endtime="20230923 12:06:03.833"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:06:03.833" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:06:03.833" endtime="20230923 12:06:03.834"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.830" endtime="20230923 12:06:03.834"/>
</iter>
<status status="PASS" starttime="20230923 12:06:03.830" endtime="20230923 12:06:03.834"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.835" endtime="20230923 12:06:03.836"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.834" endtime="20230923 12:06:03.836"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:06:03.837" endtime="20230923 12:06:03.837"/>
</return>
<status status="PASS" starttime="20230923 12:06:03.836" endtime="20230923 12:06:03.837"/>
</branch>
<status status="PASS" starttime="20230923 12:06:03.836" endtime="20230923 12:06:03.837"/>
</if>
<msg timestamp="20230923 12:06:03.838" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.808" endtime="20230923 12:06:03.838"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Package : ${package}, Version : ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.839" endtime="20230923 12:06:03.840"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.746" endtime="20230923 12:06:03.840"/>
</iter>
<iter>
<var name="${package}">python3</var>
<var name="${required_version}">3.7</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.841" endtime="20230923 12:06:03.842"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.848" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.889" level="INFO">${package_rpm} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.842" endtime="20230923 12:06:03.890"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.892" endtime="20230923 12:06:03.896"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:03.898" level="INFO">${installed_version} = ['3.9.16']</msg>
<status status="PASS" starttime="20230923 12:06:03.896" endtime="20230923 12:06:03.898"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.898" endtime="20230923 12:06:03.901"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.904" level="INFO">@{installed_segments} = [ 3 | 9 | 16 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.904" endtime="20230923 12:06:03.904"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.905" level="INFO">@{required_segments} = [ 3 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.904" endtime="20230923 12:06:03.905"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.906" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:03.906" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.905" endtime="20230923 12:06:03.906"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.907" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:06:03.907" level="INFO">${required_length} = 2</msg>
<status status="PASS" starttime="20230923 12:06:03.906" endtime="20230923 12:06:03.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:03.907" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.907" endtime="20230923 12:06:03.907"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.909" endtime="20230923 12:06:03.910"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.908" endtime="20230923 12:06:03.910"/>
</branch>
<status status="PASS" starttime="20230923 12:06:03.908" endtime="20230923 12:06:03.910"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.911" level="INFO">${segments} = ['3', '9', '16']</msg>
<status status="PASS" starttime="20230923 12:06:03.910" endtime="20230923 12:06:03.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.911" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:03.912" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.911" endtime="20230923 12:06:03.912"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:03.912" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:06:03.912" endtime="20230923 12:06:03.912"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:03.913" endtime="20230923 12:06:03.914"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:03.913" endtime="20230923 12:06:03.914"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:03.913" endtime="20230923 12:06:03.914"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.914" level="INFO">${padded_version} = 3.9.16</msg>
<status status="PASS" starttime="20230923 12:06:03.914" endtime="20230923 12:06:03.914"/>
</kw>
<msg timestamp="20230923 12:06:03.915" level="INFO">${installed_version} = 3.9.16</msg>
<status status="PASS" starttime="20230923 12:06:03.910" endtime="20230923 12:06:03.915"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.916" level="INFO">${segments} = ['3', '7']</msg>
<status status="PASS" starttime="20230923 12:06:03.916" endtime="20230923 12:06:03.916"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:03.917" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:06:03.917" level="INFO">${segments_length} = 2</msg>
<status status="PASS" starttime="20230923 12:06:03.916" endtime="20230923 12:06:03.917"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:03.919" level="INFO">${pad_count} = 1</msg>
<status status="PASS" starttime="20230923 12:06:03.918" endtime="20230923 12:06:03.919"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:06:03.920" endtime="20230923 12:06:03.920"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.919" endtime="20230923 12:06:03.920"/>
</iter>
<status status="PASS" starttime="20230923 12:06:03.919" endtime="20230923 12:06:03.920"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:03.921" level="INFO">${padded_version} = 3.7.0</msg>
<status status="PASS" starttime="20230923 12:06:03.921" endtime="20230923 12:06:03.921"/>
</kw>
<msg timestamp="20230923 12:06:03.921" level="INFO">${required_version} = 3.7.0</msg>
<status status="PASS" starttime="20230923 12:06:03.915" endtime="20230923 12:06:03.921"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.922" level="INFO">@{installed_segments} = [ 3 | 9 | 16 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.922" endtime="20230923 12:06:03.922"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:03.923" level="INFO">@{required_segments} = [ 3 | 7 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:06:03.923" endtime="20230923 12:06:03.923"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">3</var>
<var name="${required_segment}">9</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:03.925" level="INFO">${installed_segment} = 3</msg>
<status status="PASS" starttime="20230923 12:06:03.924" endtime="20230923 12:06:03.925"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:03.925" level="INFO">${required_segment} = 9</msg>
<status status="PASS" starttime="20230923 12:06:03.925" endtime="20230923 12:06:03.925"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:06:03.927" endtime="20230923 12:06:03.927"/>
</kw>
<msg timestamp="20230923 12:06:03.927" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.926" endtime="20230923 12:06:03.927"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:06:03.929" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:06:03.928" endtime="20230923 12:06:03.929"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.924" endtime="20230923 12:06:03.929"/>
</iter>
<status status="PASS" starttime="20230923 12:06:03.923" endtime="20230923 12:06:03.929"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.930" endtime="20230923 12:06:03.931"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.929" endtime="20230923 12:06:03.931"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:06:03.932" endtime="20230923 12:06:03.932"/>
</return>
<status status="PASS" starttime="20230923 12:06:03.932" endtime="20230923 12:06:03.932"/>
</branch>
<status status="PASS" starttime="20230923 12:06:03.931" endtime="20230923 12:06:03.932"/>
</if>
<msg timestamp="20230923 12:06:03.932" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.902" endtime="20230923 12:06:03.932"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Package : ${package}, Version : ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.933" endtime="20230923 12:06:03.934"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.840" endtime="20230923 12:06:03.934"/>
</iter>
<iter>
<var name="${package}">openssl</var>
<var name="${required_version}">0</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.935" endtime="20230923 12:06:03.937"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:03.944" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:03.985" level="INFO">${package_rpm} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:03.937" endtime="20230923 12:06:03.986"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.988" endtime="20230923 12:06:03.991"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:03.993" level="INFO">${installed_version} = ['3.0.7']</msg>
<status status="PASS" starttime="20230923 12:06:03.991" endtime="20230923 12:06:03.994"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:03.994" endtime="20230923 12:06:03.997"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.001" level="INFO">@{installed_segments} = [ 3 | 0 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.000" endtime="20230923 12:06:04.001"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.002" level="INFO">@{required_segments} = [ 0 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.002" endtime="20230923 12:06:04.002"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.003" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:04.003" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.002" endtime="20230923 12:06:04.003"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.003" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:06:04.004" level="INFO">${required_length} = 1</msg>
<status status="PASS" starttime="20230923 12:06:04.003" endtime="20230923 12:06:04.004"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.004" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.004" endtime="20230923 12:06:04.004"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.005" endtime="20230923 12:06:04.005"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.005" endtime="20230923 12:06:04.006"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.005" endtime="20230923 12:06:04.006"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.007" level="INFO">${segments} = ['3', '0', '7']</msg>
<status status="PASS" starttime="20230923 12:06:04.006" endtime="20230923 12:06:04.007"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.007" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:04.007" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.007" endtime="20230923 12:06:04.007"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:04.008" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:06:04.008" endtime="20230923 12:06:04.008"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.009" endtime="20230923 12:06:04.009"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.009" endtime="20230923 12:06:04.010"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:04.009" endtime="20230923 12:06:04.010"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.010" level="INFO">${padded_version} = 3.0.7</msg>
<status status="PASS" starttime="20230923 12:06:04.010" endtime="20230923 12:06:04.010"/>
</kw>
<msg timestamp="20230923 12:06:04.010" level="INFO">${installed_version} = 3.0.7</msg>
<status status="PASS" starttime="20230923 12:06:04.006" endtime="20230923 12:06:04.011"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.012" level="INFO">${segments} = ['0']</msg>
<status status="PASS" starttime="20230923 12:06:04.011" endtime="20230923 12:06:04.012"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.012" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:06:04.012" level="INFO">${segments_length} = 1</msg>
<status status="PASS" starttime="20230923 12:06:04.012" endtime="20230923 12:06:04.012"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:04.014" level="INFO">${pad_count} = 2</msg>
<status status="PASS" starttime="20230923 12:06:04.013" endtime="20230923 12:06:04.014"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:06:04.014" endtime="20230923 12:06:04.015"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.014" endtime="20230923 12:06:04.015"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:06:04.015" endtime="20230923 12:06:04.015"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.015" endtime="20230923 12:06:04.015"/>
</iter>
<status status="PASS" starttime="20230923 12:06:04.014" endtime="20230923 12:06:04.015"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.016" level="INFO">${padded_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:06:04.016" endtime="20230923 12:06:04.016"/>
</kw>
<msg timestamp="20230923 12:06:04.016" level="INFO">${required_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:06:04.011" endtime="20230923 12:06:04.016"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.017" level="INFO">@{installed_segments} = [ 3 | 0 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.016" endtime="20230923 12:06:04.017"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.017" level="INFO">@{required_segments} = [ 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.017" endtime="20230923 12:06:04.018"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">3</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:04.019" level="INFO">${installed_segment} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.018" endtime="20230923 12:06:04.019"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:06:04.020" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:06:04.019" endtime="20230923 12:06:04.020"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:06:04.021" endtime="20230923 12:06:04.021"/>
</kw>
<msg timestamp="20230923 12:06:04.022" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:06:04.020" endtime="20230923 12:06:04.022"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:06:04.022" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:06:04.022" endtime="20230923 12:06:04.023"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.018" endtime="20230923 12:06:04.023"/>
</iter>
<status status="PASS" starttime="20230923 12:06:04.018" endtime="20230923 12:06:04.023"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:04.023" endtime="20230923 12:06:04.025"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.023" endtime="20230923 12:06:04.025"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:06:04.025" endtime="20230923 12:06:04.026"/>
</return>
<status status="PASS" starttime="20230923 12:06:04.025" endtime="20230923 12:06:04.026"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.025" endtime="20230923 12:06:04.026"/>
</if>
<msg timestamp="20230923 12:06:04.026" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:06:03.998" endtime="20230923 12:06:04.026"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Package : ${package}, Version : ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:04.026" endtime="20230923 12:06:04.028"/>
</kw>
<status status="PASS" starttime="20230923 12:06:03.935" endtime="20230923 12:06:04.028"/>
</iter>
<iter>
<var name="${package}">pam</var>
<var name="${required_version}">1.3.1.8</var>
<kw name="Log To Console" library="BuiltIn">
<arg>Package = ${package}:</arg>
<arg>Version = ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:04.029" endtime="20230923 12:06:04.031"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.038" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.083" level="INFO">${package_rpm} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:06:04.031" endtime="20230923 12:06:04.083"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:04.086" endtime="20230923 12:06:04.089"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:04.091" level="INFO">${installed_version} = ['1.5.1']</msg>
<status status="PASS" starttime="20230923 12:06:04.089" endtime="20230923 12:06:04.091"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:06:04.091" endtime="20230923 12:06:04.094"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.098" level="INFO">@{installed_segments} = [ 1 | 5 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.097" endtime="20230923 12:06:04.098"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.098" level="INFO">@{required_segments} = [ 1 | 3 | 1 | 8 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.098" endtime="20230923 12:06:04.099"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.099" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:04.100" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.099" endtime="20230923 12:06:04.100"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.100" level="INFO">Length is 4</msg>
<msg timestamp="20230923 12:06:04.100" level="INFO">${required_length} = 4</msg>
<status status="PASS" starttime="20230923 12:06:04.100" endtime="20230923 12:06:04.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.101" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.101" endtime="20230923 12:06:04.101"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230923 12:06:04.102" endtime="20230923 12:06:04.103"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.102" endtime="20230923 12:06:04.103"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.102" endtime="20230923 12:06:04.103"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.104" level="INFO">${segments} = ['1', '5', '1']</msg>
<status status="PASS" starttime="20230923 12:06:04.104" endtime="20230923 12:06:04.104"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.105" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:06:04.105" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:06:04.104" endtime="20230923 12:06:04.105"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:04.106" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:06:04.105" endtime="20230923 12:06:04.106"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.107" endtime="20230923 12:06:04.107"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.106" endtime="20230923 12:06:04.107"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:04.106" endtime="20230923 12:06:04.107"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.107" level="INFO">${padded_version} = 1.5.1</msg>
<status status="PASS" starttime="20230923 12:06:04.107" endtime="20230923 12:06:04.108"/>
</kw>
<msg timestamp="20230923 12:06:04.108" level="INFO">${installed_version} = 1.5.1</msg>
<status status="PASS" starttime="20230923 12:06:04.103" endtime="20230923 12:06:04.108"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.110" level="INFO">${segments} = ['1', '3', '1', '8']</msg>
<status status="PASS" starttime="20230923 12:06:04.109" endtime="20230923 12:06:04.110"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:06:04.110" level="INFO">Length is 4</msg>
<msg timestamp="20230923 12:06:04.110" level="INFO">${segments_length} = 4</msg>
<status status="PASS" starttime="20230923 12:06:04.110" endtime="20230923 12:06:04.110"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:04.111" level="INFO">${pad_count} = -1</msg>
<status status="PASS" starttime="20230923 12:06:04.110" endtime="20230923 12:06:04.111"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.112" endtime="20230923 12:06:04.112"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.112" endtime="20230923 12:06:04.112"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:06:04.111" endtime="20230923 12:06:04.112"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.112" level="INFO">${padded_version} = 1.3.1.8</msg>
<status status="PASS" starttime="20230923 12:06:04.112" endtime="20230923 12:06:04.113"/>
</kw>
<msg timestamp="20230923 12:06:04.113" level="INFO">${required_version} = 1.3.1.8</msg>
<status status="PASS" starttime="20230923 12:06:04.108" endtime="20230923 12:06:04.113"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.113" level="INFO">@{installed_segments} = [ 1 | 5 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.113" endtime="20230923 12:06:04.113"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:06:04.114" level="INFO">@{required_segments} = [ 1 | 3 | 1 | 8 ]</msg>
<status status="PASS" starttime="20230923 12:06:04.114" endtime="20230923 12:06:04.114"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}"/>
<var name="${required_segment}"/>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.115" endtime="20230923 12:06:04.115"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.115" endtime="20230923 12:06:04.115"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.115" endtime="20230923 12:06:04.115"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.116" endtime="20230923 12:06:04.116"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.114" endtime="20230923 12:06:04.116"/>
</iter>
<msg timestamp="20230923 12:06:04.116" level="FAIL">Number of FOR loop values should be multiple of its variables. Got 2 variables but 7 values.</msg>
<status status="FAIL" starttime="20230923 12:06:04.114" endtime="20230923 12:06:04.116"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.116" endtime="20230923 12:06:04.116"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="NOT RUN" starttime="20230923 12:06:04.117" endtime="20230923 12:06:04.117"/>
</return>
<status status="NOT RUN" starttime="20230923 12:06:04.117" endtime="20230923 12:06:04.117"/>
</branch>
<status status="NOT RUN" starttime="20230923 12:06:04.116" endtime="20230923 12:06:04.117"/>
</if>
<status status="FAIL" starttime="20230923 12:06:04.095" endtime="20230923 12:06:04.117"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Package : ${package}, Version : ${required_version}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.117" endtime="20230923 12:06:04.118"/>
</kw>
<status status="FAIL" starttime="20230923 12:06:04.028" endtime="20230923 12:06:04.118"/>
</iter>
<status status="FAIL" starttime="20230923 12:06:03.650" endtime="20230923 12:06:04.118"/>
</for>
<kw name="Log To Console" library="BuiltIn">
<arg>${error_list}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.119" endtime="20230923 12:06:04.119"/>
</kw>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="FAIL" starttime="20230923 12:06:03.643" endtime="20230923 12:06:04.120">Number of FOR loop values should be multiple of its variables. Got 2 variables but 7 values.</status>
</test>
<test id="s1-t3" name="Check library availability" line="71">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:06:04.127" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230923 12:06:04.126" endtime="20230923 12:06:04.127"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.134" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.154" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230923 12:06:04.128" endtime="20230923 12:06:04.154"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:06:04.159" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 12:06:04.158" endtime="20230923 12:06:04.159"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.163" endtime="20230923 12:06:04.164"/>
</kw>
<msg timestamp="20230923 12:06:04.165" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.165" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.162" endtime="20230923 12:06:04.165"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.167" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230923 12:06:04.166" endtime="20230923 12:06:04.167"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.166" endtime="20230923 12:06:04.167"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.167" endtime="20230923 12:06:04.167"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.167" endtime="20230923 12:06:04.167"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.166" endtime="20230923 12:06:04.168"/>
</if>
<status status="PASS" starttime="20230923 12:06:04.161" endtime="20230923 12:06:04.168"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.169" endtime="20230923 12:06:04.170"/>
</kw>
<msg timestamp="20230923 12:06:04.170" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.170" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.168" endtime="20230923 12:06:04.170"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.171" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230923 12:06:04.171" endtime="20230923 12:06:04.171"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.170" endtime="20230923 12:06:04.171"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.171" endtime="20230923 12:06:04.172"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.171" endtime="20230923 12:06:04.172"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.170" endtime="20230923 12:06:04.172"/>
</if>
<status status="PASS" starttime="20230923 12:06:04.168" endtime="20230923 12:06:04.172"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.172" endtime="20230923 12:06:04.173"/>
</kw>
<msg timestamp="20230923 12:06:04.173" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.173" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.172" endtime="20230923 12:06:04.173"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.174" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230923 12:06:04.174" endtime="20230923 12:06:04.174"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.173" endtime="20230923 12:06:04.174"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.175" endtime="20230923 12:06:04.175"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.174" endtime="20230923 12:06:04.175"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.173" endtime="20230923 12:06:04.175"/>
</if>
<status status="PASS" starttime="20230923 12:06:04.172" endtime="20230923 12:06:04.175"/>
</iter>
<status status="PASS" starttime="20230923 12:06:04.160" endtime="20230923 12:06:04.175"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:06:04.176" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:06:04.176" endtime="20230923 12:06:04.176"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230923 12:06:04.125" endtime="20230923 12:06:04.178"/>
</test>
<test id="s1-t4" name="Check libz library version" line="88">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.184" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230923 12:06:04.184" endtime="20230923 12:06:04.184"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.186" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230923 12:06:04.185" endtime="20230923 12:06:04.186"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.193" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.244" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230923 12:06:04.187" endtime="20230923 12:06:04.244"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:04.253" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230923 12:06:04.248" endtime="20230923 12:06:04.253"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:04.254" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230923 12:06:04.254" endtime="20230923 12:06:04.254"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.260" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230923 12:06:04.258" endtime="20230923 12:06:04.260"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:04.262" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230923 12:06:04.260" endtime="20230923 12:06:04.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.262" level="INFO">True</msg>
<status status="PASS" starttime="20230923 12:06:04.262" endtime="20230923 12:06:04.262"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.265" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230923 12:06:04.263" endtime="20230923 12:06:04.265"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 12:06:04.268" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230923 12:06:04.265" endtime="20230923 12:06:04.269"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.262" endtime="20230923 12:06:04.269"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.269" endtime="20230923 12:06:04.269"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.269" endtime="20230923 12:06:04.269"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.269" endtime="20230923 12:06:04.269"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.262" endtime="20230923 12:06:04.270"/>
</if>
<status status="PASS" starttime="20230923 12:06:04.255" endtime="20230923 12:06:04.270"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.270" endtime="20230923 12:06:04.270"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.270" endtime="20230923 12:06:04.270"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.270" endtime="20230923 12:06:04.270"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 12:06:04.270" endtime="20230923 12:06:04.271"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:06:04.270" endtime="20230923 12:06:04.271"/>
</branch>
<status status="PASS" starttime="20230923 12:06:04.255" endtime="20230923 12:06:04.271"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230923 12:06:04.182" endtime="20230923 12:06:04.272">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="114">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.279" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230923 12:06:04.279" endtime="20230923 12:06:04.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.280" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230923 12:06:04.280" endtime="20230923 12:06:04.280"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 12:06:04.282" endtime="20230923 12:06:04.283"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:06:04.283" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 12:06:04.283" endtime="20230923 12:06:04.283"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.286" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230923 12:06:04.285" endtime="20230923 12:06:04.286"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.286" level="INFO">which tar</msg>
<status status="PASS" starttime="20230923 12:06:04.286" endtime="20230923 12:06:04.287"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.293" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.311" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230923 12:06:04.287" endtime="20230923 12:06:04.311"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.317" endtime="20230923 12:06:04.318"/>
</kw>
<msg timestamp="20230923 12:06:04.318" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.319" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.315" endtime="20230923 12:06:04.319"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:04.319" endtime="20230923 12:06:04.320"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.285" endtime="20230923 12:06:04.320"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.321" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230923 12:06:04.321" endtime="20230923 12:06:04.321"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.322" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230923 12:06:04.322" endtime="20230923 12:06:04.322"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.328" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.346" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230923 12:06:04.322" endtime="20230923 12:06:04.346"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.351" endtime="20230923 12:06:04.352"/>
</kw>
<msg timestamp="20230923 12:06:04.352" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.352" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.349" endtime="20230923 12:06:04.352"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:04.353" endtime="20230923 12:06:04.353"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.320" endtime="20230923 12:06:04.353"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.354" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230923 12:06:04.354" endtime="20230923 12:06:04.355"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.355" level="INFO">which find</msg>
<status status="PASS" starttime="20230923 12:06:04.355" endtime="20230923 12:06:04.355"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.361" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.378" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230923 12:06:04.355" endtime="20230923 12:06:04.378"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.383" endtime="20230923 12:06:04.384"/>
</kw>
<msg timestamp="20230923 12:06:04.384" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.384" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.381" endtime="20230923 12:06:04.384"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:04.384" endtime="20230923 12:06:04.385"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.354" endtime="20230923 12:06:04.385"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:06:04.386" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:06:04.386" endtime="20230923 12:06:04.386"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:06:04.387" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:06:04.387" endtime="20230923 12:06:04.387"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.393" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.410" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:06:04.387" endtime="20230923 12:06:04.411"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:06:04.416" endtime="20230923 12:06:04.417"/>
</kw>
<msg timestamp="20230923 12:06:04.417" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:06:04.417" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:06:04.413" endtime="20230923 12:06:04.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:06:04.418" endtime="20230923 12:06:04.419"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.386" endtime="20230923 12:06:04.419"/>
</iter>
<status status="PASS" starttime="20230923 12:06:04.284" endtime="20230923 12:06:04.419"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:06:04.420" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:06:04.419" endtime="20230923 12:06:04.420"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.281" endtime="20230923 12:06:04.421"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:06:04.277" endtime="20230923 12:06:04.423"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="121">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.436" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.457" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230923 12:06:04.430" endtime="20230923 12:06:04.457"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:06:04.464" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230923 12:06:04.460" endtime="20230923 12:06:04.464"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:06:04.465" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230923 12:06:04.465" endtime="20230923 12:06:04.465"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:06:04.469" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:06:04.466" endtime="20230923 12:06:04.469"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 12:06:04.473" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230923 12:06:04.471" endtime="20230923 12:06:04.474"/>
</kw>
<status status="PASS" starttime="20230923 12:06:04.470" endtime="20230923 12:06:04.474"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:06:04.428" endtime="20230923 12:06:04.475">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="135">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.489" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.685" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230923 12:06:04.482" endtime="20230923 12:06:04.685"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 12:06:04.691" endtime="20230923 12:06:04.698"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 12:06:04.480" endtime="20230923 12:06:04.702"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="141">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.719" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:04.737" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230923 12:06:04.712" endtime="20230923 12:06:04.737"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 12:06:04.745" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230923 12:06:04.743" endtime="20230923 12:06:04.745"/>
</kw>
<status status="FAIL" starttime="20230923 12:06:04.741" endtime="20230923 12:06:04.746"/>
</iter>
<status status="FAIL" starttime="20230923 12:06:04.740" endtime="20230923 12:06:04.747"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 12:06:04.707" endtime="20230923 12:06:04.748">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="149">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:04.763" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:05.355" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6  ...</msg>
<status status="PASS" starttime="20230923 12:06:04.757" endtime="20230923 12:06:05.355"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 12:06:05.363" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377     1  +1435us[+1435us] +/-   57ms
^- ntp4.bit.nl                   1   6   377    10  +2304us[+2304us] +/-  305ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    13   -956us[-4574us] +/- 8049us
^- mail.emuadmin.com             3   6   377    10  +6126us[+6126us] +/-   74ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230923 12:06:05.361" endtime="20230923 12:06:05.363"/>
</kw>
<status status="FAIL" starttime="20230923 12:06:05.359" endtime="20230923 12:06:05.363"/>
</iter>
<status status="FAIL" starttime="20230923 12:06:05.358" endtime="20230923 12:06:05.364"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 12:06:04.755" endtime="20230923 12:06:05.365">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   6   377     1  +1435us[+1435us] +/-   57ms
^- ntp4.bit.nl                   1   6   377    10  +2304us[+2304us] +/-  305ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    13   -956us[-4574us] +/- 8049us
^- mail.emuadmin.com             3   6   377    10  +6126us[+6126us] +/-   74ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="157">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:06:05.380" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:06:05.579" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230923 12:06:05.374" endtime="20230923 12:06:05.579"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 12:06:05.582" endtime="20230923 12:06:05.585"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 12:06:05.372" endtime="20230923 12:06:05.586"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230923 12:06:03.211" endtime="20230923 12:06:05.592"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="7" fail="3" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
