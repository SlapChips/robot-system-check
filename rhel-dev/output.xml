<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230923 12:32:38.037" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.124" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230923 12:32:38.123" endtime="20230923 12:32:38.124"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.125" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230923 12:32:38.125" endtime="20230923 12:32:38.125"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 12:32:38.126" endtime="20230923 12:32:38.127"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:32:38.127" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 12:32:38.127" endtime="20230923 12:32:38.127"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.128" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230923 12:32:38.128" endtime="20230923 12:32:38.128"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.129" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230923 12:32:38.129" endtime="20230923 12:32:38.129"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.136" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.174" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:32:38.129" endtime="20230923 12:32:38.174"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:38.179" endtime="20230923 12:32:38.180"/>
</kw>
<msg timestamp="20230923 12:32:38.180" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:38.180" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:38.177" endtime="20230923 12:32:38.180"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:38.180" endtime="20230923 12:32:38.181"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.128" endtime="20230923 12:32:38.181"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.182" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 12:32:38.182" endtime="20230923 12:32:38.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.183" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230923 12:32:38.183" endtime="20230923 12:32:38.183"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.189" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.228" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.183" endtime="20230923 12:32:38.228"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:38.232" endtime="20230923 12:32:38.233"/>
</kw>
<msg timestamp="20230923 12:32:38.234" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:38.234" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:38.231" endtime="20230923 12:32:38.234"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:38.234" endtime="20230923 12:32:38.235"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.181" endtime="20230923 12:32:38.235"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.236" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230923 12:32:38.235" endtime="20230923 12:32:38.236"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.237" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230923 12:32:38.236" endtime="20230923 12:32:38.237"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.243" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.280" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.237" endtime="20230923 12:32:38.281"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:38.285" endtime="20230923 12:32:38.286"/>
</kw>
<msg timestamp="20230923 12:32:38.286" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:38.286" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:38.283" endtime="20230923 12:32:38.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:38.287" endtime="20230923 12:32:38.287"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.235" endtime="20230923 12:32:38.287"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.288" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230923 12:32:38.288" endtime="20230923 12:32:38.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.289" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230923 12:32:38.289" endtime="20230923 12:32:38.289"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.295" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.336" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.289" endtime="20230923 12:32:38.336"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:38.340" endtime="20230923 12:32:38.341"/>
</kw>
<msg timestamp="20230923 12:32:38.341" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:38.341" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:38.338" endtime="20230923 12:32:38.341"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:38.342" endtime="20230923 12:32:38.342"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.288" endtime="20230923 12:32:38.342"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.343" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230923 12:32:38.343" endtime="20230923 12:32:38.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.344" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230923 12:32:38.344" endtime="20230923 12:32:38.344"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.350" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.392" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.344" endtime="20230923 12:32:38.392"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:38.397" endtime="20230923 12:32:38.398"/>
</kw>
<msg timestamp="20230923 12:32:38.398" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:38.398" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:38.395" endtime="20230923 12:32:38.398"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:38.399" endtime="20230923 12:32:38.399"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.343" endtime="20230923 12:32:38.399"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.400" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 12:32:38.400" endtime="20230923 12:32:38.400"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.401" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230923 12:32:38.401" endtime="20230923 12:32:38.401"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.407" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.452" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:32:38.401" endtime="20230923 12:32:38.452"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:38.457" endtime="20230923 12:32:38.458"/>
</kw>
<msg timestamp="20230923 12:32:38.458" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:38.458" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:38.455" endtime="20230923 12:32:38.458"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:38.458" endtime="20230923 12:32:38.459"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.400" endtime="20230923 12:32:38.459"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.128" endtime="20230923 12:32:38.459"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:32:38.460" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:32:38.460" endtime="20230923 12:32:38.461"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.126" endtime="20230923 12:32:38.461"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:32:38.121" endtime="20230923 12:32:38.463"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<kw name="Create Dictionary" library="BuiltIn">
<var>${packages_dict}</var>
<arg>ant=9.9.3</arg>
<arg>java-11-openjdk=1.1</arg>
<arg>python3=3.7</arg>
<arg>openssl=0</arg>
<arg>pam=1.3.1</arg>
<arg>python3-setuptools=0</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230923 12:32:38.470" level="INFO">${packages_dict} = {'ant': '9.9.3', 'java-11-openjdk': '1.1', 'python3': '3.7', 'openssl': '0', 'pam': '1.3.1', 'python3-setuptools': '0'}</msg>
<status status="PASS" starttime="20230923 12:32:38.469" endtime="20230923 12:32:38.470"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:32:38.471" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 12:32:38.471" endtime="20230923 12:32:38.471"/>
</kw>
<for flavor="IN">
<var>${package}</var>
<var>${required_version}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${package}">ant</var>
<var name="${required_version}">9.9.3</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.476" level="INFO">Package = ant Version = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:32:38.476" endtime="20230923 12:32:38.476"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.482" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.520" level="INFO">${package_rpm} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:32:38.476" endtime="20230923 12:32:38.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.525" level="INFO">ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:32:38.523" endtime="20230923 12:32:38.525"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:38.527" level="INFO">${installed_version} = ['1.10.9']</msg>
<status status="PASS" starttime="20230923 12:32:38.525" endtime="20230923 12:32:38.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.530" level="INFO">Installed Version : 1.10.9</msg>
<status status="PASS" starttime="20230923 12:32:38.527" endtime="20230923 12:32:38.530"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.532" level="INFO">@{installed_segments} = [ 1 | 10 | 9 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.532" endtime="20230923 12:32:38.532"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.533" level="INFO">@{required_segments} = [ 9 | 9 | 3 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.533" endtime="20230923 12:32:38.533"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.534" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.534" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.533" endtime="20230923 12:32:38.534"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.534" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.534" level="INFO">${required_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.534" endtime="20230923 12:32:38.535"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.535" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.535" endtime="20230923 12:32:38.535"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.536" endtime="20230923 12:32:38.536"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.536" endtime="20230923 12:32:38.536"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.536" endtime="20230923 12:32:38.537"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.538" level="INFO">${segments} = ['1', '10', '9']</msg>
<status status="PASS" starttime="20230923 12:32:38.537" endtime="20230923 12:32:38.538"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.538" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.538" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.538" endtime="20230923 12:32:38.538"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.539" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.539" endtime="20230923 12:32:38.539"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.540" endtime="20230923 12:32:38.540"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.540" endtime="20230923 12:32:38.540"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.539" endtime="20230923 12:32:38.540"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.541" level="INFO">${padded_version} = 1.10.9</msg>
<status status="PASS" starttime="20230923 12:32:38.541" endtime="20230923 12:32:38.541"/>
</kw>
<msg timestamp="20230923 12:32:38.542" level="INFO">${installed_version} = 1.10.9</msg>
<status status="PASS" starttime="20230923 12:32:38.537" endtime="20230923 12:32:38.542"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.543" level="INFO">${segments} = ['9', '9', '3']</msg>
<status status="PASS" starttime="20230923 12:32:38.542" endtime="20230923 12:32:38.543"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.543" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.543" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.543" endtime="20230923 12:32:38.543"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.544" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.543" endtime="20230923 12:32:38.544"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.544" endtime="20230923 12:32:38.544"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.544" endtime="20230923 12:32:38.545"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.544" endtime="20230923 12:32:38.545"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.545" level="INFO">${padded_version} = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:32:38.545" endtime="20230923 12:32:38.545"/>
</kw>
<msg timestamp="20230923 12:32:38.545" level="INFO">${required_version} = 9.9.3</msg>
<status status="PASS" starttime="20230923 12:32:38.542" endtime="20230923 12:32:38.545"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.546" level="INFO">@{installed_segments} = [ 1 | 10 | 9 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.546" endtime="20230923 12:32:38.546"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.547" level="INFO">@{required_segments} = [ 9 | 9 | 3 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.546" endtime="20230923 12:32:38.547"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">1</var>
<var name="${required_segment}">10</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.548" level="INFO">${installed_segment} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.547" endtime="20230923 12:32:38.548"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.548" level="INFO">${required_segment} = 10</msg>
<status status="PASS" starttime="20230923 12:32:38.548" endtime="20230923 12:32:38.548"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:32:38.549" endtime="20230923 12:32:38.550"/>
</kw>
<msg timestamp="20230923 12:32:38.550" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.549" endtime="20230923 12:32:38.550"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:32:38.551" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:32:38.550" endtime="20230923 12:32:38.551"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.547" endtime="20230923 12:32:38.551"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.547" endtime="20230923 12:32:38.551"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:32:38.552" endtime="20230923 12:32:38.554"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.552" endtime="20230923 12:32:38.554"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:32:38.554" endtime="20230923 12:32:38.554"/>
</return>
<status status="PASS" starttime="20230923 12:32:38.554" endtime="20230923 12:32:38.554"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.554" endtime="20230923 12:32:38.554"/>
</if>
<msg timestamp="20230923 12:32:38.555" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.530" endtime="20230923 12:32:38.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.555" level="INFO">Package : ant, Version:9.9.3</msg>
<status status="PASS" starttime="20230923 12:32:38.555" endtime="20230923 12:32:38.555"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.556" endtime="20230923 12:32:38.556"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.555" endtime="20230923 12:32:38.556"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.555" endtime="20230923 12:32:38.556"/>
</if>
<status status="PASS" starttime="20230923 12:32:38.475" endtime="20230923 12:32:38.556"/>
</iter>
<iter>
<var name="${package}">java-11-openjdk</var>
<var name="${required_version}">1.1</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.557" level="INFO">Package = java-11-openjdk Version = 1.1</msg>
<status status="PASS" starttime="20230923 12:32:38.556" endtime="20230923 12:32:38.557"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.563" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.604" level="INFO">${package_rpm} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.557" endtime="20230923 12:32:38.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.609" level="INFO">java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.607" endtime="20230923 12:32:38.609"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:38.611" level="INFO">${installed_version} = ['11.0.18.0.10']</msg>
<status status="PASS" starttime="20230923 12:32:38.609" endtime="20230923 12:32:38.611"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.613" level="INFO">Installed Version : 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:32:38.611" endtime="20230923 12:32:38.614"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.616" level="INFO">@{installed_segments} = [ 11 | 0 | 18 | 0 | 10 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.616" endtime="20230923 12:32:38.616"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.617" level="INFO">@{required_segments} = [ 1 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.616" endtime="20230923 12:32:38.617"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.618" level="INFO">Length is 5</msg>
<msg timestamp="20230923 12:32:38.618" level="INFO">${installed_length} = 5</msg>
<status status="PASS" starttime="20230923 12:32:38.617" endtime="20230923 12:32:38.618"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.618" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:32:38.618" level="INFO">${required_length} = 2</msg>
<status status="PASS" starttime="20230923 12:32:38.618" endtime="20230923 12:32:38.618"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.619" level="INFO">${max_length} = 5</msg>
<status status="PASS" starttime="20230923 12:32:38.619" endtime="20230923 12:32:38.619"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.620" endtime="20230923 12:32:38.620"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.620" endtime="20230923 12:32:38.620"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.619" endtime="20230923 12:32:38.620"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.621" level="INFO">${segments} = ['11', '0', '18', '0', '10']</msg>
<status status="PASS" starttime="20230923 12:32:38.621" endtime="20230923 12:32:38.621"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.622" level="INFO">Length is 5</msg>
<msg timestamp="20230923 12:32:38.622" level="INFO">${segments_length} = 5</msg>
<status status="PASS" starttime="20230923 12:32:38.622" endtime="20230923 12:32:38.622"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.623" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.623" endtime="20230923 12:32:38.623"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.625" endtime="20230923 12:32:38.625"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.625" endtime="20230923 12:32:38.625"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.624" endtime="20230923 12:32:38.625"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.626" level="INFO">${padded_version} = 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:32:38.625" endtime="20230923 12:32:38.626"/>
</kw>
<msg timestamp="20230923 12:32:38.626" level="INFO">${installed_version} = 11.0.18.0.10</msg>
<status status="PASS" starttime="20230923 12:32:38.620" endtime="20230923 12:32:38.626"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.627" level="INFO">${segments} = ['1', '1']</msg>
<status status="PASS" starttime="20230923 12:32:38.627" endtime="20230923 12:32:38.627"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.628" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:32:38.628" level="INFO">${segments_length} = 2</msg>
<status status="PASS" starttime="20230923 12:32:38.628" endtime="20230923 12:32:38.628"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.629" level="INFO">${pad_count} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.628" endtime="20230923 12:32:38.629"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.629" endtime="20230923 12:32:38.630"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.629" endtime="20230923 12:32:38.630"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.630" endtime="20230923 12:32:38.631"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.630" endtime="20230923 12:32:38.631"/>
</iter>
<iter>
<var name="${i}">2</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.631" endtime="20230923 12:32:38.632"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.631" endtime="20230923 12:32:38.632"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.629" endtime="20230923 12:32:38.632"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.632" level="INFO">${padded_version} = 1.1.0.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.632" endtime="20230923 12:32:38.632"/>
</kw>
<msg timestamp="20230923 12:32:38.633" level="INFO">${required_version} = 1.1.0.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.626" endtime="20230923 12:32:38.633"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.633" level="INFO">@{installed_segments} = [ 11 | 0 | 18 | 0 | 10 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.633" endtime="20230923 12:32:38.633"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.634" level="INFO">@{required_segments} = [ 1 | 1 | 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.633" endtime="20230923 12:32:38.634"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">11</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.635" level="INFO">${installed_segment} = 11</msg>
<status status="PASS" starttime="20230923 12:32:38.634" endtime="20230923 12:32:38.635"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.635" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.635" endtime="20230923 12:32:38.636"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:32:38.636" endtime="20230923 12:32:38.637"/>
</kw>
<msg timestamp="20230923 12:32:38.637" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.636" endtime="20230923 12:32:38.637"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:32:38.638" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:32:38.637" endtime="20230923 12:32:38.638"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.634" endtime="20230923 12:32:38.638"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.634" endtime="20230923 12:32:38.638"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:32:38.639" endtime="20230923 12:32:38.640"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.638" endtime="20230923 12:32:38.640"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:32:38.641" endtime="20230923 12:32:38.641"/>
</return>
<status status="PASS" starttime="20230923 12:32:38.640" endtime="20230923 12:32:38.641"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.640" endtime="20230923 12:32:38.641"/>
</if>
<msg timestamp="20230923 12:32:38.641" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.614" endtime="20230923 12:32:38.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.642" level="INFO">Package : java-11-openjdk, Version:1.1</msg>
<status status="PASS" starttime="20230923 12:32:38.641" endtime="20230923 12:32:38.642"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.642" endtime="20230923 12:32:38.642"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.642" endtime="20230923 12:32:38.642"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.642" endtime="20230923 12:32:38.642"/>
</if>
<status status="PASS" starttime="20230923 12:32:38.556" endtime="20230923 12:32:38.643"/>
</iter>
<iter>
<var name="${package}">python3</var>
<var name="${required_version}">3.7</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.643" level="INFO">Package = python3 Version = 3.7</msg>
<status status="PASS" starttime="20230923 12:32:38.643" endtime="20230923 12:32:38.643"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.650" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.689" level="INFO">${package_rpm} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.644" endtime="20230923 12:32:38.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.694" level="INFO">python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.692" endtime="20230923 12:32:38.694"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:38.696" level="INFO">${installed_version} = ['3.9.16']</msg>
<status status="PASS" starttime="20230923 12:32:38.694" endtime="20230923 12:32:38.696"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.698" level="INFO">Installed Version : 3.9.16</msg>
<status status="PASS" starttime="20230923 12:32:38.696" endtime="20230923 12:32:38.698"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.701" level="INFO">@{installed_segments} = [ 3 | 9 | 16 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.700" endtime="20230923 12:32:38.701"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.701" level="INFO">@{required_segments} = [ 3 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.701" endtime="20230923 12:32:38.702"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.702" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.702" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.702" endtime="20230923 12:32:38.702"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.703" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:32:38.703" level="INFO">${required_length} = 2</msg>
<status status="PASS" starttime="20230923 12:32:38.702" endtime="20230923 12:32:38.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.703" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.703" endtime="20230923 12:32:38.703"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.704" endtime="20230923 12:32:38.705"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.704" endtime="20230923 12:32:38.705"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.704" endtime="20230923 12:32:38.705"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.706" level="INFO">${segments} = ['3', '9', '16']</msg>
<status status="PASS" starttime="20230923 12:32:38.705" endtime="20230923 12:32:38.706"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.706" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.706" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.706" endtime="20230923 12:32:38.706"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.707" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.707" endtime="20230923 12:32:38.707"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.708" endtime="20230923 12:32:38.708"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.708" endtime="20230923 12:32:38.708"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.708" endtime="20230923 12:32:38.709"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.709" level="INFO">${padded_version} = 3.9.16</msg>
<status status="PASS" starttime="20230923 12:32:38.709" endtime="20230923 12:32:38.709"/>
</kw>
<msg timestamp="20230923 12:32:38.709" level="INFO">${installed_version} = 3.9.16</msg>
<status status="PASS" starttime="20230923 12:32:38.705" endtime="20230923 12:32:38.709"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.711" level="INFO">${segments} = ['3', '7']</msg>
<status status="PASS" starttime="20230923 12:32:38.710" endtime="20230923 12:32:38.711"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.711" level="INFO">Length is 2</msg>
<msg timestamp="20230923 12:32:38.711" level="INFO">${segments_length} = 2</msg>
<status status="PASS" starttime="20230923 12:32:38.711" endtime="20230923 12:32:38.711"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.712" level="INFO">${pad_count} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.711" endtime="20230923 12:32:38.713"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.713" endtime="20230923 12:32:38.713"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.713" endtime="20230923 12:32:38.713"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.713" endtime="20230923 12:32:38.714"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.714" level="INFO">${padded_version} = 3.7.0</msg>
<status status="PASS" starttime="20230923 12:32:38.714" endtime="20230923 12:32:38.714"/>
</kw>
<msg timestamp="20230923 12:32:38.714" level="INFO">${required_version} = 3.7.0</msg>
<status status="PASS" starttime="20230923 12:32:38.710" endtime="20230923 12:32:38.714"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.715" level="INFO">@{installed_segments} = [ 3 | 9 | 16 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.715" endtime="20230923 12:32:38.715"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.716" level="INFO">@{required_segments} = [ 3 | 7 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.715" endtime="20230923 12:32:38.716"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">3</var>
<var name="${required_segment}">9</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.717" level="INFO">${installed_segment} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.716" endtime="20230923 12:32:38.717"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.717" level="INFO">${required_segment} = 9</msg>
<status status="PASS" starttime="20230923 12:32:38.717" endtime="20230923 12:32:38.717"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:32:38.718" endtime="20230923 12:32:38.719"/>
</kw>
<msg timestamp="20230923 12:32:38.719" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.718" endtime="20230923 12:32:38.719"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:32:38.719" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:32:38.719" endtime="20230923 12:32:38.720"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.716" endtime="20230923 12:32:38.720"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.716" endtime="20230923 12:32:38.720"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:32:38.720" endtime="20230923 12:32:38.722"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.720" endtime="20230923 12:32:38.722"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:32:38.722" endtime="20230923 12:32:38.722"/>
</return>
<status status="PASS" starttime="20230923 12:32:38.722" endtime="20230923 12:32:38.723"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.722" endtime="20230923 12:32:38.723"/>
</if>
<msg timestamp="20230923 12:32:38.723" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.699" endtime="20230923 12:32:38.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.723" level="INFO">Package : python3, Version:3.7</msg>
<status status="PASS" starttime="20230923 12:32:38.723" endtime="20230923 12:32:38.724"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.725" endtime="20230923 12:32:38.725"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.724" endtime="20230923 12:32:38.725"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.724" endtime="20230923 12:32:38.725"/>
</if>
<status status="PASS" starttime="20230923 12:32:38.643" endtime="20230923 12:32:38.725"/>
</iter>
<iter>
<var name="${package}">openssl</var>
<var name="${required_version}">0</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.726" level="INFO">Package = openssl Version = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.725" endtime="20230923 12:32:38.726"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.732" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.774" level="INFO">${package_rpm} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.726" endtime="20230923 12:32:38.774"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.778" level="INFO">openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.777" endtime="20230923 12:32:38.779"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:38.781" level="INFO">${installed_version} = ['3.0.7']</msg>
<status status="PASS" starttime="20230923 12:32:38.779" endtime="20230923 12:32:38.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.783" level="INFO">Installed Version : 3.0.7</msg>
<status status="PASS" starttime="20230923 12:32:38.781" endtime="20230923 12:32:38.783"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.786" level="INFO">@{installed_segments} = [ 3 | 0 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.786" endtime="20230923 12:32:38.786"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.787" level="INFO">@{required_segments} = [ 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.786" endtime="20230923 12:32:38.787"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.788" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.788" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.787" endtime="20230923 12:32:38.788"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.788" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:32:38.788" level="INFO">${required_length} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.788" endtime="20230923 12:32:38.788"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.789" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.789" endtime="20230923 12:32:38.789"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.790" endtime="20230923 12:32:38.790"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.790" endtime="20230923 12:32:38.790"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.789" endtime="20230923 12:32:38.790"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.791" level="INFO">${segments} = ['3', '0', '7']</msg>
<status status="PASS" starttime="20230923 12:32:38.791" endtime="20230923 12:32:38.792"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.792" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.792" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.792" endtime="20230923 12:32:38.792"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.793" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.792" endtime="20230923 12:32:38.793"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.794" endtime="20230923 12:32:38.794"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.794" endtime="20230923 12:32:38.794"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.793" endtime="20230923 12:32:38.794"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.795" level="INFO">${padded_version} = 3.0.7</msg>
<status status="PASS" starttime="20230923 12:32:38.794" endtime="20230923 12:32:38.795"/>
</kw>
<msg timestamp="20230923 12:32:38.795" level="INFO">${installed_version} = 3.0.7</msg>
<status status="PASS" starttime="20230923 12:32:38.790" endtime="20230923 12:32:38.795"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.796" level="INFO">${segments} = ['0']</msg>
<status status="PASS" starttime="20230923 12:32:38.796" endtime="20230923 12:32:38.796"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.797" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:32:38.798" level="INFO">${segments_length} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.796" endtime="20230923 12:32:38.798"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.798" level="INFO">${pad_count} = 2</msg>
<status status="PASS" starttime="20230923 12:32:38.798" endtime="20230923 12:32:38.798"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.799" endtime="20230923 12:32:38.799"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.799" endtime="20230923 12:32:38.799"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.799" endtime="20230923 12:32:38.800"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.799" endtime="20230923 12:32:38.800"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.798" endtime="20230923 12:32:38.800"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.800" level="INFO">${padded_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.800" endtime="20230923 12:32:38.800"/>
</kw>
<msg timestamp="20230923 12:32:38.801" level="INFO">${required_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.795" endtime="20230923 12:32:38.801"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.801" level="INFO">@{installed_segments} = [ 3 | 0 | 7 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.801" endtime="20230923 12:32:38.801"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.802" level="INFO">@{required_segments} = [ 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.801" endtime="20230923 12:32:38.802"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">3</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.803" level="INFO">${installed_segment} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.803" endtime="20230923 12:32:38.803"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.804" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.803" endtime="20230923 12:32:38.804"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:32:38.805" endtime="20230923 12:32:38.805"/>
</kw>
<msg timestamp="20230923 12:32:38.805" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.804" endtime="20230923 12:32:38.805"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:32:38.806" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:32:38.806" endtime="20230923 12:32:38.806"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.802" endtime="20230923 12:32:38.806"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.802" endtime="20230923 12:32:38.806"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:32:38.807" endtime="20230923 12:32:38.809"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.807" endtime="20230923 12:32:38.809"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:32:38.809" endtime="20230923 12:32:38.809"/>
</return>
<status status="PASS" starttime="20230923 12:32:38.809" endtime="20230923 12:32:38.809"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.809" endtime="20230923 12:32:38.810"/>
</if>
<msg timestamp="20230923 12:32:38.810" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.784" endtime="20230923 12:32:38.810"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.810" level="INFO">Package : openssl, Version:0</msg>
<status status="PASS" starttime="20230923 12:32:38.810" endtime="20230923 12:32:38.810"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.811" endtime="20230923 12:32:38.811"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.811" endtime="20230923 12:32:38.811"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.811" endtime="20230923 12:32:38.811"/>
</if>
<status status="PASS" starttime="20230923 12:32:38.725" endtime="20230923 12:32:38.811"/>
</iter>
<iter>
<var name="${package}">pam</var>
<var name="${required_version}">1.3.1</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.812" level="INFO">Package = pam Version = 1.3.1</msg>
<status status="PASS" starttime="20230923 12:32:38.812" endtime="20230923 12:32:38.812"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.819" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.865" level="INFO">${package_rpm} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.813" endtime="20230923 12:32:38.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.870" level="INFO">pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230923 12:32:38.868" endtime="20230923 12:32:38.870"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:38.872" level="INFO">${installed_version} = ['1.5.1']</msg>
<status status="PASS" starttime="20230923 12:32:38.870" endtime="20230923 12:32:38.872"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.874" level="INFO">Installed Version : 1.5.1</msg>
<status status="PASS" starttime="20230923 12:32:38.872" endtime="20230923 12:32:38.874"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.877" level="INFO">@{installed_segments} = [ 1 | 5 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.877" endtime="20230923 12:32:38.877"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.878" level="INFO">@{required_segments} = [ 1 | 3 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.877" endtime="20230923 12:32:38.878"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.878" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.879" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.878" endtime="20230923 12:32:38.879"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.879" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.879" level="INFO">${required_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.879" endtime="20230923 12:32:38.879"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.880" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.879" endtime="20230923 12:32:38.880"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.881" endtime="20230923 12:32:38.881"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.880" endtime="20230923 12:32:38.881"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.880" endtime="20230923 12:32:38.881"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.882" level="INFO">${segments} = ['1', '5', '1']</msg>
<status status="PASS" starttime="20230923 12:32:38.882" endtime="20230923 12:32:38.883"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.883" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.883" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.883" endtime="20230923 12:32:38.883"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.884" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.883" endtime="20230923 12:32:38.884"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.885" endtime="20230923 12:32:38.885"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.885" endtime="20230923 12:32:38.885"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.884" endtime="20230923 12:32:38.885"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.886" level="INFO">${padded_version} = 1.5.1</msg>
<status status="PASS" starttime="20230923 12:32:38.885" endtime="20230923 12:32:38.886"/>
</kw>
<msg timestamp="20230923 12:32:38.886" level="INFO">${installed_version} = 1.5.1</msg>
<status status="PASS" starttime="20230923 12:32:38.881" endtime="20230923 12:32:38.886"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.888" level="INFO">${segments} = ['1', '3', '1']</msg>
<status status="PASS" starttime="20230923 12:32:38.887" endtime="20230923 12:32:38.888"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.888" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.888" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.888" endtime="20230923 12:32:38.888"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.889" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.889" endtime="20230923 12:32:38.889"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.890" endtime="20230923 12:32:38.890"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.889" endtime="20230923 12:32:38.890"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.889" endtime="20230923 12:32:38.890"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.890" level="INFO">${padded_version} = 1.3.1</msg>
<status status="PASS" starttime="20230923 12:32:38.890" endtime="20230923 12:32:38.890"/>
</kw>
<msg timestamp="20230923 12:32:38.891" level="INFO">${required_version} = 1.3.1</msg>
<status status="PASS" starttime="20230923 12:32:38.886" endtime="20230923 12:32:38.891"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.891" level="INFO">@{installed_segments} = [ 1 | 5 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.891" endtime="20230923 12:32:38.891"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.892" level="INFO">@{required_segments} = [ 1 | 3 | 1 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.891" endtime="20230923 12:32:38.892"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">1</var>
<var name="${required_segment}">5</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.893" level="INFO">${installed_segment} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.892" endtime="20230923 12:32:38.893"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.894" level="INFO">${required_segment} = 5</msg>
<status status="PASS" starttime="20230923 12:32:38.893" endtime="20230923 12:32:38.894"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:32:38.895" endtime="20230923 12:32:38.895"/>
</kw>
<msg timestamp="20230923 12:32:38.895" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.894" endtime="20230923 12:32:38.895"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:32:38.896" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:32:38.896" endtime="20230923 12:32:38.896"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.892" endtime="20230923 12:32:38.896"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.892" endtime="20230923 12:32:38.896"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:32:38.897" endtime="20230923 12:32:38.899"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.897" endtime="20230923 12:32:38.899"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:32:38.899" endtime="20230923 12:32:38.899"/>
</return>
<status status="PASS" starttime="20230923 12:32:38.899" endtime="20230923 12:32:38.899"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.899" endtime="20230923 12:32:38.900"/>
</if>
<msg timestamp="20230923 12:32:38.900" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.875" endtime="20230923 12:32:38.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.900" level="INFO">Package : pam, Version:1.3.1</msg>
<status status="PASS" starttime="20230923 12:32:38.900" endtime="20230923 12:32:38.900"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.901" endtime="20230923 12:32:38.901"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.901" endtime="20230923 12:32:38.901"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.901" endtime="20230923 12:32:38.901"/>
</if>
<status status="PASS" starttime="20230923 12:32:38.812" endtime="20230923 12:32:38.901"/>
</iter>
<iter>
<var name="${package}">python3-setuptools</var>
<var name="${required_version}">0</var>
<kw name="Log" library="BuiltIn">
<arg>Package = ${package} Version = ${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.902" level="INFO">Package = python3-setuptools Version = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.902" endtime="20230923 12:32:38.902"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package_rpm}</var>
<arg>rpm -q ${package}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:38.909" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:38.956" level="INFO">${package_rpm} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:32:38.902" endtime="20230923 12:32:38.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${package_rpm}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.961" level="INFO">python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230923 12:32:38.959" endtime="20230923 12:32:38.961"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package_rpm}</arg>
<arg>${package}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:38.963" level="INFO">${installed_version} = ['53.0.0']</msg>
<status status="PASS" starttime="20230923 12:32:38.961" endtime="20230923 12:32:38.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Installed Version : ${installed_version[0]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.966" level="INFO">Installed Version : 53.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.964" endtime="20230923 12:32:38.966"/>
</kw>
<kw name="Compare Package Versions" library="keywords">
<var>${status}</var>
<arg>${installed_version[0]}</arg>
<arg>&gt;=</arg>
<arg>${required_version}</arg>
<doc>Support all evaluators except single "=""</doc>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.969" level="INFO">@{installed_segments} = [ 53 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.968" endtime="20230923 12:32:38.969"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.969" level="INFO">@{required_segments} = [ 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.969" endtime="20230923 12:32:38.969"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${installed_length}</var>
<arg>${installed_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.970" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.970" level="INFO">${installed_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.969" endtime="20230923 12:32:38.970"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${required_length}</var>
<arg>${required_segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.970" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:32:38.971" level="INFO">${required_length} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.970" endtime="20230923 12:32:38.971"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${max_length}</var>
<arg>${installed_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:38.971" level="INFO">${max_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.971" endtime="20230923 12:32:38.971"/>
</kw>
<if>
<branch type="IF" condition="${required_length} &gt; ${installed_length}">
<kw name="Set Variable" library="BuiltIn">
<arg>${max_length}</arg>
<arg>${required_length}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.972" endtime="20230923 12:32:38.972"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.972" endtime="20230923 12:32:38.972"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.972" endtime="20230923 12:32:38.973"/>
</if>
<kw name="Pad Version" library="keywords">
<var>${installed_version}</var>
<arg>${installed_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.974" level="INFO">${segments} = ['53', '0', '0']</msg>
<status status="PASS" starttime="20230923 12:32:38.973" endtime="20230923 12:32:38.974"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.974" level="INFO">Length is 3</msg>
<msg timestamp="20230923 12:32:38.974" level="INFO">${segments_length} = 3</msg>
<status status="PASS" starttime="20230923 12:32:38.974" endtime="20230923 12:32:38.975"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.975" level="INFO">${pad_count} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.975" endtime="20230923 12:32:38.975"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}"/>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.976" endtime="20230923 12:32:38.976"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.976" endtime="20230923 12:32:38.976"/>
</iter>
<status status="NOT RUN" starttime="20230923 12:32:38.976" endtime="20230923 12:32:38.977"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.977" level="INFO">${padded_version} = 53.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.977" endtime="20230923 12:32:38.977"/>
</kw>
<msg timestamp="20230923 12:32:38.978" level="INFO">${installed_version} = 53.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.973" endtime="20230923 12:32:38.978"/>
</kw>
<kw name="Pad Version" library="keywords">
<var>${required_version}</var>
<arg>${required_version}</arg>
<arg>${max_length}</arg>
<kw name="Split String" library="String">
<var>${segments}</var>
<arg>${version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.979" level="INFO">${segments} = ['0']</msg>
<status status="PASS" starttime="20230923 12:32:38.978" endtime="20230923 12:32:38.980"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${segments_length}</var>
<arg>${segments}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230923 12:32:38.980" level="INFO">Length is 1</msg>
<msg timestamp="20230923 12:32:38.980" level="INFO">${segments_length} = 1</msg>
<status status="PASS" starttime="20230923 12:32:38.980" endtime="20230923 12:32:38.980"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${pad_count}</var>
<arg>${length} - ${segments_length}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:38.981" level="INFO">${pad_count} = 2</msg>
<status status="PASS" starttime="20230923 12:32:38.980" endtime="20230923 12:32:38.981"/>
</kw>
<for flavor="IN RANGE">
<var>${i}</var>
<value>0</value>
<value>${pad_count}</value>
<iter>
<var name="${i}">0</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.981" endtime="20230923 12:32:38.982"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.981" endtime="20230923 12:32:38.982"/>
</iter>
<iter>
<var name="${i}">1</var>
<kw name="Append To List" library="Collections">
<arg>${segments}</arg>
<arg>0</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230923 12:32:38.982" endtime="20230923 12:32:38.982"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.982" endtime="20230923 12:32:38.982"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.981" endtime="20230923 12:32:38.982"/>
</for>
<kw name="Catenate" library="BuiltIn">
<var>${padded_version}</var>
<arg>SEPARATOR=.</arg>
<arg>@{segments}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:38.983" level="INFO">${padded_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.983" endtime="20230923 12:32:38.983"/>
</kw>
<msg timestamp="20230923 12:32:38.983" level="INFO">${required_version} = 0.0.0</msg>
<status status="PASS" starttime="20230923 12:32:38.978" endtime="20230923 12:32:38.983"/>
</kw>
<kw name="Split String" library="String">
<var>@{installed_segments}</var>
<arg>${installed_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.984" level="INFO">@{installed_segments} = [ 53 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.984" endtime="20230923 12:32:38.984"/>
</kw>
<kw name="Split String" library="String">
<var>@{required_segments}</var>
<arg>${required_version}</arg>
<arg>.</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20230923 12:32:38.985" level="INFO">@{required_segments} = [ 0 | 0 | 0 ]</msg>
<status status="PASS" starttime="20230923 12:32:38.984" endtime="20230923 12:32:38.985"/>
</kw>
<for flavor="IN">
<var>${installed_segment}</var>
<var>${required_segment}</var>
<value>@{installed_segments}</value>
<value>@{required_segments}</value>
<iter>
<var name="${installed_segment}">53</var>
<var name="${required_segment}">0</var>
<kw name="Convert To Integer" library="BuiltIn">
<var>${installed_segment}</var>
<arg>${installed_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.986" level="INFO">${installed_segment} = 53</msg>
<status status="PASS" starttime="20230923 12:32:38.985" endtime="20230923 12:32:38.986"/>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<var>${required_segment}</var>
<arg>${required_segment}</arg>
<doc>Converts the given item to an integer number.</doc>
<msg timestamp="20230923 12:32:38.986" level="INFO">${required_segment} = 0</msg>
<status status="PASS" starttime="20230923 12:32:38.986" endtime="20230923 12:32:38.986"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>Evaluate</arg>
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Evaluate" library="BuiltIn">
<arg>${installed_segment} ${evaluator} ${required_segment}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" starttime="20230923 12:32:38.987" endtime="20230923 12:32:38.987"/>
</kw>
<msg timestamp="20230923 12:32:38.988" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.987" endtime="20230923 12:32:38.988"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<msg timestamp="20230923 12:32:38.988" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20230923 12:32:38.988" endtime="20230923 12:32:38.989"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.985" endtime="20230923 12:32:38.989"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.985" endtime="20230923 12:32:38.989"/>
</for>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${result}" == "True"</arg>
<arg>Log To Console</arg>
<arg>Package version comparison passed</arg>
<arg>ELSE</arg>
<arg>Log To Console</arg>
<arg>Package version comparison failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>Package version comparison passed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230923 12:32:38.990" endtime="20230923 12:32:38.991"/>
</kw>
<status status="PASS" starttime="20230923 12:32:38.989" endtime="20230923 12:32:38.991"/>
</kw>
<if>
<branch type="IF" condition="&quot;${result}&quot; == &quot;True&quot;">
<return>
<value>${result}</value>
<status status="PASS" starttime="20230923 12:32:38.992" endtime="20230923 12:32:38.992"/>
</return>
<status status="PASS" starttime="20230923 12:32:38.992" endtime="20230923 12:32:38.992"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.992" endtime="20230923 12:32:38.992"/>
</if>
<msg timestamp="20230923 12:32:38.992" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:38.966" endtime="20230923 12:32:38.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Package : ${package}, Version:${required_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.993" level="INFO">Package : python3-setuptools, Version:0</msg>
<status status="PASS" starttime="20230923 12:32:38.993" endtime="20230923 12:32:38.993"/>
</kw>
<if>
<branch type="IF" condition="${status} != True">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${package}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:38.994" endtime="20230923 12:32:38.994"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:38.993" endtime="20230923 12:32:38.994"/>
</branch>
<status status="PASS" starttime="20230923 12:32:38.993" endtime="20230923 12:32:38.994"/>
</if>
<status status="PASS" starttime="20230923 12:32:38.901" endtime="20230923 12:32:38.994"/>
</iter>
<status status="PASS" starttime="20230923 12:32:38.472" endtime="20230923 12:32:38.994"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${error_list}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:38.995" level="INFO">[]</msg>
<status status="PASS" starttime="20230923 12:32:38.995" endtime="20230923 12:32:38.996"/>
</kw>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="PASS" starttime="20230923 12:32:38.466" endtime="20230923 12:32:38.997"/>
</test>
<test id="s1-t3" name="Check library availability" line="71">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:32:39.003" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230923 12:32:39.003" endtime="20230923 12:32:39.003"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.011" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.031" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230923 12:32:39.004" endtime="20230923 12:32:39.031"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:32:39.036" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230923 12:32:39.034" endtime="20230923 12:32:39.036"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.039" endtime="20230923 12:32:39.040"/>
</kw>
<msg timestamp="20230923 12:32:39.040" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.040" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.039" endtime="20230923 12:32:39.040"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.043" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230923 12:32:39.042" endtime="20230923 12:32:39.044"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.041" endtime="20230923 12:32:39.044"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.044" endtime="20230923 12:32:39.044"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:39.044" endtime="20230923 12:32:39.044"/>
</branch>
<status status="PASS" starttime="20230923 12:32:39.041" endtime="20230923 12:32:39.044"/>
</if>
<status status="PASS" starttime="20230923 12:32:39.038" endtime="20230923 12:32:39.044"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.045" endtime="20230923 12:32:39.046"/>
</kw>
<msg timestamp="20230923 12:32:39.046" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.046" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.045" endtime="20230923 12:32:39.046"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.047" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230923 12:32:39.046" endtime="20230923 12:32:39.047"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.046" endtime="20230923 12:32:39.047"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.047" endtime="20230923 12:32:39.047"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:39.047" endtime="20230923 12:32:39.047"/>
</branch>
<status status="PASS" starttime="20230923 12:32:39.046" endtime="20230923 12:32:39.047"/>
</if>
<status status="PASS" starttime="20230923 12:32:39.045" endtime="20230923 12:32:39.047"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.048" endtime="20230923 12:32:39.048"/>
</kw>
<msg timestamp="20230923 12:32:39.048" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.049" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.048" endtime="20230923 12:32:39.049"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.049" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230923 12:32:39.049" endtime="20230923 12:32:39.049"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.049" endtime="20230923 12:32:39.050"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.050" endtime="20230923 12:32:39.050"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:39.050" endtime="20230923 12:32:39.050"/>
</branch>
<status status="PASS" starttime="20230923 12:32:39.049" endtime="20230923 12:32:39.050"/>
</if>
<status status="PASS" starttime="20230923 12:32:39.047" endtime="20230923 12:32:39.050"/>
</iter>
<status status="PASS" starttime="20230923 12:32:39.037" endtime="20230923 12:32:39.050"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:32:39.052" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:32:39.051" endtime="20230923 12:32:39.052"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230923 12:32:39.000" endtime="20230923 12:32:39.053"/>
</test>
<test id="s1-t4" name="Check libz library version" line="88">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:39.059" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230923 12:32:39.059" endtime="20230923 12:32:39.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:39.060" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230923 12:32:39.060" endtime="20230923 12:32:39.060"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.068" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.117" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230923 12:32:39.062" endtime="20230923 12:32:39.117"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:39.127" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230923 12:32:39.121" endtime="20230923 12:32:39.127"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:39.128" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230923 12:32:39.128" endtime="20230923 12:32:39.128"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.133" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230923 12:32:39.132" endtime="20230923 12:32:39.133"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:39.135" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230923 12:32:39.133" endtime="20230923 12:32:39.135"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.135" level="INFO">True</msg>
<status status="PASS" starttime="20230923 12:32:39.135" endtime="20230923 12:32:39.135"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.138" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230923 12:32:39.136" endtime="20230923 12:32:39.138"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 12:32:39.139" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230923 12:32:39.138" endtime="20230923 12:32:39.140"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.135" endtime="20230923 12:32:39.140"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.140" endtime="20230923 12:32:39.140"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.140" endtime="20230923 12:32:39.141"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:39.140" endtime="20230923 12:32:39.141"/>
</branch>
<status status="PASS" starttime="20230923 12:32:39.135" endtime="20230923 12:32:39.141"/>
</if>
<status status="PASS" starttime="20230923 12:32:39.129" endtime="20230923 12:32:39.141"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.141" endtime="20230923 12:32:39.141"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.142" endtime="20230923 12:32:39.142"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:39.141" endtime="20230923 12:32:39.142"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230923 12:32:39.142" endtime="20230923 12:32:39.142"/>
</kw>
<status status="NOT RUN" starttime="20230923 12:32:39.142" endtime="20230923 12:32:39.142"/>
</branch>
<status status="PASS" starttime="20230923 12:32:39.129" endtime="20230923 12:32:39.142"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230923 12:32:39.056" endtime="20230923 12:32:39.143">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="114">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:39.151" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230923 12:32:39.150" endtime="20230923 12:32:39.151"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:39.152" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230923 12:32:39.151" endtime="20230923 12:32:39.152"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230923 12:32:39.154" endtime="20230923 12:32:39.154"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230923 12:32:39.155" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230923 12:32:39.155" endtime="20230923 12:32:39.155"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:39.156" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230923 12:32:39.156" endtime="20230923 12:32:39.156"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.156" level="INFO">which tar</msg>
<status status="PASS" starttime="20230923 12:32:39.156" endtime="20230923 12:32:39.157"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.163" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.181" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230923 12:32:39.157" endtime="20230923 12:32:39.181"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.186" endtime="20230923 12:32:39.187"/>
</kw>
<msg timestamp="20230923 12:32:39.187" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.187" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.184" endtime="20230923 12:32:39.187"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:39.187" endtime="20230923 12:32:39.188"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.155" endtime="20230923 12:32:39.188"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:39.189" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230923 12:32:39.189" endtime="20230923 12:32:39.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.190" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230923 12:32:39.189" endtime="20230923 12:32:39.190"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.196" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.213" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230923 12:32:39.190" endtime="20230923 12:32:39.213"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.218" endtime="20230923 12:32:39.220"/>
</kw>
<msg timestamp="20230923 12:32:39.220" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.220" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.216" endtime="20230923 12:32:39.220"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:39.220" endtime="20230923 12:32:39.221"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.188" endtime="20230923 12:32:39.221"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:39.223" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230923 12:32:39.222" endtime="20230923 12:32:39.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.223" level="INFO">which find</msg>
<status status="PASS" starttime="20230923 12:32:39.223" endtime="20230923 12:32:39.223"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.230" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.247" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230923 12:32:39.224" endtime="20230923 12:32:39.247"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.251" endtime="20230923 12:32:39.252"/>
</kw>
<msg timestamp="20230923 12:32:39.253" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.253" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.250" endtime="20230923 12:32:39.253"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:39.253" endtime="20230923 12:32:39.254"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.222" endtime="20230923 12:32:39.254"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230923 12:32:39.255" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:32:39.255" endtime="20230923 12:32:39.255"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230923 12:32:39.256" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:32:39.255" endtime="20230923 12:32:39.256"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.263" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.280" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230923 12:32:39.256" endtime="20230923 12:32:39.280"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230923 12:32:39.284" endtime="20230923 12:32:39.285"/>
</kw>
<msg timestamp="20230923 12:32:39.286" level="INFO">${status} = PASS</msg>
<msg timestamp="20230923 12:32:39.286" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230923 12:32:39.282" endtime="20230923 12:32:39.286"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230923 12:32:39.286" endtime="20230923 12:32:39.286"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.254" endtime="20230923 12:32:39.287"/>
</iter>
<status status="PASS" starttime="20230923 12:32:39.155" endtime="20230923 12:32:39.287"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230923 12:32:39.288" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230923 12:32:39.287" endtime="20230923 12:32:39.288"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.153" endtime="20230923 12:32:39.288"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:32:39.148" endtime="20230923 12:32:39.290"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="121">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.302" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.322" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230923 12:32:39.296" endtime="20230923 12:32:39.322"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230923 12:32:39.330" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230923 12:32:39.326" endtime="20230923 12:32:39.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230923 12:32:39.331" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230923 12:32:39.331" endtime="20230923 12:32:39.331"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230923 12:32:39.335" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230923 12:32:39.332" endtime="20230923 12:32:39.335"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230923 12:32:39.337" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230923 12:32:39.337" endtime="20230923 12:32:39.338"/>
</kw>
<status status="PASS" starttime="20230923 12:32:39.336" endtime="20230923 12:32:39.338"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230923 12:32:39.294" endtime="20230923 12:32:39.339">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="135">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.352" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.548" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230923 12:32:39.345" endtime="20230923 12:32:39.549"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 12:32:39.553" endtime="20230923 12:32:39.560"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 12:32:39.343" endtime="20230923 12:32:39.563"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="141">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.580" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:39.599" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230923 12:32:39.573" endtime="20230923 12:32:39.599"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 12:32:39.607" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230923 12:32:39.605" endtime="20230923 12:32:39.608"/>
</kw>
<status status="FAIL" starttime="20230923 12:32:39.604" endtime="20230923 12:32:39.608"/>
</iter>
<status status="FAIL" starttime="20230923 12:32:39.602" endtime="20230923 12:32:39.608"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 12:32:39.569" endtime="20230923 12:32:39.610">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="149">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:39.625" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:40.215" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   7  ...</msg>
<status status="PASS" starttime="20230923 12:32:39.619" endtime="20230923 12:32:40.215"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230923 12:32:40.223" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   7   377    43    -95us[  -95us] +/-   29ms
^- ntp4.bit.nl                   1   6   377    53   -899us[ -899us] +/-  305ms
^* 149-225-172-081.dynamic.&gt;     1   6   377   121   -590us[ -863us] +/- 5032us
^- mail.emuadmin.com             3   7   377    55  +2180us[+2180us] +/-   75ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230923 12:32:40.221" endtime="20230923 12:32:40.223"/>
</kw>
<status status="FAIL" starttime="20230923 12:32:40.220" endtime="20230923 12:32:40.224"/>
</iter>
<status status="FAIL" starttime="20230923 12:32:40.218" endtime="20230923 12:32:40.224"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230923 12:32:39.617" endtime="20230923 12:32:40.225">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- pruts.nl                      2   7   377    43    -95us[  -95us] +/-   29ms
^- ntp4.bit.nl                   1   6   377    53   -899us[ -899us] +/-  305ms
^* 149-225-172-081.dynamic.&gt;     1   6   377   121   -590us[ -863us] +/- 5032us
^- mail.emuadmin.com             3   7   377    55  +2180us[+2180us] +/-   75ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="157">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230923 12:32:40.241" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230923 12:32:40.437" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230923 12:32:40.235" endtime="20230923 12:32:40.438"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230923 12:32:40.441" endtime="20230923 12:32:40.443"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230923 12:32:40.233" endtime="20230923 12:32:40.445"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230923 12:32:38.039" endtime="20230923 12:32:40.452"/>
</suite>
<statistics>
<total>
<stat pass="8" fail="2" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="8" fail="2" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
