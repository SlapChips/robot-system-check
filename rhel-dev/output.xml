<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230922 16:18:29.292" rpa="false" schemaversion="4">
<suite id="s1" name="System.V2" source="/git/robot-system-check/rhel-dev/system.v2.robot">
<test id="s1-t1" name="Verify dependency packages are installed" line="29">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>rpm -q</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.353" level="INFO">${command} = rpm -q</msg>
<status status="PASS" starttime="20230922 16:18:29.353" endtime="20230922 16:18:29.353"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>not installed</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.354" level="INFO">${check_string} = not installed</msg>
<status status="PASS" starttime="20230922 16:18:29.354" endtime="20230922 16:18:29.354"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${package_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230922 16:18:29.355" endtime="20230922 16:18:29.355"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:18:29.356" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230922 16:18:29.355" endtime="20230922 16:18:29.356"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">ant</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.356" level="INFO">${run_cmd} = rpm -q ant</msg>
<status status="PASS" starttime="20230922 16:18:29.356" endtime="20230922 16:18:29.356"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.357" level="INFO">rpm -q ant</msg>
<status status="PASS" starttime="20230922 16:18:29.356" endtime="20230922 16:18:29.357"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.359" level="INFO">Running command 'rpm -q ant 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.374" level="INFO">${output} = ant-1.10.9-7.el9.noarch</msg>
<status status="PASS" starttime="20230922 16:18:29.357" endtime="20230922 16:18:29.374"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.375" endtime="20230922 16:18:29.376"/>
</kw>
<msg timestamp="20230922 16:18:29.376" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.376" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.375" endtime="20230922 16:18:29.376"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.376" endtime="20230922 16:18:29.377"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.356" endtime="20230922 16:18:29.377"/>
</iter>
<iter>
<var name="${item}">java-11-openjdk</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.377" level="INFO">${run_cmd} = rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230922 16:18:29.377" endtime="20230922 16:18:29.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.378" level="INFO">rpm -q java-11-openjdk</msg>
<status status="PASS" starttime="20230922 16:18:29.378" endtime="20230922 16:18:29.378"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.381" level="INFO">Running command 'rpm -q java-11-openjdk 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.396" level="INFO">${output} = java-11-openjdk-11.0.18.0.10-2.el9_1.x86_64</msg>
<status status="PASS" starttime="20230922 16:18:29.378" endtime="20230922 16:18:29.396"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.397" endtime="20230922 16:18:29.397"/>
</kw>
<msg timestamp="20230922 16:18:29.397" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.397" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.396" endtime="20230922 16:18:29.397"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.397" endtime="20230922 16:18:29.398"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.377" endtime="20230922 16:18:29.398"/>
</iter>
<iter>
<var name="${item}">python3</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.398" level="INFO">${run_cmd} = rpm -q python3</msg>
<status status="PASS" starttime="20230922 16:18:29.398" endtime="20230922 16:18:29.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.399" level="INFO">rpm -q python3</msg>
<status status="PASS" starttime="20230922 16:18:29.399" endtime="20230922 16:18:29.399"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.401" level="INFO">Running command 'rpm -q python3 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.416" level="INFO">${output} = python3-3.9.16-1.el9.x86_64</msg>
<status status="PASS" starttime="20230922 16:18:29.399" endtime="20230922 16:18:29.416"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.417" endtime="20230922 16:18:29.417"/>
</kw>
<msg timestamp="20230922 16:18:29.418" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.418" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.416" endtime="20230922 16:18:29.418"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.418" endtime="20230922 16:18:29.418"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.398" endtime="20230922 16:18:29.418"/>
</iter>
<iter>
<var name="${item}">openssl</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.419" level="INFO">${run_cmd} = rpm -q openssl</msg>
<status status="PASS" starttime="20230922 16:18:29.419" endtime="20230922 16:18:29.419"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.419" level="INFO">rpm -q openssl</msg>
<status status="PASS" starttime="20230922 16:18:29.419" endtime="20230922 16:18:29.419"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.422" level="INFO">Running command 'rpm -q openssl 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.437" level="INFO">${output} = openssl-3.0.7-6.el9_2.x86_64</msg>
<status status="PASS" starttime="20230922 16:18:29.419" endtime="20230922 16:18:29.437"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.438" endtime="20230922 16:18:29.439"/>
</kw>
<msg timestamp="20230922 16:18:29.439" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.439" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.438" endtime="20230922 16:18:29.439"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.439" endtime="20230922 16:18:29.440"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.418" endtime="20230922 16:18:29.440"/>
</iter>
<iter>
<var name="${item}">pam</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.440" level="INFO">${run_cmd} = rpm -q pam</msg>
<status status="PASS" starttime="20230922 16:18:29.440" endtime="20230922 16:18:29.440"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.441" level="INFO">rpm -q pam</msg>
<status status="PASS" starttime="20230922 16:18:29.440" endtime="20230922 16:18:29.441"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.443" level="INFO">Running command 'rpm -q pam 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.459" level="INFO">${output} = pam-1.5.1-14.el9.x86_64</msg>
<status status="PASS" starttime="20230922 16:18:29.441" endtime="20230922 16:18:29.459"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.461" endtime="20230922 16:18:29.461"/>
</kw>
<msg timestamp="20230922 16:18:29.461" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.461" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.460" endtime="20230922 16:18:29.461"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.461" endtime="20230922 16:18:29.462"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.440" endtime="20230922 16:18:29.462"/>
</iter>
<iter>
<var name="${item}">python3-setuptools</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.462" level="INFO">${run_cmd} = rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230922 16:18:29.462" endtime="20230922 16:18:29.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.463" level="INFO">rpm -q python3-setuptools</msg>
<status status="PASS" starttime="20230922 16:18:29.463" endtime="20230922 16:18:29.463"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.465" level="INFO">Running command 'rpm -q python3-setuptools 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.482" level="INFO">${output} = python3-setuptools-53.0.0-12.el9.noarch</msg>
<status status="PASS" starttime="20230922 16:18:29.463" endtime="20230922 16:18:29.482"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.483" endtime="20230922 16:18:29.483"/>
</kw>
<msg timestamp="20230922 16:18:29.484" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.484" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.483" endtime="20230922 16:18:29.484"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.484" endtime="20230922 16:18:29.484"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.462" endtime="20230922 16:18:29.484"/>
</iter>
<status status="PASS" starttime="20230922 16:18:29.356" endtime="20230922 16:18:29.484"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230922 16:18:29.485" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230922 16:18:29.484" endtime="20230922 16:18:29.485"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.354" endtime="20230922 16:18:29.485"/>
</kw>
<doc>Check the installed packages using the "rpm -q" command against a list of expected
packages, add and remove packages form the list to modify the test case.
List included : ['ant', 'java-11-openjdk', 'python3', 'openssl', 'pam', 'python3-setuptools']</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230922 16:18:29.352" endtime="20230922 16:18:29.486"/>
</test>
<test id="s1-t2" name="Verify required package are and package versions" line="38">
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{packages_dict}</value>
<iter>
<var name="${key}"/>
<var name="${value}"/>
<kw name="Log" library="BuiltIn">
<arg>${key}:${value}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.489" endtime="20230922 16:18:29.489"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${package}</var>
<arg>rpm -q ${key}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.489" endtime="20230922 16:18:29.489"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${installed_version}</var>
<arg>${package}</arg>
<arg>${key}-(.*)-.*</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.489" endtime="20230922 16:18:29.489"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${required_version}</var>
<arg>${packages_dict}</arg>
<arg>${key}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.490" endtime="20230922 16:18:29.490"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.489" endtime="20230922 16:18:29.490"/>
</iter>
<msg timestamp="20230922 16:18:29.490" level="FAIL">Value of variable '&amp;{packages_dict}' is not dictionary or dictionary-like.</msg>
<status status="FAIL" starttime="20230922 16:18:29.488" endtime="20230922 16:18:29.490"/>
</for>
<doc>Check the versions of the packages installed meets the neccessary minimum values
the test calls the packages_dict dictionary which should be populated with k,v pairs representing
the required package and the minimum supported value</doc>
<status status="FAIL" starttime="20230922 16:18:29.487" endtime="20230922 16:18:29.491">Value of variable '&amp;{packages_dict}' is not dictionary or dictionary-like.</status>
</test>
<test id="s1-t3" name="Check library availability" line="55">
<kw name="Create List" library="BuiltIn">
<var>${libraries}</var>
<arg>libpam.so.0</arg>
<arg>libexpat.so.1</arg>
<arg>libz.so.1</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:18:29.494" level="INFO">${libraries} = ['libpam.so.0', 'libexpat.so.1', 'libz.so.1']</msg>
<status status="PASS" starttime="20230922 16:18:29.494" endtime="20230922 16:18:29.495"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${system_libraries}</var>
<arg>ldconfig -p</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.498" level="INFO">Running command 'ldconfig -p 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.504" level="INFO">${system_libraries} = 510 libs found in cache `/etc/ld.so.cache'
	p11-kit-trust.so (libc6,x86-64) =&gt; /lib64/p11-kit-trust.so
	libzstd.so.1 (libc6,x86-64) =&gt; /lib64/libzstd.so.1
	libz.so.1 (libc6,x86-64) =&gt; /lib64/libz.so.1...</msg>
<status status="PASS" starttime="20230922 16:18:29.495" endtime="20230922 16:18:29.504"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${error_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:18:29.505" level="INFO">${error_list} = []</msg>
<status status="PASS" starttime="20230922 16:18:29.505" endtime="20230922 16:18:29.505"/>
</kw>
<for flavor="IN">
<var>${library}</var>
<value>@{libraries}</value>
<iter>
<var name="${library}">libpam.so.0</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.506" endtime="20230922 16:18:29.507"/>
</kw>
<msg timestamp="20230922 16:18:29.507" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.507" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.506" endtime="20230922 16:18:29.507"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.508" level="INFO">libpam.so.0 found</msg>
<status status="PASS" starttime="20230922 16:18:29.507" endtime="20230922 16:18:29.508"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.507" endtime="20230922 16:18:29.508"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.508" endtime="20230922 16:18:29.508"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.508" endtime="20230922 16:18:29.508"/>
</branch>
<status status="PASS" starttime="20230922 16:18:29.507" endtime="20230922 16:18:29.508"/>
</if>
<status status="PASS" starttime="20230922 16:18:29.506" endtime="20230922 16:18:29.508"/>
</iter>
<iter>
<var name="${library}">libexpat.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.509" endtime="20230922 16:18:29.509"/>
</kw>
<msg timestamp="20230922 16:18:29.509" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.509" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.508" endtime="20230922 16:18:29.509"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.510" level="INFO">libexpat.so.1 found</msg>
<status status="PASS" starttime="20230922 16:18:29.509" endtime="20230922 16:18:29.510"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.509" endtime="20230922 16:18:29.510"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.510" endtime="20230922 16:18:29.510"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.510" endtime="20230922 16:18:29.510"/>
</branch>
<status status="PASS" starttime="20230922 16:18:29.509" endtime="20230922 16:18:29.510"/>
</if>
<status status="PASS" starttime="20230922 16:18:29.508" endtime="20230922 16:18:29.510"/>
</iter>
<iter>
<var name="${library}">libz.so.1</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${system_libraries}</arg>
<arg>${library}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.511" endtime="20230922 16:18:29.512"/>
</kw>
<msg timestamp="20230922 16:18:29.512" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.512" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.510" endtime="20230922 16:18:29.512"/>
</kw>
<if>
<branch type="IF" condition="'${status}' == 'PASS'">
<kw name="Log" library="BuiltIn">
<arg>${library} found</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.513" level="INFO">libz.so.1 found</msg>
<status status="PASS" starttime="20230922 16:18:29.513" endtime="20230922 16:18:29.513"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.513" endtime="20230922 16:18:29.513"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${error_list}</arg>
<arg>${library}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.514" endtime="20230922 16:18:29.514"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.513" endtime="20230922 16:18:29.514"/>
</branch>
<status status="PASS" starttime="20230922 16:18:29.512" endtime="20230922 16:18:29.514"/>
</if>
<status status="PASS" starttime="20230922 16:18:29.510" endtime="20230922 16:18:29.514"/>
</iter>
<status status="PASS" starttime="20230922 16:18:29.505" endtime="20230922 16:18:29.514"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error_list}</arg>
<arg>Following Libraries are missing ${error_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230922 16:18:29.515" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230922 16:18:29.514" endtime="20230922 16:18:29.515"/>
</kw>
<doc>Cisco NSO requires that the operating system has specific libraries installed
the test verifies that the "ldconfig -p" output includes each of the libraries mentioned in the
documentation. To adapt modify the list</doc>
<status status="PASS" starttime="20230922 16:18:29.493" endtime="20230922 16:18:29.515"/>
</test>
<test id="s1-t4" name="Check libz library version" line="72">
<kw name="Set Variable" library="BuiltIn">
<var>${desired_major_version}</var>
<arg>1.2</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.518" level="INFO">${desired_major_version} = 1.2</msg>
<status status="PASS" starttime="20230922 16:18:29.518" endtime="20230922 16:18:29.519"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_minor_version}</var>
<arg>7.1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.519" level="INFO">${desired_minor_version} = 7.1</msg>
<status status="PASS" starttime="20230922 16:18:29.519" endtime="20230922 16:18:29.519"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${libz_version}</var>
<arg>python3 -c "import zlib; print (zlib.ZLIB_VERSION)"</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.522" level="INFO">Running command 'python3 -c "import zlib; print (zlib.ZLIB_VERSION)" 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.545" level="INFO">${libz_version} = 1.2.11</msg>
<status status="PASS" starttime="20230922 16:18:29.520" endtime="20230922 16:18:29.545"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_major_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230922 16:18:29.547" level="INFO">${found_major_version} = ['1.2']</msg>
<status status="PASS" starttime="20230922 16:18:29.546" endtime="20230922 16:18:29.547"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${found_minor_version}</var>
<arg>${libz_version}</arg>
<arg>^(\\d+\\.\\d+)\\.(.*)</arg>
<arg>2</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230922 16:18:29.548" level="INFO">${found_minor_version} = ['11']</msg>
<status status="PASS" starttime="20230922 16:18:29.547" endtime="20230922 16:18:29.548"/>
</kw>
<if>
<branch type="IF" condition="${found_major_version[0]} == ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Going to evaluate : ${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.551" level="INFO">Going to evaluate : 11 &gt; 7.1</msg>
<status status="PASS" starttime="20230922 16:18:29.549" endtime="20230922 16:18:29.551"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${log}</var>
<arg>${found_minor_version[0]} &gt; ${desired_minor_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230922 16:18:29.553" level="INFO">${log} = True</msg>
<status status="PASS" starttime="20230922 16:18:29.551" endtime="20230922 16:18:29.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${log}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.553" level="INFO">True</msg>
<status status="PASS" starttime="20230922 16:18:29.553" endtime="20230922 16:18:29.553"/>
</kw>
<if>
<branch type="IF" condition="${found_minor_version[0]} &gt;= ${desired_minor_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} is greater than minimum</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.555" level="INFO">Found 1.2.11 is greater than minimum</msg>
<status status="PASS" starttime="20230922 16:18:29.554" endtime="20230922 16:18:29.556"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major meets requirements, and Minor is greater or equal ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230922 16:18:29.557" level="INFO">Execution passed with message:
Major meets requirements, and Minor is greater or equal 1.2.11</msg>
<status status="PASS" starttime="20230922 16:18:29.556" endtime="20230922 16:18:29.557"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.553" endtime="20230922 16:18:29.557"/>
</branch>
<branch type="ELSE">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version[0]}.${found_minor_version[0]} this is lower than expected</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.558" endtime="20230922 16:18:29.558"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.558" endtime="20230922 16:18:29.558"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.558" endtime="20230922 16:18:29.558"/>
</branch>
<status status="PASS" starttime="20230922 16:18:29.553" endtime="20230922 16:18:29.558"/>
</if>
<status status="PASS" starttime="20230922 16:18:29.548" endtime="20230922 16:18:29.558"/>
</branch>
<branch type="ELSE IF" condition="${found_major_version[0]} &gt; ${desired_major_version}">
<kw name="Log" library="BuiltIn">
<arg>Found ${found_major_version} is greater than minimum, skipping minor check</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.558" endtime="20230922 16:18:29.558"/>
</kw>
<kw name="Pass Execution" library="BuiltIn">
<arg>Major version is greater that required , skipping minor check.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.558" endtime="20230922 16:18:29.559"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.558" endtime="20230922 16:18:29.559"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Unsupported version of Libz found ${found_major_version[0]}.${found_minor_version[0]}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230922 16:18:29.559" endtime="20230922 16:18:29.559"/>
</kw>
<status status="NOT RUN" starttime="20230922 16:18:29.559" endtime="20230922 16:18:29.559"/>
</branch>
<status status="PASS" starttime="20230922 16:18:29.548" endtime="20230922 16:18:29.559"/>
</if>
<doc>Cisco NSO requires a minimimum version of 1.2.7.1 for the libz library
this test will verify that the verison installed satisfies this requirement.</doc>
<status status="PASS" starttime="20230922 16:18:29.517" endtime="20230922 16:18:29.560">Major meets requirements, and Minor is greater or equal 1.2.11</status>
</test>
<test id="s1-t5" name="Verify required utilities are available" line="98">
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>which</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.563" level="INFO">${command} = which</msg>
<status status="PASS" starttime="20230922 16:18:29.562" endtime="20230922 16:18:29.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${check_string}</var>
<arg>/usr/bin/which: no</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.563" level="INFO">${check_string} = /usr/bin/which: no</msg>
<status status="PASS" starttime="20230922 16:18:29.563" endtime="20230922 16:18:29.563"/>
</kw>
<kw name="Iterate Over List and Run Command" library="keywords">
<arg>${utility_list}</arg>
<arg>${command}</arg>
<arg>${check_string}</arg>
<doc>Iterates through list and runs the provided command, checking that the error string is not in the response</doc>
<kw name="Log" library="BuiltIn">
<arg>${list}</arg>
<arg>DEBUG</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" starttime="20230922 16:18:29.565" endtime="20230922 16:18:29.565"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230922 16:18:29.565" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230922 16:18:29.565" endtime="20230922 16:18:29.565"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{list}</value>
<iter>
<var name="${item}">tar</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.566" level="INFO">${run_cmd} = which tar</msg>
<status status="PASS" starttime="20230922 16:18:29.566" endtime="20230922 16:18:29.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.567" level="INFO">which tar</msg>
<status status="PASS" starttime="20230922 16:18:29.566" endtime="20230922 16:18:29.567"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.569" level="INFO">Running command 'which tar 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.576" level="INFO">${output} = /usr/bin/tar</msg>
<status status="PASS" starttime="20230922 16:18:29.567" endtime="20230922 16:18:29.576"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.577" endtime="20230922 16:18:29.577"/>
</kw>
<msg timestamp="20230922 16:18:29.577" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.577" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.576" endtime="20230922 16:18:29.577"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.578" endtime="20230922 16:18:29.578"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.566" endtime="20230922 16:18:29.578"/>
</iter>
<iter>
<var name="${item}">gzip</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.579" level="INFO">${run_cmd} = which gzip</msg>
<status status="PASS" starttime="20230922 16:18:29.578" endtime="20230922 16:18:29.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.580" level="INFO">which gzip</msg>
<status status="PASS" starttime="20230922 16:18:29.579" endtime="20230922 16:18:29.580"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.582" level="INFO">Running command 'which gzip 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.588" level="INFO">${output} = /usr/bin/gzip</msg>
<status status="PASS" starttime="20230922 16:18:29.580" endtime="20230922 16:18:29.588"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.589" endtime="20230922 16:18:29.590"/>
</kw>
<msg timestamp="20230922 16:18:29.590" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.590" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.589" endtime="20230922 16:18:29.590"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.590" endtime="20230922 16:18:29.591"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.578" endtime="20230922 16:18:29.591"/>
</iter>
<iter>
<var name="${item}">find</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.592" level="INFO">${run_cmd} = which find</msg>
<status status="PASS" starttime="20230922 16:18:29.591" endtime="20230922 16:18:29.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.592" level="INFO">which find</msg>
<status status="PASS" starttime="20230922 16:18:29.592" endtime="20230922 16:18:29.593"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.595" level="INFO">Running command 'which find 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.602" level="INFO">${output} = /usr/bin/find</msg>
<status status="PASS" starttime="20230922 16:18:29.593" endtime="20230922 16:18:29.602"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.603" endtime="20230922 16:18:29.604"/>
</kw>
<msg timestamp="20230922 16:18:29.604" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.604" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.603" endtime="20230922 16:18:29.604"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.604" endtime="20230922 16:18:29.604"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.591" endtime="20230922 16:18:29.604"/>
</iter>
<iter>
<var name="${item}">ssh-keygen</var>
<kw name="Catenate" library="BuiltIn">
<var>${run_cmd}</var>
<arg>${command}</arg>
<arg>${item}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20230922 16:18:29.605" level="INFO">${run_cmd} = which ssh-keygen</msg>
<status status="PASS" starttime="20230922 16:18:29.605" endtime="20230922 16:18:29.605"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${run_cmd}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 16:18:29.605" level="INFO">which ssh-keygen</msg>
<status status="PASS" starttime="20230922 16:18:29.605" endtime="20230922 16:18:29.605"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>${run_cmd}</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.608" level="INFO">Running command 'which ssh-keygen 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.613" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
<status status="PASS" starttime="20230922 16:18:29.605" endtime="20230922 16:18:29.614"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Not Contain</arg>
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${check_string}</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20230922 16:18:29.615" endtime="20230922 16:18:29.615"/>
</kw>
<msg timestamp="20230922 16:18:29.615" level="INFO">${status} = PASS</msg>
<msg timestamp="20230922 16:18:29.615" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230922 16:18:29.614" endtime="20230922 16:18:29.615"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230922 16:18:29.615" endtime="20230922 16:18:29.616"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.604" endtime="20230922 16:18:29.616"/>
</iter>
<status status="PASS" starttime="20230922 16:18:29.565" endtime="20230922 16:18:29.616"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Item(S) Not Found : ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230922 16:18:29.616" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230922 16:18:29.616" endtime="20230922 16:18:29.616"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.564" endtime="20230922 16:18:29.617"/>
</kw>
<doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230922 16:18:29.561" endtime="20230922 16:18:29.617"/>
</test>
<test id="s1-t6" name="Verify correct version of Python is active" line="105">
<kw name="Run" library="OperatingSystem">
<var>${python_version}</var>
<arg>python --version</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.622" level="INFO">Running command 'python --version 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.629" level="INFO">${python_version} = Python 3.9.16</msg>
<status status="PASS" starttime="20230922 16:18:29.620" endtime="20230922 16:18:29.629"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${python_major_version}</var>
<arg>${python_version}</arg>
<arg>Python (\\d+\.\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230922 16:18:29.632" level="INFO">${python_major_version} = ['3.9']</msg>
<status status="PASS" starttime="20230922 16:18:29.630" endtime="20230922 16:18:29.632"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${desired_version}</var>
<arg>3.08</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 16:18:29.633" level="INFO">${desired_version} = 3.08</msg>
<status status="PASS" starttime="20230922 16:18:29.633" endtime="20230922 16:18:29.633"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${status}</var>
<arg>${python_major_version[0]} &gt;= ${desired_version}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230922 16:18:29.635" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20230922 16:18:29.633" endtime="20230922 16:18:29.635"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${status} == True</arg>
<arg>Pass Execution</arg>
<arg>Active Version of Python meets the minimum requirements</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Active Python verison doesnt meet the requirements, review your alternatives-config to see if</arg>
<arg>correct version is active, or install the correct verison.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Pass Execution" library="BuiltIn">
<arg>Active Version of Python meets the minimum requirements</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230922 16:18:29.636" level="INFO">Execution passed with message:
Active Version of Python meets the minimum requirements</msg>
<status status="PASS" starttime="20230922 16:18:29.636" endtime="20230922 16:18:29.636"/>
</kw>
<status status="PASS" starttime="20230922 16:18:29.636" endtime="20230922 16:18:29.636"/>
</kw>
<doc>We require a python verison &gt; 3.7 this test will validatre the
active python environmnet meets this requirement</doc>
<tag>os</tag>
<tag>packages</tag>
<status status="PASS" starttime="20230922 16:18:29.619" endtime="20230922 16:18:29.637">Active Version of Python meets the minimum requirements</status>
</test>
<test id="s1-t7" name="Verify Hostname is not set to localhost" line="119">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>hostnamectl hostname</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.642" level="INFO">Running command 'hostnamectl hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.724" level="INFO">${output} = robot-dev-rhel-9.2</msg>
<status status="PASS" starttime="20230922 16:18:29.640" endtime="20230922 16:18:29.724"/>
</kw>
<kw name="Should Not Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>localhost</arg>
<doc>Fails if objects are equal after converting them to strings.</doc>
<status status="PASS" starttime="20230922 16:18:29.725" endtime="20230922 16:18:29.727"/>
</kw>
<doc>Hostname Should not be localhost</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="PASS" starttime="20230922 16:18:29.639" endtime="20230922 16:18:29.727"/>
</test>
<test id="s1-t8" name="Verify DNS servers are Configured" line="125">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>more /etc/resolv.conf</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.740" level="INFO">Running command 'more /etc/resolv.conf 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:29.747" level="INFO">${output} = # Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2</msg>
<status status="PASS" starttime="20230922 16:18:29.735" endtime="20230922 16:18:29.747"/>
</kw>
<for flavor="IN">
<var>${dns_server}</var>
<value>@{dns_servers}</value>
<iter>
<var name="${dns_server}">192.168.1.1</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${dns_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230922 16:18:29.749" level="FAIL">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</msg>
<status status="FAIL" starttime="20230922 16:18:29.748" endtime="20230922 16:18:29.749"/>
</kw>
<status status="FAIL" starttime="20230922 16:18:29.748" endtime="20230922 16:18:29.749"/>
</iter>
<status status="FAIL" starttime="20230922 16:18:29.747" endtime="20230922 16:18:29.749"/>
</for>
<doc>DNS Servers should be Configured</doc>
<tag>dns</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230922 16:18:29.731" endtime="20230922 16:18:29.750">'# Generated by NetworkManager
search localdomain 2
nameserver 172.16.167.2' does not contain '192.168.1.1'</status>
</test>
<test id="s1-t9" name="Verify NTP servers are Configured" line="133">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>chronyc sources</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:29.755" level="INFO">Running command 'chronyc sources 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:30.352" level="INFO">${output} = MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- 5.255.99.180                  2   6  ...</msg>
<status status="PASS" starttime="20230922 16:18:29.753" endtime="20230922 16:18:30.352"/>
</kw>
<for flavor="IN">
<var>${ntp_server}</var>
<value>@{ntp_servers}</value>
<iter>
<var name="${ntp_server}">ntp1.trans-ix.nl</var>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>${ntp_server}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230922 16:18:30.355" level="FAIL">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- 5.255.99.180                  2   6   377    48    +23ms[  +23ms] +/-   14ms
^- ntp4.bit.nl                   1   6   377    46    +19ms[  +19ms] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    49    +17ms[  +22ms] +/- 7560us
^- mail.emuadmin.com             3   6   377    50    +25ms[  +25ms] +/-   68ms' does not contain 'ntp1.trans-ix.nl'</msg>
<status status="FAIL" starttime="20230922 16:18:30.354" endtime="20230922 16:18:30.355"/>
</kw>
<status status="FAIL" starttime="20230922 16:18:30.353" endtime="20230922 16:18:30.355"/>
</iter>
<status status="FAIL" starttime="20230922 16:18:30.353" endtime="20230922 16:18:30.355"/>
</for>
<doc>NTP Servers should be Configured</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="FAIL" starttime="20230922 16:18:29.752" endtime="20230922 16:18:30.356">'MS Name/IP address         Stratum Poll Reach LastRx Last sample               
===============================================================================
^- 5.255.99.180                  2   6   377    48    +23ms[  +23ms] +/-   14ms
^- ntp4.bit.nl                   1   6   377    46    +19ms[  +19ms] +/-  308ms
^* 149-225-172-081.dynamic.&gt;     1   6   377    49    +17ms[  +22ms] +/- 7560us
^- mail.emuadmin.com             3   6   377    50    +25ms[  +25ms] +/-   68ms' does not contain 'ntp1.trans-ix.nl'</status>
</test>
<test id="s1-t10" name="Verify NTP service is active" line="141">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230922 16:18:30.362" level="INFO">Running command 'timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
<msg timestamp="20230922 16:18:30.445" level="INFO">${output} = yes</msg>
<status status="PASS" starttime="20230922 16:18:30.360" endtime="20230922 16:18:30.445"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>yes</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230922 16:18:30.446" endtime="20230922 16:18:30.446"/>
</kw>
<doc>Check that the NTP service is active</doc>
<tag>ntp</tag>
<tag>os</tag>
<status status="PASS" starttime="20230922 16:18:30.359" endtime="20230922 16:18:30.447"/>
</test>
<doc>The following tests verify the operating system configuration &amp; dependency packages
are present in preperation for the Cisco NSO application testing. The checks include:
- dependent packages are available
- required utilities are present
- hostname has been changed
- DNS and NTP serviecs are configured and active

Refer to the SCDP documentation to address any failed tests.</doc>
<status status="FAIL" starttime="20230922 16:18:29.293" endtime="20230922 16:18:30.449"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="3" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">dns</stat>
<stat pass="1" fail="1" skip="0">ntp</stat>
<stat pass="5" fail="2" skip="0">os</stat>
<stat pass="3" fail="0" skip="0">packages</stat>
</tag>
<suite>
<stat pass="7" fail="3" skip="0" id="s1" name="System.V2">System.V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
