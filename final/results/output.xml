<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230830 19:32:03.969" rpa="false" schemaversion="4">
<suite id="s1" name="Security" source="/home/ubutt/robot-dev/final/security.robot">
<test id="s1-t1" name="Verify Autheselect profile sssd-vf is created" line="14">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>authselect list</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230830 19:32:04.021" level="INFO">Running command 'authselect list 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 19:32:04.026" level="INFO">${output} = - minimal       	 Local users only for minimal installations
- sssd          	 Enable SSSD for system authentication (also for local users only)
- winbind       	 Enable winbind for system authenticat...</msg>
<status status="PASS" starttime="20230830 19:32:04.018" endtime="20230830 19:32:04.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>sssd-vf</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 19:32:04.027" endtime="20230830 19:32:04.028"/>
</kw>
<doc>Verify that a custom sssd profile has been created</doc>
<tag>nso</tag>
<tag>security</tag>
<status status="PASS" starttime="20230830 19:32:04.017" endtime="20230830 19:32:04.028"/>
</test>
<test id="s1-t2" name="Verify Expected Authselect Profile is Active" line="20">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>authselect current -r</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230830 19:32:04.031" level="INFO">Running command 'authselect current -r 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 19:32:04.036" level="INFO">${output} = custom/sssd-vf with-faillock without-nullok</msg>
<status status="PASS" starttime="20230830 19:32:04.029" endtime="20230830 19:32:04.036"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${profile}</var>
<arg>custom/sssd-vf</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230830 19:32:04.037" level="INFO">${profile} = custom/sssd-vf</msg>
<status status="PASS" starttime="20230830 19:32:04.036" endtime="20230830 19:32:04.037"/>
</kw>
<if>
<branch type="IF" condition="'${profile}' in '${output}'">
<kw name="Pass Execution" library="BuiltIn">
<arg>Current Profile is correct - sssd-vf</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230830 19:32:04.038" level="INFO">Execution passed with message:
Current Profile is correct - sssd-vf</msg>
<status status="PASS" starttime="20230830 19:32:04.038" endtime="20230830 19:32:04.038"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.037" endtime="20230830 19:32:04.038"/>
</branch>
<branch type="ELSE">
<kw name="Fail" library="BuiltIn">
<arg>Incorrect, or No, Profile active</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.038" endtime="20230830 19:32:04.038"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.038" endtime="20230830 19:32:04.038"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.037" endtime="20230830 19:32:04.038"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.028" endtime="20230830 19:32:04.039">Current Profile is correct - sssd-vf</status>
</test>
<test id="s1-t3" name="Verify that the required PAM Modules are enabled" line="27">
<kw name="Run" library="OperatingSystem">
<var>${output}</var>
<arg>authselect current</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20230830 19:32:04.042" level="INFO">Running command 'authselect current 2&gt;&amp;1'.</msg>
<msg timestamp="20230830 19:32:04.047" level="INFO">${output} = Profile ID: custom/sssd-vf
Enabled features:
- with-faillock
- without-nullok</msg>
<status status="PASS" starttime="20230830 19:32:04.040" endtime="20230830 19:32:04.047"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${module_status_dict}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 19:32:04.048" level="INFO">${module_status_dict} = {}</msg>
<status status="PASS" starttime="20230830 19:32:04.048" endtime="20230830 19:32:04.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.049" level="INFO">Profile ID: custom/sssd-vf
Enabled features:
- with-faillock
- without-nullok</msg>
<status status="PASS" starttime="20230830 19:32:04.049" endtime="20230830 19:32:04.049"/>
</kw>
<for flavor="IN">
<var>${module}</var>
<value>@{pam_modules}</value>
<iter>
<var name="${module}">with-faillock</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${regex_result}</var>
<var>${regex_message}</var>
<arg>Should Match Regexp</arg>
<arg>${output}</arg>
<arg>${module}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${module}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230830 19:32:04.050" endtime="20230830 19:32:04.051"/>
</kw>
<msg timestamp="20230830 19:32:04.051" level="INFO">${regex_result} = PASS</msg>
<msg timestamp="20230830 19:32:04.051" level="INFO">${regex_message} = with-faillock</msg>
<status status="PASS" starttime="20230830 19:32:04.050" endtime="20230830 19:32:04.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${module_status_dict}</arg>
<arg>${module}</arg>
<arg>${regex_result}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20230830 19:32:04.051" endtime="20230830 19:32:04.052"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.050" endtime="20230830 19:32:04.052"/>
</iter>
<iter>
<var name="${module}">without-nullok</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${regex_result}</var>
<var>${regex_message}</var>
<arg>Should Match Regexp</arg>
<arg>${output}</arg>
<arg>${module}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${module}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20230830 19:32:04.052" endtime="20230830 19:32:04.053"/>
</kw>
<msg timestamp="20230830 19:32:04.053" level="INFO">${regex_result} = PASS</msg>
<msg timestamp="20230830 19:32:04.053" level="INFO">${regex_message} = without-nullok</msg>
<status status="PASS" starttime="20230830 19:32:04.052" endtime="20230830 19:32:04.053"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${module_status_dict}</arg>
<arg>${module}</arg>
<arg>${regex_result}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20230830 19:32:04.053" endtime="20230830 19:32:04.053"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.052" endtime="20230830 19:32:04.053"/>
</iter>
<iter>
<var name="${module}">spam-locks</var>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${regex_result}</var>
<var>${regex_message}</var>
<arg>Should Match Regexp</arg>
<arg>${output}</arg>
<arg>${module}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${output}</arg>
<arg>${module}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<msg timestamp="20230830 19:32:04.054" level="FAIL">'Profile ID: custom/sssd-vf
Enabled features:
- with-faillock
- without-nullok' does not match 'spam-locks'</msg>
<status status="FAIL" starttime="20230830 19:32:04.054" endtime="20230830 19:32:04.055"/>
</kw>
<msg timestamp="20230830 19:32:04.055" level="INFO">${regex_result} = FAIL</msg>
<msg timestamp="20230830 19:32:04.055" level="INFO">${regex_message} = 'Profile ID: custom/sssd-vf
Enabled features:
- with-faillock
- without-nullok' does not match 'spam-locks'</msg>
<status status="PASS" starttime="20230830 19:32:04.054" endtime="20230830 19:32:04.055"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${module_status_dict}</arg>
<arg>${module}</arg>
<arg>${regex_result}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20230830 19:32:04.055" endtime="20230830 19:32:04.056"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.054" endtime="20230830 19:32:04.056"/>
</iter>
<status status="PASS" starttime="20230830 19:32:04.049" endtime="20230830 19:32:04.056"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${module_status_dict}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.057" level="INFO">{'with-faillock': 'PASS', 'without-nullok': 'PASS', 'spam-locks': 'FAIL'}</msg>
<status status="PASS" starttime="20230830 19:32:04.056" endtime="20230830 19:32:04.057"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Dictionary Should Not Contain Value</arg>
<arg>${module_status_dict}</arg>
<arg>FAIL</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<arg>${module_status_dict}</arg>
<arg>FAIL</arg>
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<msg timestamp="20230830 19:32:04.057" level="FAIL">Dictionary contains value 'FAIL'.</msg>
<status status="FAIL" starttime="20230830 19:32:04.057" endtime="20230830 19:32:04.058"/>
</kw>
<msg timestamp="20230830 19:32:04.058" level="INFO">${status} = FAIL</msg>
<msg timestamp="20230830 19:32:04.058" level="INFO">${status_message} = Dictionary contains value 'FAIL'.</msg>
<status status="PASS" starttime="20230830 19:32:04.057" endtime="20230830 19:32:04.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${status}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.058" level="INFO">FAIL</msg>
<status status="PASS" starttime="20230830 19:32:04.058" endtime="20230830 19:32:04.058"/>
</kw>
<if>
<branch type="IF" condition="'FAIL' in '${status}'">
<kw name="Fail" library="BuiltIn">
<arg>Expected PAM enabled-feature not found</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20230830 19:32:04.059" level="FAIL">Expected PAM enabled-feature not found</msg>
<status status="FAIL" starttime="20230830 19:32:04.059" endtime="20230830 19:32:04.059"/>
</kw>
<status status="FAIL" starttime="20230830 19:32:04.059" endtime="20230830 19:32:04.059"/>
</branch>
<status status="FAIL" starttime="20230830 19:32:04.059" endtime="20230830 19:32:04.059"/>
</if>
<doc>This test will verify that without-nullok and with-faillock modules are activated</doc>
<tag>nso</tag>
<tag>security</tag>
<status status="FAIL" starttime="20230830 19:32:04.039" endtime="20230830 19:32:04.060">Expected PAM enabled-feature not found</status>
</test>
<test id="s1-t4" name="Verify that password-auth file has been modifed" line="42">
<kw name="Pass Execution" library="BuiltIn">
<arg>Need to come up with a way to check modifications</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230830 19:32:04.061" level="INFO">Execution passed with message:
Need to come up with a way to check modifications</msg>
<status status="PASS" starttime="20230830 19:32:04.061" endtime="20230830 19:32:04.061"/>
</kw>
<doc>The fie /etc/authselect/custom/sssd-vf needs to be modified</doc>
<tag>security</tag>
<status status="PASS" starttime="20230830 19:32:04.060" endtime="20230830 19:32:04.062">Need to come up with a way to check modifications</status>
</test>
<test id="s1-t5" name="Verify that system-auth file has been modifed" line="47">
<kw name="Pass Execution" library="BuiltIn">
<arg>Need to come up with a way to check modifications</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<msg timestamp="20230830 19:32:04.063" level="INFO">Execution passed with message:
Need to come up with a way to check modifications</msg>
<status status="PASS" starttime="20230830 19:32:04.063" endtime="20230830 19:32:04.063"/>
</kw>
<doc>The fie /etc/authselect/custom/sssd-vf needs to be modified</doc>
<tag>security</tag>
<status status="PASS" starttime="20230830 19:32:04.062" endtime="20230830 19:32:04.063">Need to come up with a way to check modifications</status>
</test>
<test id="s1-t6" name="Verify that faillock.conf has been modifed" line="52">
<kw name="Get File" library="OperatingSystem">
<var>${faillock_conf}</var>
<arg>/etc/security/faillock.conf</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230830 19:32:04.065" level="INFO" html="true">Getting file '&lt;a href="file:///etc/security/faillock.conf"&gt;/etc/security/faillock.conf&lt;/a&gt;'.</msg>
<msg timestamp="20230830 19:32:04.065" level="INFO">${faillock_conf} = # Configuration for locking the user after multiple failed
# authentication attempts.
#
# The directory where the user files with the failure records are kept.
# The default is /var/run/faillock.
# di...</msg>
<status status="PASS" starttime="20230830 19:32:04.064" endtime="20230830 19:32:04.065"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${all_matches}</var>
<arg>${faillock_conf}</arg>
<arg>(?m)^\\s?fail_interval\\s?\=\\s?(\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.066" level="INFO">${all_matches} = ['1800']</msg>
<status status="PASS" starttime="20230830 19:32:04.065" endtime="20230830 19:32:04.066"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_len}</var>
<arg>${all_matches}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.067" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.067" level="INFO">${list_len} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.066" endtime="20230830 19:32:04.067"/>
</kw>
<if>
<branch type="IF" condition="${list_len} &gt; 1">
<kw name="Fail" library="BuiltIn">
<arg>Configuration Error in file, Too many values returned</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.067" endtime="20230830 19:32:04.067"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.067" endtime="20230830 19:32:04.067"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.067" endtime="20230830 19:32:04.067"/>
</if>
<kw name="Get From List" library="Collections">
<var>${faillock_interval}</var>
<arg>${all_matches}</arg>
<arg>0</arg>
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<msg timestamp="20230830 19:32:04.068" level="INFO">${faillock_interval} = 1800</msg>
<status status="PASS" starttime="20230830 19:32:04.067" endtime="20230830 19:32:04.068"/>
</kw>
<if>
<branch type="IF" condition="${faillock_interval} &lt; 1800">
<kw name="Fail" library="BuiltIn">
<arg>Failock interval is set to value &lt; 1800</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.068" endtime="20230830 19:32:04.068"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.068" endtime="20230830 19:32:04.068"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.068" endtime="20230830 19:32:04.068"/>
</if>
<doc>We are required to modify the fail_interval to be &gt;= 1800 seconds</doc>
<tag>security</tag>
<status status="PASS" starttime="20230830 19:32:04.064" endtime="20230830 19:32:04.069"/>
</test>
<test id="s1-t7" name="Verify that pwquality.conf has been modified" line="63">
<kw name="Create Dictionary" library="BuiltIn">
<var>${pwquality_dict}</var>
<arg>minlen=8</arg>
<arg>dcredit=-1</arg>
<arg>ucredit=-1</arg>
<arg>lcredit=-1</arg>
<arg>ocredit=-1</arg>
<arg>dummy=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 19:32:04.070" level="INFO">${pwquality_dict} = {'minlen': '8', 'dcredit': '-1', 'ucredit': '-1', 'lcredit': '-1', 'ocredit': '-1', 'dummy': '1'}</msg>
<status status="PASS" starttime="20230830 19:32:04.069" endtime="20230830 19:32:04.070"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${pwquality_conf}</var>
<arg>/etc/security/pwquality.conf</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230830 19:32:04.070" level="INFO" html="true">Getting file '&lt;a href="file:///etc/security/pwquality.conf"&gt;/etc/security/pwquality.conf&lt;/a&gt;'.</msg>
<msg timestamp="20230830 19:32:04.071" level="INFO">${pwquality_conf} = # Configuration for systemwide password quality limits
# Defaults:
#
# Number of characters in the new password that must not be present in the
# old password.
# difok = 1
#
# Minimum acceptable size ...</msg>
<status status="PASS" starttime="20230830 19:32:04.070" endtime="20230830 19:32:04.071"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230830 19:32:04.071" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.071" endtime="20230830 19:32:04.071"/>
</kw>
<for flavor="IN">
<var>${param}</var>
<value>@{pwquality_dict}</value>
<iter>
<var name="${param}">minlen</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${pwquality_conf}</arg>
<arg>(?m)^\\s?${param}\\s?\=\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.073" level="INFO">${match} = ['8']</msg>
<status status="PASS" starttime="20230830 19:32:04.072" endtime="20230830 19:32:04.073"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expected_value}</var>
<arg>${pwquality_dict}</arg>
<arg>${param}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230830 19:32:04.073" level="INFO">${expected_value} = 8</msg>
<status status="PASS" starttime="20230830 19:32:04.073" endtime="20230830 19:32:04.073"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 19:32:04.073" endtime="20230830 19:32:04.074"/>
</kw>
<msg timestamp="20230830 19:32:04.074" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.074" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.073" endtime="20230830 19:32:04.074"/>
</kw>
<if>
<branch type="IF" condition="'${status}' != 'PASS'">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.074" endtime="20230830 19:32:04.074"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.074" endtime="20230830 19:32:04.074"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.074" endtime="20230830 19:32:04.074"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.072" endtime="20230830 19:32:04.074"/>
</iter>
<iter>
<var name="${param}">dcredit</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${pwquality_conf}</arg>
<arg>(?m)^\\s?${param}\\s?\=\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.075" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.074" endtime="20230830 19:32:04.075"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expected_value}</var>
<arg>${pwquality_dict}</arg>
<arg>${param}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230830 19:32:04.075" level="INFO">${expected_value} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.075" endtime="20230830 19:32:04.075"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 19:32:04.076" endtime="20230830 19:32:04.076"/>
</kw>
<msg timestamp="20230830 19:32:04.076" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.076" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.076" endtime="20230830 19:32:04.076"/>
</kw>
<if>
<branch type="IF" condition="'${status}' != 'PASS'">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.076" endtime="20230830 19:32:04.077"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.076" endtime="20230830 19:32:04.077"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.076" endtime="20230830 19:32:04.077"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.074" endtime="20230830 19:32:04.077"/>
</iter>
<iter>
<var name="${param}">ucredit</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${pwquality_conf}</arg>
<arg>(?m)^\\s?${param}\\s?\=\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.077" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.077" endtime="20230830 19:32:04.077"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expected_value}</var>
<arg>${pwquality_dict}</arg>
<arg>${param}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230830 19:32:04.078" level="INFO">${expected_value} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.078" endtime="20230830 19:32:04.078"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 19:32:04.078" endtime="20230830 19:32:04.078"/>
</kw>
<msg timestamp="20230830 19:32:04.079" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.079" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.078" endtime="20230830 19:32:04.079"/>
</kw>
<if>
<branch type="IF" condition="'${status}' != 'PASS'">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.079" endtime="20230830 19:32:04.079"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.079" endtime="20230830 19:32:04.079"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.079" endtime="20230830 19:32:04.079"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.077" endtime="20230830 19:32:04.079"/>
</iter>
<iter>
<var name="${param}">lcredit</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${pwquality_conf}</arg>
<arg>(?m)^\\s?${param}\\s?\=\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.080" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.079" endtime="20230830 19:32:04.080"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expected_value}</var>
<arg>${pwquality_dict}</arg>
<arg>${param}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230830 19:32:04.080" level="INFO">${expected_value} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.080" endtime="20230830 19:32:04.080"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 19:32:04.081" endtime="20230830 19:32:04.081"/>
</kw>
<msg timestamp="20230830 19:32:04.081" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.081" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.080" endtime="20230830 19:32:04.081"/>
</kw>
<if>
<branch type="IF" condition="'${status}' != 'PASS'">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.081" endtime="20230830 19:32:04.081"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.081" endtime="20230830 19:32:04.081"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.081" endtime="20230830 19:32:04.081"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.079" endtime="20230830 19:32:04.081"/>
</iter>
<iter>
<var name="${param}">ocredit</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${pwquality_conf}</arg>
<arg>(?m)^\\s?${param}\\s?\=\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.082" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.082" endtime="20230830 19:32:04.082"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expected_value}</var>
<arg>${pwquality_dict}</arg>
<arg>${param}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230830 19:32:04.083" level="INFO">${expected_value} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.082" endtime="20230830 19:32:04.083"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20230830 19:32:04.083" endtime="20230830 19:32:04.083"/>
</kw>
<msg timestamp="20230830 19:32:04.083" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.083" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.083" endtime="20230830 19:32:04.083"/>
</kw>
<if>
<branch type="IF" condition="'${status}' != 'PASS'">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.084" endtime="20230830 19:32:04.084"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.084" endtime="20230830 19:32:04.084"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.083" endtime="20230830 19:32:04.084"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.082" endtime="20230830 19:32:04.084"/>
</iter>
<iter>
<var name="${param}">dummy</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${pwquality_conf}</arg>
<arg>(?m)^\\s?${param}\\s?\=\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.085" level="INFO">${match} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.084" endtime="20230830 19:32:04.085"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${expected_value}</var>
<arg>${pwquality_dict}</arg>
<arg>${param}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20230830 19:32:04.085" level="INFO">${expected_value} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.085" endtime="20230830 19:32:04.085"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Contain</arg>
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${match}</arg>
<arg>${expected_value}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20230830 19:32:04.086" level="FAIL">'[]' does not contain '1'</msg>
<status status="FAIL" starttime="20230830 19:32:04.085" endtime="20230830 19:32:04.086"/>
</kw>
<msg timestamp="20230830 19:32:04.086" level="INFO">${status} = FAIL</msg>
<msg timestamp="20230830 19:32:04.086" level="INFO">${status_message} = '[]' does not contain '1'</msg>
<status status="PASS" starttime="20230830 19:32:04.085" endtime="20230830 19:32:04.086"/>
</kw>
<if>
<branch type="IF" condition="'${status}' != 'PASS'">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${param}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230830 19:32:04.086" endtime="20230830 19:32:04.086"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.086" endtime="20230830 19:32:04.087"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.086" endtime="20230830 19:32:04.087"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.084" endtime="20230830 19:32:04.087"/>
</iter>
<status status="PASS" starttime="20230830 19:32:04.071" endtime="20230830 19:32:04.087"/>
</for>
<kw name="Log" library="BuiltIn">
<arg>${errors_list}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.087" level="INFO">['dummy']</msg>
<status status="PASS" starttime="20230830 19:32:04.087" endtime="20230830 19:32:04.087"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Errors found in values for ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230830 19:32:04.088" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.088" level="FAIL">Errors found in values for ['dummy']</msg>
<status status="FAIL" starttime="20230830 19:32:04.087" endtime="20230830 19:32:04.088"/>
</kw>
<doc>We are required to modify the pwquality.conf to ensure only complex passwords are allowed</doc>
<status status="FAIL" starttime="20230830 19:32:04.069" endtime="20230830 19:32:04.088">Errors found in values for ['dummy']</status>
</test>
<test id="s1-t8" name="Verify that pwquality.conf has been modified -2" line="77">
<kw name="Create Dictionary" library="BuiltIn">
<var>${dict}</var>
<arg>minlen=8</arg>
<arg>dcredit=-1</arg>
<arg>ucredit=-1</arg>
<arg>lcredit=-1</arg>
<arg>ocredit=-1</arg>
<arg>dummy=1</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 19:32:04.089" level="INFO">${dict} = {'minlen': '8', 'dcredit': '-1', 'ucredit': '-1', 'lcredit': '-1', 'ocredit': '-1', 'dummy': '1'}</msg>
<status status="PASS" starttime="20230830 19:32:04.089" endtime="20230830 19:32:04.090"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file_path}</var>
<arg>/etc/security/pwquality.conf</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230830 19:32:04.090" level="INFO">${file_path} = /etc/security/pwquality.conf</msg>
<status status="PASS" starttime="20230830 19:32:04.090" endtime="20230830 19:32:04.090"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File" library="keywords">
<arg>${dict}</arg>
<arg>${file_path}</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<kw name="Log" library="BuiltIn">
<arg>${dict}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.091" level="INFO">{'minlen': '8', 'dcredit': '-1', 'ucredit': '-1', 'lcredit': '-1', 'ocredit': '-1', 'dummy': '1'}</msg>
<status status="PASS" starttime="20230830 19:32:04.091" endtime="20230830 19:32:04.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${file_path}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.091" level="INFO">/etc/security/pwquality.conf</msg>
<status status="PASS" starttime="20230830 19:32:04.091" endtime="20230830 19:32:04.091"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${file_path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230830 19:32:04.092" level="INFO" html="true">Getting file '&lt;a href="file:///etc/security/pwquality.conf"&gt;/etc/security/pwquality.conf&lt;/a&gt;'.</msg>
<msg timestamp="20230830 19:32:04.092" level="INFO">${file} = # Configuration for systemwide password quality limits
# Defaults:
#
# Number of characters in the new password that must not be present in the
# old password.
# difok = 1
#
# Minimum acceptable size ...</msg>
<status status="PASS" starttime="20230830 19:32:04.092" endtime="20230830 19:32:04.092"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230830 19:32:04.092" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.092" endtime="20230830 19:32:04.092"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{dict}</value>
<iter>
<var name="${key}">minlen</var>
<var name="${value}">8</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.093" level="INFO">${match} = ['8']</msg>
<status status="PASS" starttime="20230830 19:32:04.093" endtime="20230830 19:32:04.093"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.094" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.094" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.094" endtime="20230830 19:32:04.094"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.096" level="INFO">${match_val} = 8</msg>
<status status="PASS" starttime="20230830 19:32:04.094" endtime="20230830 19:32:04.096"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.096" endtime="20230830 19:32:04.096"/>
</kw>
<msg timestamp="20230830 19:32:04.096" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.096" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.096" endtime="20230830 19:32:04.096"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.097" endtime="20230830 19:32:04.097"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.094" endtime="20230830 19:32:04.097"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.097" endtime="20230830 19:32:04.097"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.097" endtime="20230830 19:32:04.097"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.094" endtime="20230830 19:32:04.097"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.093" endtime="20230830 19:32:04.097"/>
</iter>
<iter>
<var name="${key}">dcredit</var>
<var name="${value}">-1</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.098" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.097" endtime="20230830 19:32:04.098"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.098" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.098" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.098" endtime="20230830 19:32:04.098"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.100" level="INFO">${match_val} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.099" endtime="20230830 19:32:04.100"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.100" endtime="20230830 19:32:04.101"/>
</kw>
<msg timestamp="20230830 19:32:04.101" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.101" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.100" endtime="20230830 19:32:04.101"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.101" endtime="20230830 19:32:04.101"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.098" endtime="20230830 19:32:04.101"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.101" endtime="20230830 19:32:04.101"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.101" endtime="20230830 19:32:04.101"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.098" endtime="20230830 19:32:04.101"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.097" endtime="20230830 19:32:04.102"/>
</iter>
<iter>
<var name="${key}">ucredit</var>
<var name="${value}">-1</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.102" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.102" endtime="20230830 19:32:04.102"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.103" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.103" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.102" endtime="20230830 19:32:04.103"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.104" level="INFO">${match_val} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.103" endtime="20230830 19:32:04.104"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.105" endtime="20230830 19:32:04.105"/>
</kw>
<msg timestamp="20230830 19:32:04.105" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.105" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.104" endtime="20230830 19:32:04.105"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.105" endtime="20230830 19:32:04.105"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.103" endtime="20230830 19:32:04.105"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.106" endtime="20230830 19:32:04.106"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.105" endtime="20230830 19:32:04.106"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.103" endtime="20230830 19:32:04.106"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.102" endtime="20230830 19:32:04.106"/>
</iter>
<iter>
<var name="${key}">lcredit</var>
<var name="${value}">-1</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.107" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.106" endtime="20230830 19:32:04.107"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.107" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.107" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.107" endtime="20230830 19:32:04.107"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.109" level="INFO">${match_val} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.107" endtime="20230830 19:32:04.109"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.109" endtime="20230830 19:32:04.109"/>
</kw>
<msg timestamp="20230830 19:32:04.109" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.109" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.109" endtime="20230830 19:32:04.109"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.109" endtime="20230830 19:32:04.110"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.107" endtime="20230830 19:32:04.110"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.110" endtime="20230830 19:32:04.110"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.110" endtime="20230830 19:32:04.110"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.107" endtime="20230830 19:32:04.110"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.106" endtime="20230830 19:32:04.110"/>
</iter>
<iter>
<var name="${key}">ocredit</var>
<var name="${value}">-1</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.111" level="INFO">${match} = ['-1']</msg>
<status status="PASS" starttime="20230830 19:32:04.110" endtime="20230830 19:32:04.111"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.111" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.111" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.111" endtime="20230830 19:32:04.111"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.113" level="INFO">${match_val} = -1</msg>
<status status="PASS" starttime="20230830 19:32:04.112" endtime="20230830 19:32:04.113"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.113" endtime="20230830 19:32:04.114"/>
</kw>
<msg timestamp="20230830 19:32:04.114" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.114" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.113" endtime="20230830 19:32:04.114"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.114" endtime="20230830 19:32:04.114"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.111" endtime="20230830 19:32:04.114"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.114" endtime="20230830 19:32:04.114"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.114" endtime="20230830 19:32:04.114"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.111" endtime="20230830 19:32:04.114"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.110" endtime="20230830 19:32:04.114"/>
</iter>
<iter>
<var name="${key}">dummy</var>
<var name="${value}">1</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.115" level="INFO">${match} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.115" endtime="20230830 19:32:04.115"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.116" level="INFO">Length is 0</msg>
<msg timestamp="20230830 19:32:04.116" level="INFO">${number_of_results} = 0</msg>
<status status="PASS" starttime="20230830 19:32:04.115" endtime="20230830 19:32:04.116"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.116" endtime="20230830 19:32:04.116"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.116" endtime="20230830 19:32:04.116"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.116" endtime="20230830 19:32:04.116"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.116" endtime="20230830 19:32:04.116"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230830 19:32:04.117" endtime="20230830 19:32:04.117"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.116" endtime="20230830 19:32:04.117"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.116" endtime="20230830 19:32:04.117"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.115" endtime="20230830 19:32:04.117"/>
</iter>
<status status="PASS" starttime="20230830 19:32:04.092" endtime="20230830 19:32:04.117"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Errors found in values for ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230830 19:32:04.117" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.117" level="FAIL">Errors found in values for ['dummy']</msg>
<status status="FAIL" starttime="20230830 19:32:04.117" endtime="20230830 19:32:04.118"/>
</kw>
<status status="FAIL" starttime="20230830 19:32:04.090" endtime="20230830 19:32:04.118"/>
</kw>
<doc>We are required to modify the pwquality.conf to ensure only complex passwords are allowed</doc>
<status status="FAIL" starttime="20230830 19:32:04.088" endtime="20230830 19:32:04.118">Errors found in values for ['dummy']</status>
</test>
<test id="s1-t9" name="Verify login.defs has been modifed" line="83">
<kw name="Create Dictionary" library="BuiltIn">
<var>${dict}</var>
<arg>PASS_MAX_DAYS=90</arg>
<arg>PASS_MIN_DAYS=1</arg>
<arg>PASS_MIN_LEN=5</arg>
<arg>PASS_WARN_AGE=5</arg>
<arg>dummy=5</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 19:32:04.119" level="INFO">${dict} = {'PASS_MAX_DAYS': '90', 'PASS_MIN_DAYS': '1', 'PASS_MIN_LEN': '5', 'PASS_WARN_AGE': '5', 'dummy': '5'}</msg>
<status status="PASS" starttime="20230830 19:32:04.119" endtime="20230830 19:32:04.119"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file_path}</var>
<arg>/etc/login.defs</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230830 19:32:04.120" level="INFO">${file_path} = /etc/login.defs</msg>
<status status="PASS" starttime="20230830 19:32:04.120" endtime="20230830 19:32:04.120"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File" library="keywords">
<arg>${dict}</arg>
<arg>${file_path}</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<kw name="Log" library="BuiltIn">
<arg>${dict}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.121" level="INFO">{'PASS_MAX_DAYS': '90', 'PASS_MIN_DAYS': '1', 'PASS_MIN_LEN': '5', 'PASS_WARN_AGE': '5', 'dummy': '5'}</msg>
<status status="PASS" starttime="20230830 19:32:04.121" endtime="20230830 19:32:04.121"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${file_path}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.121" level="INFO">/etc/login.defs</msg>
<status status="PASS" starttime="20230830 19:32:04.121" endtime="20230830 19:32:04.121"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${file_path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230830 19:32:04.121" level="INFO" html="true">Getting file '&lt;a href="file:///etc/login.defs"&gt;/etc/login.defs&lt;/a&gt;'.</msg>
<msg timestamp="20230830 19:32:04.122" level="INFO">${file} = #
# Please note that the parameters in this configuration file control the
# behavior of the tools from the shadow-utils component. None of these
# tools uses the PAM mechanism, and the utilities that...</msg>
<status status="PASS" starttime="20230830 19:32:04.121" endtime="20230830 19:32:04.122"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230830 19:32:04.122" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.122" endtime="20230830 19:32:04.122"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{dict}</value>
<iter>
<var name="${key}">PASS_MAX_DAYS</var>
<var name="${value}">90</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.123" level="INFO">${match} = ['90']</msg>
<status status="PASS" starttime="20230830 19:32:04.122" endtime="20230830 19:32:04.123"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.123" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.124" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.123" endtime="20230830 19:32:04.124"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.125" level="INFO">${match_val} = 90</msg>
<status status="PASS" starttime="20230830 19:32:04.124" endtime="20230830 19:32:04.125"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.125" endtime="20230830 19:32:04.126"/>
</kw>
<msg timestamp="20230830 19:32:04.126" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.126" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.125" endtime="20230830 19:32:04.126"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.126" endtime="20230830 19:32:04.126"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.124" endtime="20230830 19:32:04.126"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.126" endtime="20230830 19:32:04.127"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.126" endtime="20230830 19:32:04.127"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.124" endtime="20230830 19:32:04.127"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.122" endtime="20230830 19:32:04.127"/>
</iter>
<iter>
<var name="${key}">PASS_MIN_DAYS</var>
<var name="${value}">1</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.127" level="INFO">${match} = ['1']</msg>
<status status="PASS" starttime="20230830 19:32:04.127" endtime="20230830 19:32:04.128"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.128" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.128" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.128" endtime="20230830 19:32:04.128"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.129" level="INFO">${match_val} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.128" endtime="20230830 19:32:04.129"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.130" endtime="20230830 19:32:04.130"/>
</kw>
<msg timestamp="20230830 19:32:04.130" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.130" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.130" endtime="20230830 19:32:04.130"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.130" endtime="20230830 19:32:04.131"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.128" endtime="20230830 19:32:04.131"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.131" endtime="20230830 19:32:04.131"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.131" endtime="20230830 19:32:04.131"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.128" endtime="20230830 19:32:04.131"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.127" endtime="20230830 19:32:04.131"/>
</iter>
<iter>
<var name="${key}">PASS_MIN_LEN</var>
<var name="${value}">5</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.132" level="INFO">${match} = ['5']</msg>
<status status="PASS" starttime="20230830 19:32:04.131" endtime="20230830 19:32:04.132"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.132" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.132" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.132" endtime="20230830 19:32:04.132"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.134" level="INFO">${match_val} = 5</msg>
<status status="PASS" starttime="20230830 19:32:04.132" endtime="20230830 19:32:04.134"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.134" endtime="20230830 19:32:04.134"/>
</kw>
<msg timestamp="20230830 19:32:04.134" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.135" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.134" endtime="20230830 19:32:04.135"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.135" endtime="20230830 19:32:04.135"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.132" endtime="20230830 19:32:04.135"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.135" endtime="20230830 19:32:04.135"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.135" endtime="20230830 19:32:04.135"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.132" endtime="20230830 19:32:04.135"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.131" endtime="20230830 19:32:04.135"/>
</iter>
<iter>
<var name="${key}">PASS_WARN_AGE</var>
<var name="${value}">5</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.136" level="INFO">${match} = ['5']</msg>
<status status="PASS" starttime="20230830 19:32:04.136" endtime="20230830 19:32:04.136"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.137" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.137" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.136" endtime="20230830 19:32:04.137"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.138" level="INFO">${match_val} = 5</msg>
<status status="PASS" starttime="20230830 19:32:04.137" endtime="20230830 19:32:04.138"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.139" endtime="20230830 19:32:04.139"/>
</kw>
<msg timestamp="20230830 19:32:04.139" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.139" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.138" endtime="20230830 19:32:04.139"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.139" endtime="20230830 19:32:04.139"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.137" endtime="20230830 19:32:04.139"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.140" endtime="20230830 19:32:04.140"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.139" endtime="20230830 19:32:04.140"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.137" endtime="20230830 19:32:04.140"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.135" endtime="20230830 19:32:04.140"/>
</iter>
<iter>
<var name="${key}">dummy</var>
<var name="${value}">5</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.140" level="INFO">${match} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.140" endtime="20230830 19:32:04.140"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.141" level="INFO">Length is 0</msg>
<msg timestamp="20230830 19:32:04.141" level="INFO">${number_of_results} = 0</msg>
<status status="PASS" starttime="20230830 19:32:04.140" endtime="20230830 19:32:04.141"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.141" endtime="20230830 19:32:04.141"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.141" endtime="20230830 19:32:04.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.142" endtime="20230830 19:32:04.142"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.141" endtime="20230830 19:32:04.142"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" starttime="20230830 19:32:04.142" endtime="20230830 19:32:04.142"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.142" endtime="20230830 19:32:04.142"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.141" endtime="20230830 19:32:04.142"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.140" endtime="20230830 19:32:04.142"/>
</iter>
<status status="PASS" starttime="20230830 19:32:04.122" endtime="20230830 19:32:04.142"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Errors found in values for ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230830 19:32:04.142" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.143" level="FAIL">Errors found in values for ['dummy']</msg>
<status status="FAIL" starttime="20230830 19:32:04.142" endtime="20230830 19:32:04.143"/>
</kw>
<status status="FAIL" starttime="20230830 19:32:04.120" endtime="20230830 19:32:04.143"/>
</kw>
<doc>Password expiration values need to be modified in the /etc/login.defs file</doc>
<status status="FAIL" starttime="20230830 19:32:04.118" endtime="20230830 19:32:04.143">Errors found in values for ['dummy']</status>
</test>
<test id="s1-t10" name="Verify that faillock.conf has been modifed -2" line="89">
<kw name="Create Dictionary" library="BuiltIn">
<var>${dict}</var>
<arg>fail_interval=1800</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230830 19:32:04.144" level="INFO">${dict} = {'fail_interval': '1800'}</msg>
<status status="PASS" starttime="20230830 19:32:04.144" endtime="20230830 19:32:04.144"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${file_path}</var>
<arg>/etc/security/faillock.conf</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230830 19:32:04.145" level="INFO">${file_path} = /etc/security/faillock.conf</msg>
<status status="PASS" starttime="20230830 19:32:04.145" endtime="20230830 19:32:04.145"/>
</kw>
<kw name="Get Regexp Matches For Key Value Pairs in File" library="keywords">
<arg>${dict}</arg>
<arg>${file_path}</arg>
<doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
<kw name="Log" library="BuiltIn">
<arg>${dict}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.146" level="INFO">{'fail_interval': '1800'}</msg>
<status status="PASS" starttime="20230830 19:32:04.145" endtime="20230830 19:32:04.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${file_path}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230830 19:32:04.146" level="INFO">/etc/security/faillock.conf</msg>
<status status="PASS" starttime="20230830 19:32:04.146" endtime="20230830 19:32:04.146"/>
</kw>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${file_path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20230830 19:32:04.146" level="INFO" html="true">Getting file '&lt;a href="file:///etc/security/faillock.conf"&gt;/etc/security/faillock.conf&lt;/a&gt;'.</msg>
<msg timestamp="20230830 19:32:04.147" level="INFO">${file} = # Configuration for locking the user after multiple failed
# authentication attempts.
#
# The directory where the user files with the failure records are kept.
# The default is /var/run/faillock.
# di...</msg>
<status status="PASS" starttime="20230830 19:32:04.146" endtime="20230830 19:32:04.147"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>${errors_list}</var>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230830 19:32:04.147" level="INFO">${errors_list} = []</msg>
<status status="PASS" starttime="20230830 19:32:04.147" endtime="20230830 19:32:04.147"/>
</kw>
<for flavor="IN">
<var>${key}</var>
<var>${value}</var>
<value>&amp;{dict}</value>
<iter>
<var name="${key}">fail_interval</var>
<var name="${value}">1800</var>
<kw name="Get Regexp Matches" library="String">
<var>${match}</var>
<arg>${file}</arg>
<arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
<arg>1</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230830 19:32:04.148" level="INFO">${match} = ['1800']</msg>
<status status="PASS" starttime="20230830 19:32:04.147" endtime="20230830 19:32:04.148"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${number_of_results}</var>
<arg>${match}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20230830 19:32:04.148" level="INFO">Length is 1</msg>
<msg timestamp="20230830 19:32:04.148" level="INFO">${number_of_results} = 1</msg>
<status status="PASS" starttime="20230830 19:32:04.148" endtime="20230830 19:32:04.148"/>
</kw>
<if>
<branch type="IF" condition="${number_of_results} &gt; 0">
<kw name="Set Variable If" library="BuiltIn">
<var>${match_val}</var>
<arg>${match[0]}</arg>
<arg>${match[0]}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230830 19:32:04.150" level="INFO">${match_val} = 1800</msg>
<status status="PASS" starttime="20230830 19:32:04.149" endtime="20230830 19:32:04.150"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${status}</var>
<var>${status_message}</var>
<arg>Should Be Equal As Integers</arg>
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${match_val}</arg>
<arg>${value}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" starttime="20230830 19:32:04.150" endtime="20230830 19:32:04.151"/>
</kw>
<msg timestamp="20230830 19:32:04.151" level="INFO">${status} = PASS</msg>
<msg timestamp="20230830 19:32:04.151" level="INFO">${status_message} = None</msg>
<status status="PASS" starttime="20230830 19:32:04.150" endtime="20230830 19:32:04.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' != 'PASS'</arg>
<arg>Append To List</arg>
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230830 19:32:04.151" endtime="20230830 19:32:04.151"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.148" endtime="20230830 19:32:04.151"/>
</branch>
<branch type="ELSE">
<kw name="Append To List" library="Collections">
<arg>${errors_list}</arg>
<arg>${key}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" starttime="20230830 19:32:04.151" endtime="20230830 19:32:04.151"/>
</kw>
<status status="NOT RUN" starttime="20230830 19:32:04.151" endtime="20230830 19:32:04.151"/>
</branch>
<status status="PASS" starttime="20230830 19:32:04.148" endtime="20230830 19:32:04.151"/>
</if>
<status status="PASS" starttime="20230830 19:32:04.147" endtime="20230830 19:32:04.151"/>
</iter>
<status status="PASS" starttime="20230830 19:32:04.147" endtime="20230830 19:32:04.151"/>
</for>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${errors_list}</arg>
<arg>Errors found in values for ${errors_list}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20230830 19:32:04.152" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20230830 19:32:04.151" endtime="20230830 19:32:04.152"/>
</kw>
<status status="PASS" starttime="20230830 19:32:04.145" endtime="20230830 19:32:04.152"/>
</kw>
<doc>We are required to modify the fail_interval to be = 1800 seconds</doc>
<status status="PASS" starttime="20230830 19:32:04.143" endtime="20230830 19:32:04.152"/>
</test>
<status status="FAIL" starttime="20230830 19:32:03.970" endtime="20230830 19:32:04.153"/>
</suite>
<statistics>
<total>
<stat pass="6" fail="4" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" skip="0">nso</stat>
<stat pass="4" fail="1" skip="0">security</stat>
</tag>
<suite>
<stat pass="6" fail="4" skip="0" id="s1" name="Security">Security</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
