<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.9.16 on linux)" generated="20230831 19:50:43.707" rpa="false" schemaversion="4">
  <suite id="s1" name="Tests" source="/home/ubutt/robot-dev/tests">
    <suite id="s1-s1" name="Ncs Env" source="/home/ubutt/robot-dev/tests/ncs_env.robot">
      <test id="s1-s1-t1" name="Verify that the overcommit_memory value has been updated" line="17">
        <kw name="Run" library="OperatingSystem">
          <var>${run_time_overcommit}</var>
          <arg>cat /proc/sys/vm/overcommit_memory</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:43.760" level="INFO">Running command 'cat
            /proc/sys/vm/overcommit_memory 2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:43.764" level="INFO">${run_time_overcommit} = 2</msg>
          <status status="PASS" starttime="20230831 19:50:43.758" endtime="20230831 19:50:43.764" />
        </kw>
        <kw name="Get File" library="OperatingSystem">
          <var>${sysctl_d_ncs_conf}</var>
          <arg>/etc/sysctl.d/ncs.conf</arg>
          <doc>Returns the contents of a specified file.</doc>
          <msg timestamp="20230831 19:50:43.765" level="INFO" html="true">Getting file '&lt;a
            href="file:///etc/sysctl.d/ncs.conf"&gt;/etc/sysctl.d/ncs.conf&lt;/a&gt;'.</msg>
          <msg timestamp="20230831 19:50:43.765" level="INFO">${sysctl_d_ncs_conf} = # Adding Over
            Commit Memmory Changes
            # This change keeps overcommit_memmory (OOM) disbaled across system reboots.
            vm.overcommit_memory = 2
</msg>
          <status status="PASS" starttime="20230831 19:50:43.765" endtime="20230831 19:50:43.765" />
        </kw>
        <kw name="Create List" library="BuiltIn">
          <var>${error_list}</var>
          <doc>Returns a list containing given items.</doc>
          <msg timestamp="20230831 19:50:43.766" level="INFO">${error_list} = []</msg>
          <status status="PASS" starttime="20230831 19:50:43.766" endtime="20230831 19:50:43.766" />
        </kw>
        <if>
          <branch type="IF" condition="${run_time_overcommit} == 2">
            <kw name="Log" library="BuiltIn">
              <arg>/proc/sys/vm/overcommit_memory is configured correctly</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:43.767" level="INFO">/proc/sys/vm/overcommit_memory is
                configured correctly</msg>
              <status status="PASS" starttime="20230831 19:50:43.767"
                endtime="20230831 19:50:43.767" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:43.766" endtime="20230831 19:50:43.767" />
          </branch>
          <branch type="ELSE">
            <kw name="Append To List" library="Collections">
              <arg>${error_list}</arg>
              <arg>overcommit_memory not set to expected value</arg>
              <doc>Adds ``values`` to the end of ``list``.</doc>
              <status status="NOT RUN" starttime="20230831 19:50:43.767"
                endtime="20230831 19:50:43.767" />
            </kw>
            <status status="NOT RUN" starttime="20230831 19:50:43.767"
              endtime="20230831 19:50:43.767" />
          </branch>
          <status status="PASS" starttime="20230831 19:50:43.766" endtime="20230831 19:50:43.767" />
        </if>
        <kw name="Get Regexp Matches" library="String">
          <var>${matches}</var>
          <arg>${sysctl_d_ncs_conf}</arg>
          <arg>vm.overcommit_memory\\s?=\\s?(.*)</arg>
          <arg>1</arg>
          <doc>Returns a list of all non-overlapping matches in the given string.</doc>
          <msg timestamp="20230831 19:50:43.768" level="INFO">${matches} = ['2']</msg>
          <status status="PASS" starttime="20230831 19:50:43.768" endtime="20230831 19:50:43.768" />
        </kw>
        <kw name="Log" library="BuiltIn">
          <arg>${matches}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:43.769" level="INFO">['2']</msg>
          <status status="PASS" starttime="20230831 19:50:43.769" endtime="20230831 19:50:43.769" />
        </kw>
        <kw name="Log" library="BuiltIn">
          <arg>${matches[0]}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:43.770" level="INFO">2</msg>
          <status status="PASS" starttime="20230831 19:50:43.769" endtime="20230831 19:50:43.770" />
        </kw>
        <if>
          <branch type="IF" condition="${matches[0]} == 2">
            <kw name="Log" library="BuiltIn">
              <arg>vm.overcommit_memory assigned to correct values</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:43.771" level="INFO">vm.overcommit_memory assigned to
                correct values</msg>
              <status status="PASS" starttime="20230831 19:50:43.771"
                endtime="20230831 19:50:43.771" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:43.770" endtime="20230831 19:50:43.771" />
          </branch>
          <branch type="ELSE">
            <kw name="Append To List" library="Collections">
              <arg>${error_list}</arg>
              <arg>vm.overcommit_memory not assigned correct values</arg>
              <doc>Adds ``values`` to the end of ``list``.</doc>
              <status status="NOT RUN" starttime="20230831 19:50:43.771"
                endtime="20230831 19:50:43.771" />
            </kw>
            <status status="NOT RUN" starttime="20230831 19:50:43.771"
              endtime="20230831 19:50:43.771" />
          </branch>
          <status status="PASS" starttime="20230831 19:50:43.770" endtime="20230831 19:50:43.771" />
        </if>
        <kw name="Should Be Empty" library="BuiltIn">
          <arg>${error_list}</arg>
          <arg>Errors encountered with values for ${error_list}</arg>
          <doc>Verifies that the given item is empty.</doc>
          <msg timestamp="20230831 19:50:43.772" level="INFO">Length is 0</msg>
          <status status="PASS" starttime="20230831 19:50:43.772" endtime="20230831 19:50:43.772" />
        </kw>
        <doc>The default os value is pre-configured to 0, this needs to be modified
          to "2". This can be changed at run-time by "echo 2 &gt; /proc/sys/vm/overcommit_memmory"
          however it should be persistently added to the /etc/sysctl.d/ncs.conf
          this test will check both locations</doc>
        <status status="PASS" starttime="20230831 19:50:43.756" endtime="20230831 19:50:43.772" />
      </test>
      <test id="s1-s1-t2" name="Verify the T-SDN system limits have been configured" line="42">
        <kw name="Get File" library="OperatingSystem">
          <var>${file}</var>
          <arg>/etc/security/limits.d/ncs.conf</arg>
          <doc>Returns the contents of a specified file.</doc>
          <msg timestamp="20230831 19:50:43.774" level="INFO" html="true">
            Getting file '&lt;a
            href="file:///etc/security/limits.d/ncs.conf"&gt;/etc/security/limits.d/ncs.conf&lt;/a&gt;'.</msg>
          <msg timestamp="20230831 19:50:43.774" level="INFO">${file} = # Adding T-SDN System Limits
            needed for NSO

            * soft nproc 65535
            * hard nproc 65535
            * soft nofile 65535
            * hard nofile 65535
            * hard memlock 65536
            * soft memlock 65536
</msg>
          <status status="PASS" starttime="20230831 19:50:43.774" endtime="20230831 19:50:43.774" />
        </kw>
        <kw name="Replace String Using Regexp" library="String">
          <var>${clean_file}</var>
          <arg>${file}</arg>
          <arg>\\s{2}</arg>
          <arg>${SPACE}</arg>
          <doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
          <msg timestamp="20230831 19:50:43.775" level="INFO">${clean_file} = # Adding T-SDN System
            Limits needed for NSO * soft nproc 65535
            * hard nproc 65535
            * soft nofile 65535
            * hard nofile 65535
            * hard memlock 65536
            * soft memlock 65536
</msg>
          <status status="PASS" starttime="20230831 19:50:43.775" endtime="20230831 19:50:43.775" />
        </kw>
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${limits_dict}</var>
          <arg>soft nproc=65535</arg>
          <arg>hard nproc=65535</arg>
          <arg>soft nofile=65535</arg>
          <arg>hard memlock=65536</arg>
          <arg>soft memlock=65536</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:43.776" level="INFO">${limits_dict} = {'soft nproc':
            '65535', 'hard nproc': '65535', 'soft nofile': '65535', 'hard memlock': '65536', 'soft
            memlock': '65536'}</msg>
          <status status="PASS" starttime="20230831 19:50:43.775" endtime="20230831 19:50:43.776" />
        </kw>
        <kw name="Create List" library="BuiltIn">
          <var>${error_list}</var>
          <doc>Returns a list containing given items.</doc>
          <msg timestamp="20230831 19:50:43.776" level="INFO">${error_list} = []</msg>
          <status status="PASS" starttime="20230831 19:50:43.776" endtime="20230831 19:50:43.776" />
        </kw>
        <for flavor="IN">
          <var>${key}</var>
          <var>${value}</var>
          <value>&amp;{limits_dict}</value>
          <iter>
            <var name="${key}">soft nproc</var>
            <var name="${value}">65535</var>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${clean_file}</arg>
              <arg>(?&lt;!#)\\s+\\*\\s+${key}\\s?(\\d+)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.777" level="INFO">${matches} = ['65535']</msg>
              <status status="PASS" starttime="20230831 19:50:43.777"
                endtime="20230831 19:50:43.778" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.778" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.778" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.778"
                endtime="20230831 19:50:43.778" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} value found, and set to the expected value : ${value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.779" level="INFO">soft nproc value found,
                        and set to the expected value : 65535</msg>
                      <status status="PASS" starttime="20230831 19:50:43.779"
                        endtime="20230831 19:50:43.779" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.778"
                      endtime="20230831 19:50:43.779" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.780"
                        endtime="20230831 19:50:43.780" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.779"
                      endtime="20230831 19:50:43.780" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.778"
                    endtime="20230831 19:50:43.780" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.778"
                  endtime="20230831 19:50:43.780" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${key} not found in ${file}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.780"
                    endtime="20230831 19:50:43.780" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.780"
                    endtime="20230831 19:50:43.780" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.780"
                  endtime="20230831 19:50:43.780" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.778"
                endtime="20230831 19:50:43.780" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.777" endtime="20230831 19:50:43.780" />
          </iter>
          <iter>
            <var name="${key}">hard nproc</var>
            <var name="${value}">65535</var>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${clean_file}</arg>
              <arg>(?&lt;!#)\\s+\\*\\s+${key}\\s?(\\d+)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.781" level="INFO">${matches} = ['65535']</msg>
              <status status="PASS" starttime="20230831 19:50:43.780"
                endtime="20230831 19:50:43.781" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.781" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.781" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.781"
                endtime="20230831 19:50:43.781" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} value found, and set to the expected value : ${value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.782" level="INFO">hard nproc value found,
                        and set to the expected value : 65535</msg>
                      <status status="PASS" starttime="20230831 19:50:43.782"
                        endtime="20230831 19:50:43.783" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.782"
                      endtime="20230831 19:50:43.783" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.783"
                        endtime="20230831 19:50:43.783" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.783"
                      endtime="20230831 19:50:43.783" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.781"
                    endtime="20230831 19:50:43.783" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.781"
                  endtime="20230831 19:50:43.783" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${key} not found in ${file}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.783"
                    endtime="20230831 19:50:43.783" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.783"
                    endtime="20230831 19:50:43.783" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.783"
                  endtime="20230831 19:50:43.783" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.781"
                endtime="20230831 19:50:43.783" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.780" endtime="20230831 19:50:43.783" />
          </iter>
          <iter>
            <var name="${key}">soft nofile</var>
            <var name="${value}">65535</var>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${clean_file}</arg>
              <arg>(?&lt;!#)\\s+\\*\\s+${key}\\s?(\\d+)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.784" level="INFO">${matches} = ['65535']</msg>
              <status status="PASS" starttime="20230831 19:50:43.783"
                endtime="20230831 19:50:43.784" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.784" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.784" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.784"
                endtime="20230831 19:50:43.784" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} value found, and set to the expected value : ${value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.786" level="INFO">soft nofile value found,
                        and set to the expected value : 65535</msg>
                      <status status="PASS" starttime="20230831 19:50:43.785"
                        endtime="20230831 19:50:43.786" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.785"
                      endtime="20230831 19:50:43.786" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.786"
                        endtime="20230831 19:50:43.786" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.786"
                      endtime="20230831 19:50:43.786" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.785"
                    endtime="20230831 19:50:43.786" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.785"
                  endtime="20230831 19:50:43.786" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${key} not found in ${file}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.786"
                    endtime="20230831 19:50:43.786" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.786"
                    endtime="20230831 19:50:43.786" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.786"
                  endtime="20230831 19:50:43.786" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.784"
                endtime="20230831 19:50:43.786" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.783" endtime="20230831 19:50:43.786" />
          </iter>
          <iter>
            <var name="${key}">hard memlock</var>
            <var name="${value}">65536</var>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${clean_file}</arg>
              <arg>(?&lt;!#)\\s+\\*\\s+${key}\\s?(\\d+)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.787" level="INFO">${matches} = ['65536']</msg>
              <status status="PASS" starttime="20230831 19:50:43.787"
                endtime="20230831 19:50:43.787" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.787" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.788" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.787"
                endtime="20230831 19:50:43.788" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} value found, and set to the expected value : ${value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.789" level="INFO">hard memlock value found,
                        and set to the expected value : 65536</msg>
                      <status status="PASS" starttime="20230831 19:50:43.789"
                        endtime="20230831 19:50:43.789" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.788"
                      endtime="20230831 19:50:43.789" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.789"
                        endtime="20230831 19:50:43.789" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.789"
                      endtime="20230831 19:50:43.789" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.788"
                    endtime="20230831 19:50:43.789" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.788"
                  endtime="20230831 19:50:43.789" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${key} not found in ${file}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.789"
                    endtime="20230831 19:50:43.789" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.789"
                    endtime="20230831 19:50:43.789" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.789"
                  endtime="20230831 19:50:43.789" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.788"
                endtime="20230831 19:50:43.789" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.786" endtime="20230831 19:50:43.790" />
          </iter>
          <iter>
            <var name="${key}">soft memlock</var>
            <var name="${value}">65536</var>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${clean_file}</arg>
              <arg>(?&lt;!#)\\s+\\*\\s+${key}\\s?(\\d+)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.790" level="INFO">${matches} = ['65536']</msg>
              <status status="PASS" starttime="20230831 19:50:43.790"
                endtime="20230831 19:50:43.790" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.791" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.791" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.790"
                endtime="20230831 19:50:43.791" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} value found, and set to the expected value : ${value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.792" level="INFO">soft memlock value found,
                        and set to the expected value : 65536</msg>
                      <status status="PASS" starttime="20230831 19:50:43.792"
                        endtime="20230831 19:50:43.792" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.791"
                      endtime="20230831 19:50:43.792" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.792"
                        endtime="20230831 19:50:43.792" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.792"
                      endtime="20230831 19:50:43.792" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.791"
                    endtime="20230831 19:50:43.792" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.791"
                  endtime="20230831 19:50:43.792" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${key} not found in ${file}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.792"
                    endtime="20230831 19:50:43.792" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.792"
                    endtime="20230831 19:50:43.793" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.792"
                  endtime="20230831 19:50:43.793" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.791"
                endtime="20230831 19:50:43.793" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.790" endtime="20230831 19:50:43.793" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:43.777" endtime="20230831 19:50:43.793" />
        </for>
        <kw name="Should Be Empty" library="BuiltIn">
          <arg>${error_list}</arg>
          <arg>Errors found in the following paramaters : ${error_list}</arg>
          <doc>Verifies that the given item is empty.</doc>
          <msg timestamp="20230831 19:50:43.793" level="INFO">Length is 0</msg>
          <status status="PASS" starttime="20230831 19:50:43.793" endtime="20230831 19:50:43.793" />
        </kw>
        <doc>The T-SDN Core Function Pack requires system limit changes to be made
          the test will check the /etc/security/limnits.d/ncs.conf file exists and that the expected
          values
          have been provided. The expected values are stored in a dict k,v arrangement and can be
          extended
          if needed

          To handle the Regex * issue we need to preface each key with
          \*s+ should be handled in
          the KEywork but thats for the future</doc>
        <status status="PASS" starttime="20230831 19:50:43.773" endtime="20230831 19:50:43.793" />
      </test>
      <test id="s1-s1-t3" name="Verify that the limit changes are applied to the system" line="74">
        <kw name="Run" library="OperatingSystem">
          <var>${ulimit_settings}</var>
          <arg>ulimit -a</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:43.797" level="INFO">Running command 'ulimit -a
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:43.799" level="INFO">${ulimit_settings} = real-time
            non-blocking time (microseconds, -R) unlimited
            core file size (blocks, -c) 0
            data seg size (kbytes, -d) unlimited
            scheduling priority (-e) 0
            file ...</msg>
          <status status="PASS" starttime="20230831 19:50:43.795" endtime="20230831 19:50:43.799" />
        </kw>
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${ulimit_dict}</var>
          <arg>max locked memory=65536</arg>
          <arg>open files=65535</arg>
          <arg>max user processes=65535</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:43.800" level="INFO">${ulimit_dict} = {'max locked memory':
            '65536', 'open files': '65535', 'max user processes': '65535'}</msg>
          <status status="PASS" starttime="20230831 19:50:43.800" endtime="20230831 19:50:43.800" />
        </kw>
        <kw name="Create List" library="BuiltIn">
          <var>${error_list}</var>
          <doc>Returns a list containing given items.</doc>
          <msg timestamp="20230831 19:50:43.801" level="INFO">${error_list} = []</msg>
          <status status="PASS" starttime="20230831 19:50:43.801" endtime="20230831 19:50:43.801" />
        </kw>
        <for flavor="IN">
          <var>${ulimit}</var>
          <var>${ulimit_value}</var>
          <value>&amp;{ulimit_dict}</value>
          <iter>
            <var name="${ulimit}">max locked memory</var>
            <var name="${ulimit_value}">65536</var>
            <kw name="Log" library="BuiltIn">
              <arg>${ulimit}:${ulimit_value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:43.802" level="INFO">max locked memory:65536</msg>
              <status status="PASS" starttime="20230831 19:50:43.802"
                endtime="20230831 19:50:43.802" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${ulimit_settings}</arg>
              <arg>${ulimit}.*\\)\\s(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.803" level="INFO">${matches} = ['65536']</msg>
              <status status="PASS" starttime="20230831 19:50:43.802"
                endtime="20230831 19:50:43.803" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.803" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.803" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.803"
                endtime="20230831 19:50:43.803" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${ulimit_value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${ulimit} value found, and set to the expected value : ${ulimit_value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.805" level="INFO">max locked memory value
                        found, and set to the expected value : 65536</msg>
                      <status status="PASS" starttime="20230831 19:50:43.804"
                        endtime="20230831 19:50:43.805" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.804"
                      endtime="20230831 19:50:43.805" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${ulimit}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.805"
                        endtime="20230831 19:50:43.805" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.805"
                      endtime="20230831 19:50:43.805" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.804"
                    endtime="20230831 19:50:43.805" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.803"
                  endtime="20230831 19:50:43.805" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${ulimit} not found in output</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.805"
                    endtime="20230831 19:50:43.805" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${ulimit}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.805"
                    endtime="20230831 19:50:43.806" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.805"
                  endtime="20230831 19:50:43.806" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.803"
                endtime="20230831 19:50:43.806" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.801" endtime="20230831 19:50:43.806" />
          </iter>
          <iter>
            <var name="${ulimit}">open files</var>
            <var name="${ulimit_value}">65535</var>
            <kw name="Log" library="BuiltIn">
              <arg>${ulimit}:${ulimit_value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:43.806" level="INFO">open files:65535</msg>
              <status status="PASS" starttime="20230831 19:50:43.806"
                endtime="20230831 19:50:43.806" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${ulimit_settings}</arg>
              <arg>${ulimit}.*\\)\\s(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.807" level="INFO">${matches} = ['65535']</msg>
              <status status="PASS" starttime="20230831 19:50:43.806"
                endtime="20230831 19:50:43.807" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.807" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.807" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.807"
                endtime="20230831 19:50:43.807" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${ulimit_value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${ulimit} value found, and set to the expected value : ${ulimit_value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.808" level="INFO">open files value found,
                        and set to the expected value : 65535</msg>
                      <status status="PASS" starttime="20230831 19:50:43.808"
                        endtime="20230831 19:50:43.808" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.807"
                      endtime="20230831 19:50:43.808" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${ulimit}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.808"
                        endtime="20230831 19:50:43.809" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.808"
                      endtime="20230831 19:50:43.809" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.807"
                    endtime="20230831 19:50:43.809" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.807"
                  endtime="20230831 19:50:43.809" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${ulimit} not found in output</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.809"
                    endtime="20230831 19:50:43.809" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${ulimit}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.809"
                    endtime="20230831 19:50:43.809" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.809"
                  endtime="20230831 19:50:43.809" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.807"
                endtime="20230831 19:50:43.809" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.806" endtime="20230831 19:50:43.809" />
          </iter>
          <iter>
            <var name="${ulimit}">max user processes</var>
            <var name="${ulimit_value}">65535</var>
            <kw name="Log" library="BuiltIn">
              <arg>${ulimit}:${ulimit_value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:43.810" level="INFO">max user processes:65535</msg>
              <status status="PASS" starttime="20230831 19:50:43.809"
                endtime="20230831 19:50:43.810" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${ulimit_settings}</arg>
              <arg>${ulimit}.*\\)\\s(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:43.810" level="INFO">${matches} = ['65535']</msg>
              <status status="PASS" starttime="20230831 19:50:43.810"
                endtime="20230831 19:50:43.810" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:43.810" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:43.811" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:43.810"
                endtime="20230831 19:50:43.811" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <if>
                  <branch type="IF" condition="${matches[0]} == ${ulimit_value}">
                    <kw name="Log" library="BuiltIn">
                      <arg>${ulimit} value found, and set to the expected value : ${ulimit_value}</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:43.812" level="INFO">max user processes value
                        found, and set to the expected value : 65535</msg>
                      <status status="PASS" starttime="20230831 19:50:43.811"
                        endtime="20230831 19:50:43.812" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:43.811"
                      endtime="20230831 19:50:43.812" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${ulimit}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:43.812"
                        endtime="20230831 19:50:43.812" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:43.812"
                      endtime="20230831 19:50:43.812" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:43.811"
                    endtime="20230831 19:50:43.812" />
                </if>
                <status status="PASS" starttime="20230831 19:50:43.811"
                  endtime="20230831 19:50:43.812" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>${ulimit} not found in output</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.812"
                    endtime="20230831 19:50:43.812" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${ulimit}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:43.812"
                    endtime="20230831 19:50:43.812" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:43.812"
                  endtime="20230831 19:50:43.812" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:43.811"
                endtime="20230831 19:50:43.813" />
            </if>
            <status status="PASS" starttime="20230831 19:50:43.809" endtime="20230831 19:50:43.813" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:43.801" endtime="20230831 19:50:43.813" />
        </for>
        <kw name="Should Be Empty" library="BuiltIn">
          <arg>${error_list}</arg>
          <arg>Errors found in the following paramaters : ${error_list}</arg>
          <doc>Verifies that the given item is empty.</doc>
          <msg timestamp="20230831 19:50:43.813" level="INFO">Length is 0</msg>
          <status status="PASS" starttime="20230831 19:50:43.813" endtime="20230831 19:50:43.813" />
        </kw>
        <doc>This test checks that the variables applied to the /etc/security/limits.d/ncs.conf
          have been applied. This typically requires a user to disconnect and reconnect to the
          servers</doc>
        <status status="PASS" starttime="20230831 19:50:43.794" endtime="20230831 19:50:43.814" />
      </test>
      <doc>This set of tests validates the system envionment changes have been made for
        the Cisco NSO application and the T-SDN Core Function Pack the changes relate to:
        - overcommit_memory disabled across reboots
        - system limits configured as per T-SDN package documentation</doc>
      <status status="PASS" starttime="20230831 19:50:43.729" endtime="20230831 19:50:43.814" />
    </suite>
    <suite id="s1-s2" name="Security" source="/home/ubutt/robot-dev/tests/security.robot">
      <test id="s1-s2-t1" name="Verify firewalld service is enabled" line="24">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>systemctl is-enabled firewalld</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:43.824" level="INFO">Running command 'systemctl is-enabled
            firewalld 2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:43.838" level="INFO">${output} = enabled</msg>
          <status status="PASS" starttime="20230831 19:50:43.822" endtime="20230831 19:50:43.838" />
        </kw>
        <kw name="Should Be Equal As Strings" library="BuiltIn">
          <arg>${output}</arg>
          <arg>enabled</arg>
          <doc>Fails if objects are unequal after converting them to strings.</doc>
          <status status="PASS" starttime="20230831 19:50:43.838" endtime="20230831 19:50:43.839" />
        </kw>
        <doc>The firewall service should not be disabled on reboot</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:43.821" endtime="20230831 19:50:43.839" />
      </test>
      <test id="s1-s2-t2" name="Verify NSO ports are configured in the firewalld" line="30">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>sudo firewall-cmd --list-all</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:43.843" level="INFO">Running command 'sudo firewall-cmd
            --list-all 2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.360" level="INFO">${output} = public (active)
            target: default
            icmp-block-inversion: no
            interfaces: ens33
            sources:
            services: cockpit dhcpv6-client ssh
            ports: 22/tcp 4570/tcp 2022/tcp 2023/tcp 2024/tcp 8080/tcp 8888/tcp...</msg>
          <status status="PASS" starttime="20230831 19:50:43.841" endtime="20230831 19:50:47.360" />
        </kw>
        <for flavor="IN">
          <var>${port}</var>
          <value>@{nso_fw_ports}</value>
          <iter>
            <var name="${port}">2022</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${port}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.362"
                endtime="20230831 19:50:47.362" />
            </kw>
            <kw name="Log" library="BuiltIn">
              <arg>${port}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.362" level="INFO">2022</msg>
              <status status="PASS" starttime="20230831 19:50:47.362"
                endtime="20230831 19:50:47.362" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.361" endtime="20230831 19:50:47.362" />
          </iter>
          <iter>
            <var name="${port}">2024</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${port}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.363"
                endtime="20230831 19:50:47.363" />
            </kw>
            <kw name="Log" library="BuiltIn">
              <arg>${port}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.363" level="INFO">2024</msg>
              <status status="PASS" starttime="20230831 19:50:47.363"
                endtime="20230831 19:50:47.363" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.363" endtime="20230831 19:50:47.363" />
          </iter>
          <iter>
            <var name="${port}">8080</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${port}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.364"
                endtime="20230831 19:50:47.364" />
            </kw>
            <kw name="Log" library="BuiltIn">
              <arg>${port}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.364" level="INFO">8080</msg>
              <status status="PASS" starttime="20230831 19:50:47.364"
                endtime="20230831 19:50:47.364" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.363" endtime="20230831 19:50:47.364" />
          </iter>
          <iter>
            <var name="${port}">8888</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${port}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.364"
                endtime="20230831 19:50:47.365" />
            </kw>
            <kw name="Log" library="BuiltIn">
              <arg>${port}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.365" level="INFO">8888</msg>
              <status status="PASS" starttime="20230831 19:50:47.365"
                endtime="20230831 19:50:47.365" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.364" endtime="20230831 19:50:47.365" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:47.361" endtime="20230831 19:50:47.365" />
        </for>
        <doc>Check that the neccesary tcp/udp ports are open for nso the
          ports are listed in the list "nso_fw_ports" defined in the global Variables
          List includes the following : ['2022', '2024', '8080', '8888']</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:43.840" endtime="20230831 19:50:47.365" />
      </test>
      <test id="s1-s2-t3" name="Verify authselect profile sssd-vf is created" line="41">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>authselect list</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.369" level="INFO">Running command 'authselect list
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.375" level="INFO">${output} = - minimal Local users only
            for minimal installations
            - sssd Enable SSSD for system authentication (also for local users only)
            - winbind Enable winbind for system authenticat...</msg>
          <status status="PASS" starttime="20230831 19:50:47.366" endtime="20230831 19:50:47.375" />
        </kw>
        <kw name="Should Contain" library="BuiltIn">
          <arg>${output}</arg>
          <arg>sssd-vf</arg>
          <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
          <status status="PASS" starttime="20230831 19:50:47.375" endtime="20230831 19:50:47.376" />
        </kw>
        <doc>Verify that a custom sssd profile has been created</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:47.366" endtime="20230831 19:50:47.376" />
      </test>
      <test id="s1-s2-t4" name="Verify expected authselect profile is active" line="47">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>authselect current -r</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.380" level="INFO">Running command 'authselect current -r
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.384" level="INFO">${output} = custom/sssd-vf
            with-faillock without-nullok</msg>
          <status status="PASS" starttime="20230831 19:50:47.378" endtime="20230831 19:50:47.384" />
        </kw>
        <kw name="Set Variable" library="BuiltIn">
          <var>${profile}</var>
          <arg>custom/sssd-vf</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.385" level="INFO">${profile} = custom/sssd-vf</msg>
          <status status="PASS" starttime="20230831 19:50:47.385" endtime="20230831 19:50:47.385" />
        </kw>
        <if>
          <branch type="IF" condition="'${profile}' in '${output}'">
            <kw name="Pass Execution" library="BuiltIn">
              <arg>Current Profile is correct - sssd-vf</arg>
              <doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
              <msg timestamp="20230831 19:50:47.387" level="INFO">Execution passed with message:
                Current Profile is correct - sssd-vf</msg>
              <status status="PASS" starttime="20230831 19:50:47.386"
                endtime="20230831 19:50:47.387" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.386" endtime="20230831 19:50:47.387" />
          </branch>
          <branch type="ELSE">
            <kw name="Fail" library="BuiltIn">
              <arg>Incorrect, or No, Profile active</arg>
              <doc>Fails the test with the given message and optionally alters its tags.</doc>
              <status status="NOT RUN" starttime="20230831 19:50:47.387"
                endtime="20230831 19:50:47.387" />
            </kw>
            <status status="NOT RUN" starttime="20230831 19:50:47.387"
              endtime="20230831 19:50:47.387" />
          </branch>
          <status status="PASS" starttime="20230831 19:50:47.386" endtime="20230831 19:50:47.387" />
        </if>
        <doc>This runs the command "authselect current -r" and returns the current active profile
          the test checks that this matches the expected value of custom/sssd-vf</doc>
        <status status="PASS" starttime="20230831 19:50:47.377" endtime="20230831 19:50:47.387">Current
          Profile is correct - sssd-vf</status>
      </test>
      <test id="s1-s2-t5" name="Verify that the required PAM Modules are enabled" line="54">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>authselect current</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.391" level="INFO">Running command 'authselect current
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.395" level="INFO">${output} = Profile ID: custom/sssd-vf
            Enabled features:
            - with-faillock
            - without-nullok</msg>
          <status status="PASS" starttime="20230831 19:50:47.389" endtime="20230831 19:50:47.395" />
        </kw>
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${module_status_dict}</var>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:47.397" level="INFO">${module_status_dict} = {}</msg>
          <status status="PASS" starttime="20230831 19:50:47.396" endtime="20230831 19:50:47.397" />
        </kw>
        <kw name="Log" library="BuiltIn">
          <arg>${output}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:47.397" level="INFO">Profile ID: custom/sssd-vf
            Enabled features:
            - with-faillock
            - without-nullok</msg>
          <status status="PASS" starttime="20230831 19:50:47.397" endtime="20230831 19:50:47.397" />
        </kw>
        <for flavor="IN">
          <var>${module}</var>
          <value>@{pam_modules}</value>
          <iter>
            <var name="${module}">with-faillock</var>
            <kw name="Run Keyword And Ignore Error" library="BuiltIn">
              <var>${regex_result}</var>
              <var>${regex_message}</var>
              <arg>Should Match Regexp</arg>
              <arg>${output}</arg>
              <arg>${module}</arg>
              <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
              <kw name="Should Match Regexp" library="BuiltIn">
                <arg>${output}</arg>
                <arg>${module}</arg>
                <doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
                <status status="PASS" starttime="20230831 19:50:47.398"
                  endtime="20230831 19:50:47.399" />
              </kw>
              <msg timestamp="20230831 19:50:47.399" level="INFO">${regex_result} = PASS</msg>
              <msg timestamp="20230831 19:50:47.399" level="INFO">${regex_message} = with-faillock</msg>
              <status status="PASS" starttime="20230831 19:50:47.398"
                endtime="20230831 19:50:47.399" />
            </kw>
            <kw name="Set To Dictionary" library="Collections">
              <arg>${module_status_dict}</arg>
              <arg>${module}</arg>
              <arg>${regex_result}</arg>
              <doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
              <status status="PASS" starttime="20230831 19:50:47.399"
                endtime="20230831 19:50:47.399" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.398" endtime="20230831 19:50:47.399" />
          </iter>
          <iter>
            <var name="${module}">without-nullok</var>
            <kw name="Run Keyword And Ignore Error" library="BuiltIn">
              <var>${regex_result}</var>
              <var>${regex_message}</var>
              <arg>Should Match Regexp</arg>
              <arg>${output}</arg>
              <arg>${module}</arg>
              <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
              <kw name="Should Match Regexp" library="BuiltIn">
                <arg>${output}</arg>
                <arg>${module}</arg>
                <doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
                <status status="PASS" starttime="20230831 19:50:47.400"
                  endtime="20230831 19:50:47.400" />
              </kw>
              <msg timestamp="20230831 19:50:47.400" level="INFO">${regex_result} = PASS</msg>
              <msg timestamp="20230831 19:50:47.400" level="INFO">${regex_message} = without-nullok</msg>
              <status status="PASS" starttime="20230831 19:50:47.399"
                endtime="20230831 19:50:47.400" />
            </kw>
            <kw name="Set To Dictionary" library="Collections">
              <arg>${module_status_dict}</arg>
              <arg>${module}</arg>
              <arg>${regex_result}</arg>
              <doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
              <status status="PASS" starttime="20230831 19:50:47.400"
                endtime="20230831 19:50:47.401" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.399" endtime="20230831 19:50:47.401" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:47.397" endtime="20230831 19:50:47.401" />
        </for>
        <kw name="Log" library="BuiltIn">
          <arg>${module_status_dict}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:47.401" level="INFO">{'with-faillock': 'PASS',
            'without-nullok': 'PASS'}</msg>
          <status status="PASS" starttime="20230831 19:50:47.401" endtime="20230831 19:50:47.401" />
        </kw>
        <kw name="Run Keyword And Ignore Error" library="BuiltIn">
          <var>${status}</var>
          <var>${status_message}</var>
          <arg>Dictionary Should Not Contain Value</arg>
          <arg>${module_status_dict}</arg>
          <arg>FAIL</arg>
          <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
          <kw name="Dictionary Should Not Contain Value" library="Collections">
            <arg>${module_status_dict}</arg>
            <arg>FAIL</arg>
            <doc>Fails if ``value`` is found from ``dictionary``.</doc>
            <status status="PASS" starttime="20230831 19:50:47.402" endtime="20230831 19:50:47.402" />
          </kw>
          <msg timestamp="20230831 19:50:47.402" level="INFO">${status} = PASS</msg>
          <msg timestamp="20230831 19:50:47.402" level="INFO">${status_message} = None</msg>
          <status status="PASS" starttime="20230831 19:50:47.401" endtime="20230831 19:50:47.402" />
        </kw>
        <kw name="Log" library="BuiltIn">
          <arg>${status}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:47.402" level="INFO">PASS</msg>
          <status status="PASS" starttime="20230831 19:50:47.402" endtime="20230831 19:50:47.403" />
        </kw>
        <if>
          <branch type="IF" condition="'FAIL' in '${status}'">
            <kw name="Fail" library="BuiltIn">
              <arg>Expected PAM enabled-feature not found</arg>
              <doc>Fails the test with the given message and optionally alters its tags.</doc>
              <status status="NOT RUN" starttime="20230831 19:50:47.403"
                endtime="20230831 19:50:47.403" />
            </kw>
            <status status="NOT RUN" starttime="20230831 19:50:47.403"
              endtime="20230831 19:50:47.403" />
          </branch>
          <status status="PASS" starttime="20230831 19:50:47.403" endtime="20230831 19:50:47.403" />
        </if>
        <doc>This test will verify that without-nullok and with-faillock modules are activated
          the test will run the command "autheselect current" which returns the enabled features in
          the
          format:

          Profile ID: custom/sssd-vf
          Enabled features:
          - with-faillock
          - without-nullok

          Checks made against the following features: ['with-faillock', 'without-nullok']</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:47.388" endtime="20230831 19:50:47.403" />
      </test>
      <test id="s1-s2-t6" name="Check the password-auth file has been updated" line="79">
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${check_dict}</var>
          <arg>auth.*pam_unix.so={if not "without-nullok":nullok} try_first_pass</arg>
          <arg>password.*pam_pwquality.so=try_first_pass local_users_only</arg>
          <arg>password.*pam_unix.so sha512 shadow={if not "without-nullok":nullok} try_first_pass
            use_authtok</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:47.405" level="INFO">${check_dict} = {'auth.*pam_unix.so':
            '{if not "without-nullok":nullok} try_first_pass', 'password.*pam_pwquality.so':
            'try_first_pass local_users_only', 'password.*pam_unix.so sha512 shadow': '{if not
            "without-nullo...</msg>
          <status status="PASS" starttime="20230831 19:50:47.405" endtime="20230831 19:50:47.405" />
        </kw>
        <kw name="Get File" library="OperatingSystem">
          <var>${password_auth}</var>
          <arg>/etc/authselect/custom/sssd-vf/password-auth</arg>
          <doc>Returns the contents of a specified file.</doc>
          <msg timestamp="20230831 19:50:47.406" level="INFO" html="true">
            Getting file '&lt;a
            href="file:///etc/authselect/custom/sssd-vf/password-auth"&gt;/etc/authselect/custom/sssd-vf/password-auth&lt;/a&gt;'.</msg>
          <msg timestamp="20230831 19:50:47.406" level="INFO">${password_auth} = auth required
            pam_env.so
            auth required pam_faildelay.so delay=2000000
            auth required ...</msg>
          <status status="PASS" starttime="20230831 19:50:47.405" endtime="20230831 19:50:47.406" />
        </kw>
        <kw name="Create List" library="BuiltIn">
          <var>${error_list}</var>
          <doc>Returns a list containing given items.</doc>
          <msg timestamp="20230831 19:50:47.406" level="INFO">${error_list} = []</msg>
          <status status="PASS" starttime="20230831 19:50:47.406" endtime="20230831 19:50:47.406" />
        </kw>
        <for flavor="IN">
          <var>${key}</var>
          <var>${value}</var>
          <value>&amp;{check_dict}</value>
          <iter>
            <var name="${key}">auth.*pam_unix.so</var>
            <var name="${value}">{if not "without-nullok":nullok} try_first_pass</var>
            <kw name="Log" library="BuiltIn">
              <arg>${key} : ${value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.407" level="INFO">auth.*pam_unix.so : {if not
                "without-nullok":nullok} try_first_pass</msg>
              <status status="PASS" starttime="20230831 19:50:47.407"
                endtime="20230831 19:50:47.407" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${password_auth}</arg>
              <arg>\\s?${key}\\s?(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:47.408" level="INFO">${matches} = ['{if not
                "without-nullok":nullok} try_first_pass']</msg>
              <status status="PASS" starttime="20230831 19:50:47.407"
                endtime="20230831 19:50:47.408" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:47.408" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:47.408" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:47.408"
                endtime="20230831 19:50:47.408" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <kw name="Log" library="BuiltIn">
                  <arg>Match Found match ${key} : ${matches}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.409" level="INFO">Match Found match
                    auth.*pam_unix.so : ['{if not "without-nullok":nullok} try_first_pass']</msg>
                  <status status="PASS" starttime="20230831 19:50:47.409"
                    endtime="20230831 19:50:47.409" />
                </kw>
                <kw name="Log" library="BuiltIn">
                  <arg>${matches[0]}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.410" level="INFO">{if not
                    "without-nullok":nullok} try_first_pass</msg>
                  <status status="PASS" starttime="20230831 19:50:47.409"
                    endtime="20230831 19:50:47.410" />
                </kw>
                <if>
                  <branch type="IF" condition="'${value}' == '${matches[0]}'">
                    <kw name="Log" library="BuiltIn">
                      <arg>'${key}' Configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:47.411" level="INFO">'auth.*pam_unix.so'
                        Configured as expected</msg>
                      <status status="PASS" starttime="20230831 19:50:47.411"
                        endtime="20230831 19:50:47.411" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:47.410"
                      endtime="20230831 19:50:47.411" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Not configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.411"
                        endtime="20230831 19:50:47.411" />
                    </kw>
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.411"
                        endtime="20230831 19:50:47.411" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:47.411"
                      endtime="20230831 19:50:47.411" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:47.410"
                    endtime="20230831 19:50:47.411" />
                </if>
                <status status="PASS" starttime="20230831 19:50:47.408"
                  endtime="20230831 19:50:47.411" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>No Match found for : ${key}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.411"
                    endtime="20230831 19:50:47.411" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.412"
                    endtime="20230831 19:50:47.412" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:47.411"
                  endtime="20230831 19:50:47.412" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:47.408"
                endtime="20230831 19:50:47.412" />
            </if>
            <status status="PASS" starttime="20230831 19:50:47.407" endtime="20230831 19:50:47.412" />
          </iter>
          <iter>
            <var name="${key}">password.*pam_pwquality.so</var>
            <var name="${value}">try_first_pass local_users_only</var>
            <kw name="Log" library="BuiltIn">
              <arg>${key} : ${value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.412" level="INFO">password.*pam_pwquality.so :
                try_first_pass local_users_only</msg>
              <status status="PASS" starttime="20230831 19:50:47.412"
                endtime="20230831 19:50:47.412" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${password_auth}</arg>
              <arg>\\s?${key}\\s?(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:47.413" level="INFO">${matches} = ['try_first_pass
                local_users_only']</msg>
              <status status="PASS" starttime="20230831 19:50:47.412"
                endtime="20230831 19:50:47.413" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:47.413" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:47.413" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:47.413"
                endtime="20230831 19:50:47.413" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <kw name="Log" library="BuiltIn">
                  <arg>Match Found match ${key} : ${matches}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.414" level="INFO">Match Found match
                    password.*pam_pwquality.so : ['try_first_pass local_users_only']</msg>
                  <status status="PASS" starttime="20230831 19:50:47.414"
                    endtime="20230831 19:50:47.414" />
                </kw>
                <kw name="Log" library="BuiltIn">
                  <arg>${matches[0]}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.415" level="INFO">try_first_pass
                    local_users_only</msg>
                  <status status="PASS" starttime="20230831 19:50:47.414"
                    endtime="20230831 19:50:47.415" />
                </kw>
                <if>
                  <branch type="IF" condition="'${value}' == '${matches[0]}'">
                    <kw name="Log" library="BuiltIn">
                      <arg>'${key}' Configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:47.416" level="INFO">'password.*pam_pwquality.so'
                        Configured as expected</msg>
                      <status status="PASS" starttime="20230831 19:50:47.416"
                        endtime="20230831 19:50:47.416" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:47.415"
                      endtime="20230831 19:50:47.416" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Not configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.417"
                        endtime="20230831 19:50:47.417" />
                    </kw>
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.417"
                        endtime="20230831 19:50:47.417" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:47.416"
                      endtime="20230831 19:50:47.417" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:47.415"
                    endtime="20230831 19:50:47.417" />
                </if>
                <status status="PASS" starttime="20230831 19:50:47.413"
                  endtime="20230831 19:50:47.417" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>No Match found for : ${key}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.417"
                    endtime="20230831 19:50:47.417" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.417"
                    endtime="20230831 19:50:47.417" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:47.417"
                  endtime="20230831 19:50:47.417" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:47.413"
                endtime="20230831 19:50:47.417" />
            </if>
            <status status="PASS" starttime="20230831 19:50:47.412" endtime="20230831 19:50:47.417" />
          </iter>
          <iter>
            <var name="${key}">password.*pam_unix.so sha512 shadow</var>
            <var name="${value}">{if not "without-nullok":nullok} try_first_pass use_authtok</var>
            <kw name="Log" library="BuiltIn">
              <arg>${key} : ${value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.418" level="INFO">password.*pam_unix.so sha512
                shadow : {if not "without-nullok":nullok} try_first_pass use_authtok</msg>
              <status status="PASS" starttime="20230831 19:50:47.417"
                endtime="20230831 19:50:47.418" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${password_auth}</arg>
              <arg>\\s?${key}\\s?(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:47.418" level="INFO">${matches} = ['{if not
                "without-nullok":nullok} try_first_pass use_authtok']</msg>
              <status status="PASS" starttime="20230831 19:50:47.418"
                endtime="20230831 19:50:47.418" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:47.419" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:47.419" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:47.419"
                endtime="20230831 19:50:47.419" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <kw name="Log" library="BuiltIn">
                  <arg>Match Found match ${key} : ${matches}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.419" level="INFO">Match Found match
                    password.*pam_unix.so sha512 shadow : ['{if not "without-nullok":nullok}
                    try_first_pass use_authtok']</msg>
                  <status status="PASS" starttime="20230831 19:50:47.419"
                    endtime="20230831 19:50:47.419" />
                </kw>
                <kw name="Log" library="BuiltIn">
                  <arg>${matches[0]}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.420" level="INFO">{if not
                    "without-nullok":nullok} try_first_pass use_authtok</msg>
                  <status status="PASS" starttime="20230831 19:50:47.420"
                    endtime="20230831 19:50:47.420" />
                </kw>
                <if>
                  <branch type="IF" condition="'${value}' == '${matches[0]}'">
                    <kw name="Log" library="BuiltIn">
                      <arg>'${key}' Configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:47.421" level="INFO">'password.*pam_unix.so
                        sha512 shadow' Configured as expected</msg>
                      <status status="PASS" starttime="20230831 19:50:47.421"
                        endtime="20230831 19:50:47.421" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:47.420"
                      endtime="20230831 19:50:47.421" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Not configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.421"
                        endtime="20230831 19:50:47.421" />
                    </kw>
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.422"
                        endtime="20230831 19:50:47.422" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:47.421"
                      endtime="20230831 19:50:47.422" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:47.420"
                    endtime="20230831 19:50:47.422" />
                </if>
                <status status="PASS" starttime="20230831 19:50:47.419"
                  endtime="20230831 19:50:47.422" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>No Match found for : ${key}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.422"
                    endtime="20230831 19:50:47.422" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.422"
                    endtime="20230831 19:50:47.422" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:47.422"
                  endtime="20230831 19:50:47.422" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:47.419"
                endtime="20230831 19:50:47.422" />
            </if>
            <status status="PASS" starttime="20230831 19:50:47.417" endtime="20230831 19:50:47.422" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:47.406" endtime="20230831 19:50:47.422" />
        </for>
        <kw name="Log" library="BuiltIn">
          <arg>${error_list}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:47.423" level="INFO">[]</msg>
          <status status="PASS" starttime="20230831 19:50:47.422" endtime="20230831 19:50:47.423" />
        </kw>
        <kw name="Should Be Empty" library="BuiltIn">
          <arg>${error_list}</arg>
          <arg>Errors found in the following modules ${error_list}</arg>
          <doc>Verifies that the given item is empty.</doc>
          <msg timestamp="20230831 19:50:47.423" level="INFO">Length is 0</msg>
          <status status="PASS" starttime="20230831 19:50:47.423" endtime="20230831 19:50:47.423" />
        </kw>
        <doc>Read the /etc/authselect/custom/sssd-vf/password-auth file
          and check that the values have been modified the check takes a dict with
          the module search string and the expected configuration as a k,v Pairs
          the check then searches the file for the key and evaluates the value</doc>
        <status status="PASS" starttime="20230831 19:50:47.404" endtime="20230831 19:50:47.423" />
      </test>
      <test id="s1-s2-t7" name="Check the system-auth file has been updated" line="113">
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${check_dict}</var>
          <arg>auth.*pam_unix.so={if not "without-nullok":nullok} try_first_pass</arg>
          <arg>password.*pam_pwquality.so=try_first_pass local_users_only enforce-for-root retry=3
            remember=12</arg>
          <arg>password.*pam_unix.so sha512 shadow={if not "without-nullok":nullok} try_first_pass
            use_authtok remember=12</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:47.425" level="INFO">${check_dict} = {'auth.*pam_unix.so':
            '{if not "without-nullok":nullok} try_first_pass', 'password.*pam_pwquality.so':
            'try_first_pass local_users_only enforce-for-root retry=3 remember=12',
            'password.*pam_unix.so sh...</msg>
          <status status="PASS" starttime="20230831 19:50:47.425" endtime="20230831 19:50:47.425" />
        </kw>
        <kw name="Get File" library="OperatingSystem">
          <var>${password_auth}</var>
          <arg>/etc/authselect/custom/sssd-vf/system-auth</arg>
          <doc>Returns the contents of a specified file.</doc>
          <msg timestamp="20230831 19:50:47.425" level="INFO" html="true">
            Getting file '&lt;a
            href="file:///etc/authselect/custom/sssd-vf/system-auth"&gt;/etc/authselect/custom/sssd-vf/system-auth&lt;/a&gt;'.</msg>
          <msg timestamp="20230831 19:50:47.426" level="INFO">${password_auth} = {imply
            "with-smartcard" if "with-smartcard-required"}
            auth required pam_env.so
            auth required pam_faildelay.so dela...</msg>
          <status status="PASS" starttime="20230831 19:50:47.425" endtime="20230831 19:50:47.426" />
        </kw>
        <kw name="Create List" library="BuiltIn">
          <var>${error_list}</var>
          <doc>Returns a list containing given items.</doc>
          <msg timestamp="20230831 19:50:47.426" level="INFO">${error_list} = []</msg>
          <status status="PASS" starttime="20230831 19:50:47.426" endtime="20230831 19:50:47.426" />
        </kw>
        <for flavor="IN">
          <var>${key}</var>
          <var>${value}</var>
          <value>&amp;{check_dict}</value>
          <iter>
            <var name="${key}">auth.*pam_unix.so</var>
            <var name="${value}">{if not "without-nullok":nullok} try_first_pass</var>
            <kw name="Log" library="BuiltIn">
              <arg>${key} : ${value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.427" level="INFO">auth.*pam_unix.so : {if not
                "without-nullok":nullok} try_first_pass</msg>
              <status status="PASS" starttime="20230831 19:50:47.427"
                endtime="20230831 19:50:47.427" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${password_auth}</arg>
              <arg>\\s?${key}\\s?(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:47.427" level="INFO">${matches} = ['{if not
                "without-nullok":nullok} try_first_pass']</msg>
              <status status="PASS" starttime="20230831 19:50:47.427"
                endtime="20230831 19:50:47.427" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:47.428" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:47.428" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:47.427"
                endtime="20230831 19:50:47.428" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <kw name="Log" library="BuiltIn">
                  <arg>Match Found match ${key} : ${matches}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.428" level="INFO">Match Found match
                    auth.*pam_unix.so : ['{if not "without-nullok":nullok} try_first_pass']</msg>
                  <status status="PASS" starttime="20230831 19:50:47.428"
                    endtime="20230831 19:50:47.428" />
                </kw>
                <kw name="Log" library="BuiltIn">
                  <arg>${matches[0]}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.429" level="INFO">{if not
                    "without-nullok":nullok} try_first_pass</msg>
                  <status status="PASS" starttime="20230831 19:50:47.428"
                    endtime="20230831 19:50:47.429" />
                </kw>
                <if>
                  <branch type="IF" condition="'${value}' == '${matches[0]}'">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:47.430" level="INFO">auth.*pam_unix.so
                        Configured as expected</msg>
                      <status status="PASS" starttime="20230831 19:50:47.430"
                        endtime="20230831 19:50:47.430" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:47.429"
                      endtime="20230831 19:50:47.430" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Not configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.430"
                        endtime="20230831 19:50:47.430" />
                    </kw>
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.431"
                        endtime="20230831 19:50:47.431" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:47.430"
                      endtime="20230831 19:50:47.431" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:47.429"
                    endtime="20230831 19:50:47.431" />
                </if>
                <status status="PASS" starttime="20230831 19:50:47.428"
                  endtime="20230831 19:50:47.431" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>No Match found for : ${key}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.431"
                    endtime="20230831 19:50:47.431" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.431"
                    endtime="20230831 19:50:47.431" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:47.431"
                  endtime="20230831 19:50:47.431" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:47.428"
                endtime="20230831 19:50:47.431" />
            </if>
            <status status="PASS" starttime="20230831 19:50:47.426" endtime="20230831 19:50:47.431" />
          </iter>
          <iter>
            <var name="${key}">password.*pam_pwquality.so</var>
            <var name="${value}">try_first_pass local_users_only enforce-for-root retry=3
              remember=12</var>
            <kw name="Log" library="BuiltIn">
              <arg>${key} : ${value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.432" level="INFO">password.*pam_pwquality.so :
                try_first_pass local_users_only enforce-for-root retry=3 remember=12</msg>
              <status status="PASS" starttime="20230831 19:50:47.431"
                endtime="20230831 19:50:47.432" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${password_auth}</arg>
              <arg>\\s?${key}\\s?(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:47.432" level="INFO">${matches} = ['try_first_pass
                local_users_only enforce-for-root retry=3 remember=12']</msg>
              <status status="PASS" starttime="20230831 19:50:47.432"
                endtime="20230831 19:50:47.432" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:47.432" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:47.433" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:47.432"
                endtime="20230831 19:50:47.433" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <kw name="Log" library="BuiltIn">
                  <arg>Match Found match ${key} : ${matches}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.433" level="INFO">Match Found match
                    password.*pam_pwquality.so : ['try_first_pass local_users_only enforce-for-root
                    retry=3 remember=12']</msg>
                  <status status="PASS" starttime="20230831 19:50:47.433"
                    endtime="20230831 19:50:47.433" />
                </kw>
                <kw name="Log" library="BuiltIn">
                  <arg>${matches[0]}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.434" level="INFO">try_first_pass
                    local_users_only enforce-for-root retry=3 remember=12</msg>
                  <status status="PASS" starttime="20230831 19:50:47.433"
                    endtime="20230831 19:50:47.434" />
                </kw>
                <if>
                  <branch type="IF" condition="'${value}' == '${matches[0]}'">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:47.435" level="INFO">password.*pam_pwquality.so
                        Configured as expected</msg>
                      <status status="PASS" starttime="20230831 19:50:47.435"
                        endtime="20230831 19:50:47.435" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:47.434"
                      endtime="20230831 19:50:47.435" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Not configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.435"
                        endtime="20230831 19:50:47.435" />
                    </kw>
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.435"
                        endtime="20230831 19:50:47.435" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:47.435"
                      endtime="20230831 19:50:47.435" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:47.434"
                    endtime="20230831 19:50:47.435" />
                </if>
                <status status="PASS" starttime="20230831 19:50:47.433"
                  endtime="20230831 19:50:47.435" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>No Match found for : ${key}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.436"
                    endtime="20230831 19:50:47.436" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.436"
                    endtime="20230831 19:50:47.436" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:47.436"
                  endtime="20230831 19:50:47.436" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:47.433"
                endtime="20230831 19:50:47.436" />
            </if>
            <status status="PASS" starttime="20230831 19:50:47.431" endtime="20230831 19:50:47.436" />
          </iter>
          <iter>
            <var name="${key}">password.*pam_unix.so sha512 shadow</var>
            <var name="${value}">{if not "without-nullok":nullok} try_first_pass use_authtok
              remember=12</var>
            <kw name="Log" library="BuiltIn">
              <arg>${key} : ${value}</arg>
              <doc>Logs the given message with the given level.</doc>
              <msg timestamp="20230831 19:50:47.436" level="INFO">password.*pam_unix.so sha512
                shadow : {if not "without-nullok":nullok} try_first_pass use_authtok remember=12</msg>
              <status status="PASS" starttime="20230831 19:50:47.436"
                endtime="20230831 19:50:47.436" />
            </kw>
            <kw name="Get Regexp Matches" library="String">
              <var>${matches}</var>
              <arg>${password_auth}</arg>
              <arg>\\s?${key}\\s?(.*)</arg>
              <arg>1</arg>
              <doc>Returns a list of all non-overlapping matches in the given string.</doc>
              <msg timestamp="20230831 19:50:47.437" level="INFO">${matches} = ['{if not
                "without-nullok":nullok} try_first_pass use_authtok remember=12']</msg>
              <status status="PASS" starttime="20230831 19:50:47.436"
                endtime="20230831 19:50:47.437" />
            </kw>
            <kw name="Get Length" library="BuiltIn">
              <var>${len}</var>
              <arg>${matches}</arg>
              <doc>Returns and logs the length of the given item as an integer.</doc>
              <msg timestamp="20230831 19:50:47.437" level="INFO">Length is 1</msg>
              <msg timestamp="20230831 19:50:47.437" level="INFO">${len} = 1</msg>
              <status status="PASS" starttime="20230831 19:50:47.437"
                endtime="20230831 19:50:47.437" />
            </kw>
            <if>
              <branch type="IF" condition="${len} &gt; 0">
                <kw name="Log" library="BuiltIn">
                  <arg>Match Found match ${key} : ${matches}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.438" level="INFO">Match Found match
                    password.*pam_unix.so sha512 shadow : ['{if not "without-nullok":nullok}
                    try_first_pass use_authtok remember=12']</msg>
                  <status status="PASS" starttime="20230831 19:50:47.438"
                    endtime="20230831 19:50:47.438" />
                </kw>
                <kw name="Log" library="BuiltIn">
                  <arg>${matches[0]}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <msg timestamp="20230831 19:50:47.439" level="INFO">{if not
                    "without-nullok":nullok} try_first_pass use_authtok remember=12</msg>
                  <status status="PASS" starttime="20230831 19:50:47.438"
                    endtime="20230831 19:50:47.439" />
                </kw>
                <if>
                  <branch type="IF" condition="'${value}' == '${matches[0]}'">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <msg timestamp="20230831 19:50:47.440" level="INFO">password.*pam_unix.so
                        sha512 shadow Configured as expected</msg>
                      <status status="PASS" starttime="20230831 19:50:47.440"
                        endtime="20230831 19:50:47.440" />
                    </kw>
                    <status status="PASS" starttime="20230831 19:50:47.439"
                      endtime="20230831 19:50:47.440" />
                  </branch>
                  <branch type="ELSE">
                    <kw name="Log" library="BuiltIn">
                      <arg>${key} Not configured as expected</arg>
                      <doc>Logs the given message with the given level.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.440"
                        endtime="20230831 19:50:47.440" />
                    </kw>
                    <kw name="Append To List" library="Collections">
                      <arg>${error_list}</arg>
                      <arg>${key}</arg>
                      <doc>Adds ``values`` to the end of ``list``.</doc>
                      <status status="NOT RUN" starttime="20230831 19:50:47.440"
                        endtime="20230831 19:50:47.440" />
                    </kw>
                    <status status="NOT RUN" starttime="20230831 19:50:47.440"
                      endtime="20230831 19:50:47.440" />
                  </branch>
                  <status status="PASS" starttime="20230831 19:50:47.439"
                    endtime="20230831 19:50:47.440" />
                </if>
                <status status="PASS" starttime="20230831 19:50:47.437"
                  endtime="20230831 19:50:47.440" />
              </branch>
              <branch type="ELSE">
                <kw name="Log" library="BuiltIn">
                  <arg>No Match found for : ${key}</arg>
                  <doc>Logs the given message with the given level.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.440"
                    endtime="20230831 19:50:47.440" />
                </kw>
                <kw name="Append To List" library="Collections">
                  <arg>${error_list}</arg>
                  <arg>${key}</arg>
                  <doc>Adds ``values`` to the end of ``list``.</doc>
                  <status status="NOT RUN" starttime="20230831 19:50:47.441"
                    endtime="20230831 19:50:47.441" />
                </kw>
                <status status="NOT RUN" starttime="20230831 19:50:47.440"
                  endtime="20230831 19:50:47.441" />
              </branch>
              <status status="PASS" starttime="20230831 19:50:47.437"
                endtime="20230831 19:50:47.441" />
            </if>
            <status status="PASS" starttime="20230831 19:50:47.436" endtime="20230831 19:50:47.441" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:47.426" endtime="20230831 19:50:47.441" />
        </for>
        <kw name="Log" library="BuiltIn">
          <arg>${error_list}</arg>
          <doc>Logs the given message with the given level.</doc>
          <msg timestamp="20230831 19:50:47.441" level="INFO">[]</msg>
          <status status="PASS" starttime="20230831 19:50:47.441" endtime="20230831 19:50:47.441" />
        </kw>
        <kw name="Should Be Empty" library="BuiltIn">
          <arg>${error_list}</arg>
          <arg>Errors found in the following modules ${error_list}</arg>
          <doc>Verifies that the given item is empty.</doc>
          <msg timestamp="20230831 19:50:47.442" level="INFO">Length is 0</msg>
          <status status="PASS" starttime="20230831 19:50:47.441" endtime="20230831 19:50:47.442" />
        </kw>
        <doc>Read the /etc/authselect/custom/sssd-vf/system-auth file
          and check that the values have been modified the check takes a dict with
          the module search string and the expected configuration as a k,v Pairs
          the check then searches the file for the key and evaluates the value</doc>
        <status status="PASS" starttime="20230831 19:50:47.424" endtime="20230831 19:50:47.442" />
      </test>
      <test id="s1-s2-t8" name="Verify that faillock.conf has been modifed" line="144">
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${dict}</var>
          <arg>fail_interval=1800</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:47.443" level="INFO">${dict} = {'fail_interval': '1800'}</msg>
          <status status="PASS" starttime="20230831 19:50:47.443" endtime="20230831 19:50:47.443" />
        </kw>
        <kw name="Set Variable" library="BuiltIn">
          <var>${file_path}</var>
          <arg>/etc/security/faillock.conf</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.444" level="INFO">${file_path} =
            /etc/security/faillock.conf</msg>
          <status status="PASS" starttime="20230831 19:50:47.443" endtime="20230831 19:50:47.444" />
        </kw>
        <kw name="Get Regexp Matches For Key Value Pairs in File" library="keywords">
          <arg>${dict}</arg>
          <arg>${file_path}</arg>
          <doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
          <kw name="Log" library="BuiltIn">
            <arg>${dict}</arg>
            <doc>Logs the given message with the given level.</doc>
            <msg timestamp="20230831 19:50:47.444" level="INFO">{'fail_interval': '1800'}</msg>
            <status status="PASS" starttime="20230831 19:50:47.444" endtime="20230831 19:50:47.444" />
          </kw>
          <kw name="Log" library="BuiltIn">
            <arg>${file_path}</arg>
            <doc>Logs the given message with the given level.</doc>
            <msg timestamp="20230831 19:50:47.445" level="INFO">/etc/security/faillock.conf</msg>
            <status status="PASS" starttime="20230831 19:50:47.445" endtime="20230831 19:50:47.445" />
          </kw>
          <kw name="Get File" library="OperatingSystem">
            <var>${file}</var>
            <arg>${file_path}</arg>
            <doc>Returns the contents of a specified file.</doc>
            <msg timestamp="20230831 19:50:47.445" level="INFO" html="true">Getting file '&lt;a
              href="file:///etc/security/faillock.conf"&gt;/etc/security/faillock.conf&lt;/a&gt;'.</msg>
            <msg timestamp="20230831 19:50:47.445" level="INFO">${file} = # Configuration for
              locking the user after multiple failed
              # authentication attempts.
              #
              # The directory where the user files with the failure records are kept.
              # The default is /var/run/faillock.
              # di...</msg>
            <status status="PASS" starttime="20230831 19:50:47.445" endtime="20230831 19:50:47.445" />
          </kw>
          <kw name="Create List" library="BuiltIn">
            <var>${errors_list}</var>
            <doc>Returns a list containing given items.</doc>
            <msg timestamp="20230831 19:50:47.446" level="INFO">${errors_list} = []</msg>
            <status status="PASS" starttime="20230831 19:50:47.445" endtime="20230831 19:50:47.446" />
          </kw>
          <for flavor="IN">
            <var>${key}</var>
            <var>${value}</var>
            <value>&amp;{dict}</value>
            <iter>
              <var name="${key}">fail_interval</var>
              <var name="${value}">1800</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.447" level="INFO">${match} = ['1800']</msg>
                <status status="PASS" starttime="20230831 19:50:47.446"
                  endtime="20230831 19:50:47.447" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.447" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.447" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.447"
                  endtime="20230831 19:50:47.447" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.449" level="INFO">${match_val} = 1800</msg>
                    <status status="PASS" starttime="20230831 19:50:47.447"
                      endtime="20230831 19:50:47.449" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.449"
                        endtime="20230831 19:50:47.449" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.449" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.449" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.449"
                      endtime="20230831 19:50:47.449" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.450"
                      endtime="20230831 19:50:47.450" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.447"
                    endtime="20230831 19:50:47.450" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.450"
                      endtime="20230831 19:50:47.450" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.450"
                    endtime="20230831 19:50:47.450" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.447"
                  endtime="20230831 19:50:47.450" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.446"
                endtime="20230831 19:50:47.450" />
            </iter>
            <status status="PASS" starttime="20230831 19:50:47.446" endtime="20230831 19:50:47.450" />
          </for>
          <kw name="Should Be Empty" library="BuiltIn">
            <arg>${errors_list}</arg>
            <arg>Errors found in values for ${errors_list}</arg>
            <doc>Verifies that the given item is empty.</doc>
            <msg timestamp="20230831 19:50:47.450" level="INFO">Length is 0</msg>
            <status status="PASS" starttime="20230831 19:50:47.450" endtime="20230831 19:50:47.450" />
          </kw>
          <status status="PASS" starttime="20230831 19:50:47.444" endtime="20230831 19:50:47.451" />
        </kw>
        <doc>We are required to modify the fail_interval to be = 1800 seconds</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:47.442" endtime="20230831 19:50:47.451" />
      </test>
      <test id="s1-s2-t9" name="Verify that pwquality.conf has been modified" line="151">
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${dict}</var>
          <arg>minlen=8</arg>
          <arg>dcredit=-1</arg>
          <arg>ucredit=-1</arg>
          <arg>lcredit=-1</arg>
          <arg>ocredit=-1</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:47.452" level="INFO">${dict} = {'minlen': '8', 'dcredit':
            '-1', 'ucredit': '-1', 'lcredit': '-1', 'ocredit': '-1'}</msg>
          <status status="PASS" starttime="20230831 19:50:47.452" endtime="20230831 19:50:47.452" />
        </kw>
        <kw name="Set Variable" library="BuiltIn">
          <var>${file_path}</var>
          <arg>/etc/security/pwquality.conf</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.453" level="INFO">${file_path} =
            /etc/security/pwquality.conf</msg>
          <status status="PASS" starttime="20230831 19:50:47.452" endtime="20230831 19:50:47.453" />
        </kw>
        <kw name="Get Regexp Matches For Key Value Pairs in File" library="keywords">
          <arg>${dict}</arg>
          <arg>${file_path}</arg>
          <doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
          <kw name="Log" library="BuiltIn">
            <arg>${dict}</arg>
            <doc>Logs the given message with the given level.</doc>
            <msg timestamp="20230831 19:50:47.453" level="INFO">{'minlen': '8', 'dcredit': '-1',
              'ucredit': '-1', 'lcredit': '-1', 'ocredit': '-1'}</msg>
            <status status="PASS" starttime="20230831 19:50:47.453" endtime="20230831 19:50:47.453" />
          </kw>
          <kw name="Log" library="BuiltIn">
            <arg>${file_path}</arg>
            <doc>Logs the given message with the given level.</doc>
            <msg timestamp="20230831 19:50:47.454" level="INFO">/etc/security/pwquality.conf</msg>
            <status status="PASS" starttime="20230831 19:50:47.453" endtime="20230831 19:50:47.454" />
          </kw>
          <kw name="Get File" library="OperatingSystem">
            <var>${file}</var>
            <arg>${file_path}</arg>
            <doc>Returns the contents of a specified file.</doc>
            <msg timestamp="20230831 19:50:47.454" level="INFO" html="true">Getting file '&lt;a
              href="file:///etc/security/pwquality.conf"&gt;/etc/security/pwquality.conf&lt;/a&gt;'.</msg>
            <msg timestamp="20230831 19:50:47.454" level="INFO">${file} = # Configuration for
              systemwide password quality limits
              # Defaults:
              #
              # Number of characters in the new password that must not be present in the
              # old password.
              # difok = 1
              #
              # Minimum acceptable size ...</msg>
            <status status="PASS" starttime="20230831 19:50:47.454" endtime="20230831 19:50:47.454" />
          </kw>
          <kw name="Create List" library="BuiltIn">
            <var>${errors_list}</var>
            <doc>Returns a list containing given items.</doc>
            <msg timestamp="20230831 19:50:47.455" level="INFO">${errors_list} = []</msg>
            <status status="PASS" starttime="20230831 19:50:47.454" endtime="20230831 19:50:47.455" />
          </kw>
          <for flavor="IN">
            <var>${key}</var>
            <var>${value}</var>
            <value>&amp;{dict}</value>
            <iter>
              <var name="${key}">minlen</var>
              <var name="${value}">8</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.456" level="INFO">${match} = ['8']</msg>
                <status status="PASS" starttime="20230831 19:50:47.455"
                  endtime="20230831 19:50:47.456" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.456" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.456" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.456"
                  endtime="20230831 19:50:47.456" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.457" level="INFO">${match_val} = 8</msg>
                    <status status="PASS" starttime="20230831 19:50:47.456"
                      endtime="20230831 19:50:47.457" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.458"
                        endtime="20230831 19:50:47.458" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.458" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.458" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.458"
                      endtime="20230831 19:50:47.458" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.458"
                      endtime="20230831 19:50:47.459" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.456"
                    endtime="20230831 19:50:47.459" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.459"
                      endtime="20230831 19:50:47.459" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.459"
                    endtime="20230831 19:50:47.459" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.456"
                  endtime="20230831 19:50:47.459" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.455"
                endtime="20230831 19:50:47.459" />
            </iter>
            <iter>
              <var name="${key}">dcredit</var>
              <var name="${value}">-1</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.460" level="INFO">${match} = ['-1']</msg>
                <status status="PASS" starttime="20230831 19:50:47.459"
                  endtime="20230831 19:50:47.460" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.460" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.460" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.460"
                  endtime="20230831 19:50:47.460" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.462" level="INFO">${match_val} = -1</msg>
                    <status status="PASS" starttime="20230831 19:50:47.461"
                      endtime="20230831 19:50:47.462" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.462"
                        endtime="20230831 19:50:47.462" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.463" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.463" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.462"
                      endtime="20230831 19:50:47.463" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.463"
                      endtime="20230831 19:50:47.463" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.460"
                    endtime="20230831 19:50:47.463" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.463"
                      endtime="20230831 19:50:47.463" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.463"
                    endtime="20230831 19:50:47.463" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.460"
                  endtime="20230831 19:50:47.463" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.459"
                endtime="20230831 19:50:47.463" />
            </iter>
            <iter>
              <var name="${key}">ucredit</var>
              <var name="${value}">-1</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.464" level="INFO">${match} = ['-1']</msg>
                <status status="PASS" starttime="20230831 19:50:47.463"
                  endtime="20230831 19:50:47.464" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.464" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.464" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.464"
                  endtime="20230831 19:50:47.464" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.466" level="INFO">${match_val} = -1</msg>
                    <status status="PASS" starttime="20230831 19:50:47.465"
                      endtime="20230831 19:50:47.466" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.466"
                        endtime="20230831 19:50:47.467" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.467" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.467" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.466"
                      endtime="20230831 19:50:47.467" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.467"
                      endtime="20230831 19:50:47.467" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.465"
                    endtime="20230831 19:50:47.467" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.467"
                      endtime="20230831 19:50:47.467" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.467"
                    endtime="20230831 19:50:47.467" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.465"
                  endtime="20230831 19:50:47.467" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.463"
                endtime="20230831 19:50:47.467" />
            </iter>
            <iter>
              <var name="${key}">lcredit</var>
              <var name="${value}">-1</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.468" level="INFO">${match} = ['-1']</msg>
                <status status="PASS" starttime="20230831 19:50:47.468"
                  endtime="20230831 19:50:47.468" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.469" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.469" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.468"
                  endtime="20230831 19:50:47.469" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.470" level="INFO">${match_val} = -1</msg>
                    <status status="PASS" starttime="20230831 19:50:47.469"
                      endtime="20230831 19:50:47.470" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.470"
                        endtime="20230831 19:50:47.471" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.471" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.471" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.470"
                      endtime="20230831 19:50:47.471" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.471"
                      endtime="20230831 19:50:47.471" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.469"
                    endtime="20230831 19:50:47.471" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.471"
                      endtime="20230831 19:50:47.471" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.471"
                    endtime="20230831 19:50:47.471" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.469"
                  endtime="20230831 19:50:47.471" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.468"
                endtime="20230831 19:50:47.472" />
            </iter>
            <iter>
              <var name="${key}">ocredit</var>
              <var name="${value}">-1</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.472" level="INFO">${match} = ['-1']</msg>
                <status status="PASS" starttime="20230831 19:50:47.472"
                  endtime="20230831 19:50:47.472" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.473" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.473" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.472"
                  endtime="20230831 19:50:47.473" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.474" level="INFO">${match_val} = -1</msg>
                    <status status="PASS" starttime="20230831 19:50:47.473"
                      endtime="20230831 19:50:47.474" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.475"
                        endtime="20230831 19:50:47.475" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.475" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.475" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.474"
                      endtime="20230831 19:50:47.475" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.475"
                      endtime="20230831 19:50:47.475" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.473"
                    endtime="20230831 19:50:47.475" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.476"
                      endtime="20230831 19:50:47.476" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.475"
                    endtime="20230831 19:50:47.476" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.473"
                  endtime="20230831 19:50:47.476" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.472"
                endtime="20230831 19:50:47.476" />
            </iter>
            <status status="PASS" starttime="20230831 19:50:47.455" endtime="20230831 19:50:47.476" />
          </for>
          <kw name="Should Be Empty" library="BuiltIn">
            <arg>${errors_list}</arg>
            <arg>Errors found in values for ${errors_list}</arg>
            <doc>Verifies that the given item is empty.</doc>
            <msg timestamp="20230831 19:50:47.476" level="INFO">Length is 0</msg>
            <status status="PASS" starttime="20230831 19:50:47.476" endtime="20230831 19:50:47.476" />
          </kw>
          <status status="PASS" starttime="20230831 19:50:47.453" endtime="20230831 19:50:47.476" />
        </kw>
        <doc>We are required to modify the /etc/security/pwquality.conf
          to ensure only complex passwords are allowed following values should be used:
          - minlen = 8
          - dcredit = -1
          - ucredit = -1
          - lcredit = -1
          - ocredit = -1</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:47.451" endtime="20230831 19:50:47.476" />
      </test>
      <test id="s1-s2-t10" name="Verify login.defs has been modifed" line="164">
        <kw name="Create Dictionary" library="BuiltIn">
          <var>${dict}</var>
          <arg>PASS_MAX_DAYS=90</arg>
          <arg>PASS_MIN_DAYS=1</arg>
          <arg>PASS_MIN_LEN=5</arg>
          <arg>PASS_WARN_AGE=5</arg>
          <doc>Creates and returns a dictionary based on the given ``items``.</doc>
          <msg timestamp="20230831 19:50:47.478" level="INFO">${dict} = {'PASS_MAX_DAYS': '90',
            'PASS_MIN_DAYS': '1', 'PASS_MIN_LEN': '5', 'PASS_WARN_AGE': '5'}</msg>
          <status status="PASS" starttime="20230831 19:50:47.478" endtime="20230831 19:50:47.478" />
        </kw>
        <kw name="Set Variable" library="BuiltIn">
          <var>${file_path}</var>
          <arg>/etc/login.defs</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.478" level="INFO">${file_path} = /etc/login.defs</msg>
          <status status="PASS" starttime="20230831 19:50:47.478" endtime="20230831 19:50:47.478" />
        </kw>
        <kw name="Get Regexp Matches For Key Value Pairs in File" library="keywords">
          <arg>${dict}</arg>
          <arg>${file_path}</arg>
          <doc>Iterates through Dict and searches for Key,Value pairs in file</doc>
          <kw name="Log" library="BuiltIn">
            <arg>${dict}</arg>
            <doc>Logs the given message with the given level.</doc>
            <msg timestamp="20230831 19:50:47.479" level="INFO">{'PASS_MAX_DAYS': '90',
              'PASS_MIN_DAYS': '1', 'PASS_MIN_LEN': '5', 'PASS_WARN_AGE': '5'}</msg>
            <status status="PASS" starttime="20230831 19:50:47.479" endtime="20230831 19:50:47.479" />
          </kw>
          <kw name="Log" library="BuiltIn">
            <arg>${file_path}</arg>
            <doc>Logs the given message with the given level.</doc>
            <msg timestamp="20230831 19:50:47.480" level="INFO">/etc/login.defs</msg>
            <status status="PASS" starttime="20230831 19:50:47.479" endtime="20230831 19:50:47.480" />
          </kw>
          <kw name="Get File" library="OperatingSystem">
            <var>${file}</var>
            <arg>${file_path}</arg>
            <doc>Returns the contents of a specified file.</doc>
            <msg timestamp="20230831 19:50:47.480" level="INFO" html="true">Getting file '&lt;a
              href="file:///etc/login.defs"&gt;/etc/login.defs&lt;/a&gt;'.</msg>
            <msg timestamp="20230831 19:50:47.480" level="INFO">${file} = #
              # Please note that the parameters in this configuration file control the
              # behavior of the tools from the shadow-utils component. None of these
              # tools uses the PAM mechanism, and the utilities that...</msg>
            <status status="PASS" starttime="20230831 19:50:47.480" endtime="20230831 19:50:47.480" />
          </kw>
          <kw name="Create List" library="BuiltIn">
            <var>${errors_list}</var>
            <doc>Returns a list containing given items.</doc>
            <msg timestamp="20230831 19:50:47.480" level="INFO">${errors_list} = []</msg>
            <status status="PASS" starttime="20230831 19:50:47.480" endtime="20230831 19:50:47.480" />
          </kw>
          <for flavor="IN">
            <var>${key}</var>
            <var>${value}</var>
            <value>&amp;{dict}</value>
            <iter>
              <var name="${key}">PASS_MAX_DAYS</var>
              <var name="${value}">90</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.482" level="INFO">${match} = ['90']</msg>
                <status status="PASS" starttime="20230831 19:50:47.481"
                  endtime="20230831 19:50:47.482" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.482" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.482" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.482"
                  endtime="20230831 19:50:47.482" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.483" level="INFO">${match_val} = 90</msg>
                    <status status="PASS" starttime="20230831 19:50:47.482"
                      endtime="20230831 19:50:47.483" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.484"
                        endtime="20230831 19:50:47.484" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.484" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.484" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.484"
                      endtime="20230831 19:50:47.484" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.484"
                      endtime="20230831 19:50:47.485" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.482"
                    endtime="20230831 19:50:47.485" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.485"
                      endtime="20230831 19:50:47.485" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.485"
                    endtime="20230831 19:50:47.485" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.482"
                  endtime="20230831 19:50:47.485" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.481"
                endtime="20230831 19:50:47.485" />
            </iter>
            <iter>
              <var name="${key}">PASS_MIN_DAYS</var>
              <var name="${value}">1</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.486" level="INFO">${match} = ['1']</msg>
                <status status="PASS" starttime="20230831 19:50:47.485"
                  endtime="20230831 19:50:47.486" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.486" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.486" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.486"
                  endtime="20230831 19:50:47.486" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.488" level="INFO">${match_val} = 1</msg>
                    <status status="PASS" starttime="20230831 19:50:47.487"
                      endtime="20230831 19:50:47.488" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.488"
                        endtime="20230831 19:50:47.488" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.489" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.489" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.488"
                      endtime="20230831 19:50:47.489" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.489"
                      endtime="20230831 19:50:47.489" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.486"
                    endtime="20230831 19:50:47.489" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.489"
                      endtime="20230831 19:50:47.489" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.489"
                    endtime="20230831 19:50:47.489" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.486"
                  endtime="20230831 19:50:47.489" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.485"
                endtime="20230831 19:50:47.489" />
            </iter>
            <iter>
              <var name="${key}">PASS_MIN_LEN</var>
              <var name="${value}">5</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.490" level="INFO">${match} = ['5']</msg>
                <status status="PASS" starttime="20230831 19:50:47.490"
                  endtime="20230831 19:50:47.490" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.491" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.491" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.490"
                  endtime="20230831 19:50:47.491" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.492" level="INFO">${match_val} = 5</msg>
                    <status status="PASS" starttime="20230831 19:50:47.491"
                      endtime="20230831 19:50:47.492" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.493"
                        endtime="20230831 19:50:47.493" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.493" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.493" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.492"
                      endtime="20230831 19:50:47.493" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.493"
                      endtime="20230831 19:50:47.493" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.491"
                    endtime="20230831 19:50:47.493" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.494"
                      endtime="20230831 19:50:47.494" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.493"
                    endtime="20230831 19:50:47.494" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.491"
                  endtime="20230831 19:50:47.494" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.489"
                endtime="20230831 19:50:47.494" />
            </iter>
            <iter>
              <var name="${key}">PASS_WARN_AGE</var>
              <var name="${value}">5</var>
              <kw name="Get Regexp Matches" library="String">
                <var>${match}</var>
                <arg>${file}</arg>
                <arg>(?m)^\\s?${key}\\s*=?\\s?(-?\\d+)</arg>
                <arg>1</arg>
                <doc>Returns a list of all non-overlapping matches in the given string.</doc>
                <msg timestamp="20230831 19:50:47.495" level="INFO">${match} = ['5']</msg>
                <status status="PASS" starttime="20230831 19:50:47.494"
                  endtime="20230831 19:50:47.495" />
              </kw>
              <kw name="Get Length" library="BuiltIn">
                <var>${number_of_results}</var>
                <arg>${match}</arg>
                <doc>Returns and logs the length of the given item as an integer.</doc>
                <msg timestamp="20230831 19:50:47.495" level="INFO">Length is 1</msg>
                <msg timestamp="20230831 19:50:47.495" level="INFO">${number_of_results} = 1</msg>
                <status status="PASS" starttime="20230831 19:50:47.495"
                  endtime="20230831 19:50:47.495" />
              </kw>
              <if>
                <branch type="IF" condition="${number_of_results} &gt; 0">
                  <kw name="Set Variable If" library="BuiltIn">
                    <var>${match_val}</var>
                    <arg>${match[0]}</arg>
                    <arg>${match[0]}</arg>
                    <doc>Sets variable based on the given condition.</doc>
                    <msg timestamp="20230831 19:50:47.496" level="INFO">${match_val} = 5</msg>
                    <status status="PASS" starttime="20230831 19:50:47.495"
                      endtime="20230831 19:50:47.497" />
                  </kw>
                  <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                    <var>${status}</var>
                    <var>${status_message}</var>
                    <arg>Should Be Equal As Integers</arg>
                    <arg>${match_val}</arg>
                    <arg>${value}</arg>
                    <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                    <kw name="Should Be Equal As Integers" library="BuiltIn">
                      <arg>${match_val}</arg>
                      <arg>${value}</arg>
                      <doc>Fails if objects are unequal after converting them to integers.</doc>
                      <status status="PASS" starttime="20230831 19:50:47.497"
                        endtime="20230831 19:50:47.497" />
                    </kw>
                    <msg timestamp="20230831 19:50:47.497" level="INFO">${status} = PASS</msg>
                    <msg timestamp="20230831 19:50:47.497" level="INFO">${status_message} = None</msg>
                    <status status="PASS" starttime="20230831 19:50:47.497"
                      endtime="20230831 19:50:47.497" />
                  </kw>
                  <kw name="Run Keyword If" library="BuiltIn">
                    <arg>'${status}' != 'PASS'</arg>
                    <arg>Append To List</arg>
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                    <status status="PASS" starttime="20230831 19:50:47.497"
                      endtime="20230831 19:50:47.498" />
                  </kw>
                  <status status="PASS" starttime="20230831 19:50:47.495"
                    endtime="20230831 19:50:47.498" />
                </branch>
                <branch type="ELSE">
                  <kw name="Append To List" library="Collections">
                    <arg>${errors_list}</arg>
                    <arg>${key}</arg>
                    <doc>Adds ``values`` to the end of ``list``.</doc>
                    <status status="NOT RUN" starttime="20230831 19:50:47.498"
                      endtime="20230831 19:50:47.498" />
                  </kw>
                  <status status="NOT RUN" starttime="20230831 19:50:47.498"
                    endtime="20230831 19:50:47.498" />
                </branch>
                <status status="PASS" starttime="20230831 19:50:47.495"
                  endtime="20230831 19:50:47.498" />
              </if>
              <status status="PASS" starttime="20230831 19:50:47.494"
                endtime="20230831 19:50:47.498" />
            </iter>
            <status status="PASS" starttime="20230831 19:50:47.481" endtime="20230831 19:50:47.498" />
          </for>
          <kw name="Should Be Empty" library="BuiltIn">
            <arg>${errors_list}</arg>
            <arg>Errors found in values for ${errors_list}</arg>
            <doc>Verifies that the given item is empty.</doc>
            <msg timestamp="20230831 19:50:47.498" level="INFO">Length is 0</msg>
            <status status="PASS" starttime="20230831 19:50:47.498" endtime="20230831 19:50:47.498" />
          </kw>
          <status status="PASS" starttime="20230831 19:50:47.479" endtime="20230831 19:50:47.499" />
        </kw>
        <doc>Password expiration values need to be modified in the /etc/login.defs file the
          default values need to be modified to meet the following requirements:
          - PASS_MIN_LEN 5
          - PASS_MAX_DAYS 90
          - PASS_MIN_DAYS 1
          - PASS_WARN_AGE 5</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:47.477" endtime="20230831 19:50:47.499" />
      </test>
      <test id="s1-s2-t11" name="Verify the user account inavtive days value has been modified"
        line="177">
        <kw name="Get File" library="OperatingSystem">
          <var>${useradd_conf}</var>
          <arg>/etc/default/useradd</arg>
          <doc>Returns the contents of a specified file.</doc>
          <msg timestamp="20230831 19:50:47.500" level="INFO" html="true">Getting file '&lt;a
            href="file:///etc/default/useradd"&gt;/etc/default/useradd&lt;/a&gt;'.</msg>
          <msg timestamp="20230831 19:50:47.500" level="INFO">${useradd_conf} = # useradd defaults
            file
            GROUP=100
            HOME=/home
            INACTIVE=90
            # INACTIVE=-1
            EXPIRE=
            SHELL=/bin/bash
            SKEL=/etc/skel
            CREATE_MAIL_SPOOL=yes

          </msg>
          <status status="PASS" starttime="20230831 19:50:47.500" endtime="20230831 19:50:47.500" />
        </kw>
        <kw name="Get Regexp Matches" library="String">
          <var>${match}</var>
          <arg>${useradd_conf}</arg>
          <arg>(?m)^\\s?INACTIVE\\s?\=\\s?(-?\\d+)</arg>
          <arg>1</arg>
          <doc>Returns a list of all non-overlapping matches in the given string.</doc>
          <msg timestamp="20230831 19:50:47.501" level="INFO">${match} = ['90']</msg>
          <status status="PASS" starttime="20230831 19:50:47.500" endtime="20230831 19:50:47.501" />
        </kw>
        <kw name="Get From List" library="Collections">
          <var>${match_val}</var>
          <arg>${match}</arg>
          <arg>0</arg>
          <doc>Returns the value specified with an ``index`` from ``list``.</doc>
          <msg timestamp="20230831 19:50:47.501" level="INFO">${match_val} = 90</msg>
          <status status="PASS" starttime="20230831 19:50:47.501" endtime="20230831 19:50:47.501" />
        </kw>
        <if>
          <branch type="IF" condition="${match_val} != 90">
            <kw name="Fail" library="BuiltIn">
              <arg>INACTIVE not set to expected value</arg>
              <doc>Fails the test with the given message and optionally alters its tags.</doc>
              <status status="NOT RUN" starttime="20230831 19:50:47.502"
                endtime="20230831 19:50:47.502" />
            </kw>
            <status status="NOT RUN" starttime="20230831 19:50:47.502"
              endtime="20230831 19:50:47.502" />
          </branch>
          <status status="PASS" starttime="20230831 19:50:47.502" endtime="20230831 19:50:47.502" />
        </if>
        <doc>The default value of INACTIVE in /etc/defaults/useradd is set to -1 which
          equates to no inactvity time out for user. We need to change this value to 90 as per
          request from Customer</doc>
        <tag>security</tag>
        <status status="PASS" starttime="20230831 19:50:47.499" endtime="20230831 19:50:47.502" />
      </test>
      <doc>The following tests verify the security configuration that are expected to be implemented
        on the redhat servers that will host the Cisco NSO application
        - firewall Service Configrations
        - autheselect custome profile creation and modifications
        - PAM Configrations
        - Password quality modifications
        Refer to the SCDP documentation to address any failed tests.</doc>
      <status status="PASS" starttime="20230831 19:50:43.816" endtime="20230831 19:50:47.503" />
    </suite>
    <suite id="s1-s3" name="System" source="/home/ubutt/robot-dev/tests/system.robot">
      <test id="s1-s3-t1" name="Verify dependency packages are installed" line="29">
        <kw name="Set Variable" library="BuiltIn">
          <var>${command}</var>
          <arg>rpm -q</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.510" level="INFO">${command} = rpm -q</msg>
          <status status="PASS" starttime="20230831 19:50:47.509" endtime="20230831 19:50:47.510" />
        </kw>
        <kw name="Set Variable" library="BuiltIn">
          <var>${check_string}</var>
          <arg>not installed</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.510" level="INFO">${check_string} = not installed</msg>
          <status status="PASS" starttime="20230831 19:50:47.510" endtime="20230831 19:50:47.510" />
        </kw>
        <kw name="Iterate Over List and Run Command" library="keywords">
          <arg>${package_list}</arg>
          <arg>${command}</arg>
          <arg>${check_string}</arg>
          <doc>Iterates through list and runs the provided command, checking that the error string
            is not in the response</doc>
          <kw name="Log" library="BuiltIn">
            <arg>${list}</arg>
            <arg>DEBUG</arg>
            <doc>Logs the given message with the given level.</doc>
            <status status="PASS" starttime="20230831 19:50:47.511" endtime="20230831 19:50:47.511" />
          </kw>
          <kw name="Create List" library="BuiltIn">
            <var>${errors_list}</var>
            <doc>Returns a list containing given items.</doc>
            <msg timestamp="20230831 19:50:47.511" level="INFO">${errors_list} = []</msg>
            <status status="PASS" starttime="20230831 19:50:47.511" endtime="20230831 19:50:47.511" />
          </kw>
          <for flavor="IN">
            <var>${item}</var>
            <value>@{list}</value>
            <iter>
              <var name="${item}">ant</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.512" level="INFO">${run_cmd} = rpm -q ant</msg>
                <status status="PASS" starttime="20230831 19:50:47.512"
                  endtime="20230831 19:50:47.512" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.513" level="INFO">rpm -q ant</msg>
                <status status="PASS" starttime="20230831 19:50:47.513"
                  endtime="20230831 19:50:47.513" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.515" level="INFO">Running command 'rpm -q ant
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.528" level="INFO">${output} =
                  ant-1.10.9-7.el9.noarch</msg>
                <status status="PASS" starttime="20230831 19:50:47.513"
                  endtime="20230831 19:50:47.528" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.529"
                    endtime="20230831 19:50:47.529" />
                </kw>
                <msg timestamp="20230831 19:50:47.529" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.529" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.528"
                  endtime="20230831 19:50:47.529" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.530"
                  endtime="20230831 19:50:47.530" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.511"
                endtime="20230831 19:50:47.530" />
            </iter>
            <iter>
              <var name="${item}">java-11-openjdk</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.530" level="INFO">${run_cmd} = rpm -q
                  java-11-openjdk</msg>
                <status status="PASS" starttime="20230831 19:50:47.530"
                  endtime="20230831 19:50:47.530" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.531" level="INFO">rpm -q java-11-openjdk</msg>
                <status status="PASS" starttime="20230831 19:50:47.531"
                  endtime="20230831 19:50:47.531" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.533" level="INFO">Running command 'rpm -q
                  java-11-openjdk 2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.546" level="INFO">${output} =
                  java-11-openjdk-11.0.20.0.8-3.el9.x86_64</msg>
                <status status="PASS" starttime="20230831 19:50:47.531"
                  endtime="20230831 19:50:47.546" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.547"
                    endtime="20230831 19:50:47.547" />
                </kw>
                <msg timestamp="20230831 19:50:47.547" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.547" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.546"
                  endtime="20230831 19:50:47.547" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.548"
                  endtime="20230831 19:50:47.548" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.530"
                endtime="20230831 19:50:47.548" />
            </iter>
            <iter>
              <var name="${item}">python3</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.549" level="INFO">${run_cmd} = rpm -q python3</msg>
                <status status="PASS" starttime="20230831 19:50:47.548"
                  endtime="20230831 19:50:47.549" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.549" level="INFO">rpm -q python3</msg>
                <status status="PASS" starttime="20230831 19:50:47.549"
                  endtime="20230831 19:50:47.549" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.551" level="INFO">Running command 'rpm -q python3
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.563" level="INFO">${output} =
                  python3-3.9.16-1.el9_2.1.x86_64</msg>
                <status status="PASS" starttime="20230831 19:50:47.549"
                  endtime="20230831 19:50:47.563" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.564"
                    endtime="20230831 19:50:47.565" />
                </kw>
                <msg timestamp="20230831 19:50:47.565" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.565" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.564"
                  endtime="20230831 19:50:47.565" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.565"
                  endtime="20230831 19:50:47.565" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.548"
                endtime="20230831 19:50:47.565" />
            </iter>
            <iter>
              <var name="${item}">openssl</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.566" level="INFO">${run_cmd} = rpm -q openssl</msg>
                <status status="PASS" starttime="20230831 19:50:47.566"
                  endtime="20230831 19:50:47.566" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.566" level="INFO">rpm -q openssl</msg>
                <status status="PASS" starttime="20230831 19:50:47.566"
                  endtime="20230831 19:50:47.566" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.569" level="INFO">Running command 'rpm -q openssl
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.582" level="INFO">${output} =
                  openssl-3.0.7-17.el9_2.x86_64</msg>
                <status status="PASS" starttime="20230831 19:50:47.567"
                  endtime="20230831 19:50:47.582" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.583"
                    endtime="20230831 19:50:47.583" />
                </kw>
                <msg timestamp="20230831 19:50:47.583" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.583" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.582"
                  endtime="20230831 19:50:47.583" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.584"
                  endtime="20230831 19:50:47.584" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.566"
                endtime="20230831 19:50:47.584" />
            </iter>
            <iter>
              <var name="${item}">pam</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.584" level="INFO">${run_cmd} = rpm -q pam</msg>
                <status status="PASS" starttime="20230831 19:50:47.584"
                  endtime="20230831 19:50:47.585" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.585" level="INFO">rpm -q pam</msg>
                <status status="PASS" starttime="20230831 19:50:47.585"
                  endtime="20230831 19:50:47.585" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.587" level="INFO">Running command 'rpm -q pam
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.601" level="INFO">${output} =
                  pam-1.5.1-14.el9.x86_64</msg>
                <status status="PASS" starttime="20230831 19:50:47.585"
                  endtime="20230831 19:50:47.601" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.602"
                    endtime="20230831 19:50:47.602" />
                </kw>
                <msg timestamp="20230831 19:50:47.602" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.602" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.601"
                  endtime="20230831 19:50:47.602" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.603"
                  endtime="20230831 19:50:47.603" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.584"
                endtime="20230831 19:50:47.603" />
            </iter>
            <iter>
              <var name="${item}">python3-setuptools</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.603" level="INFO">${run_cmd} = rpm -q
                  python3-setuptools</msg>
                <status status="PASS" starttime="20230831 19:50:47.603"
                  endtime="20230831 19:50:47.603" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.604" level="INFO">rpm -q python3-setuptools</msg>
                <status status="PASS" starttime="20230831 19:50:47.604"
                  endtime="20230831 19:50:47.604" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.606" level="INFO">Running command 'rpm -q
                  python3-setuptools 2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.620" level="INFO">${output} =
                  python3-setuptools-53.0.0-12.el9.noarch</msg>
                <status status="PASS" starttime="20230831 19:50:47.604"
                  endtime="20230831 19:50:47.620" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.621"
                    endtime="20230831 19:50:47.621" />
                </kw>
                <msg timestamp="20230831 19:50:47.622" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.622" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.620"
                  endtime="20230831 19:50:47.622" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.622"
                  endtime="20230831 19:50:47.622" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.603"
                endtime="20230831 19:50:47.622" />
            </iter>
            <status status="PASS" starttime="20230831 19:50:47.511" endtime="20230831 19:50:47.622" />
          </for>
          <kw name="Should Be Empty" library="BuiltIn">
            <arg>${errors_list}</arg>
            <arg>Item(S) Not Found : ${errors_list}</arg>
            <doc>Verifies that the given item is empty.</doc>
            <msg timestamp="20230831 19:50:47.623" level="INFO">Length is 0</msg>
            <status status="PASS" starttime="20230831 19:50:47.622" endtime="20230831 19:50:47.623" />
          </kw>
          <status status="PASS" starttime="20230831 19:50:47.510" endtime="20230831 19:50:47.623" />
        </kw>
        <doc>As above without break on first failure</doc>
        <tag>os</tag>
        <tag>packages</tag>
        <status status="PASS" starttime="20230831 19:50:47.509" endtime="20230831 19:50:47.623" />
      </test>
      <test id="s1-s3-t2" name="Verify required utilities are available" line="36">
        <kw name="Set Variable" library="BuiltIn">
          <var>${command}</var>
          <arg>which</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.625" level="INFO">${command} = which</msg>
          <status status="PASS" starttime="20230831 19:50:47.624" endtime="20230831 19:50:47.625" />
        </kw>
        <kw name="Set Variable" library="BuiltIn">
          <var>${check_string}</var>
          <arg>/usr/bin/which: no</arg>
          <doc>Returns the given values which can then be assigned to a variables.</doc>
          <msg timestamp="20230831 19:50:47.625" level="INFO">${check_string} = /usr/bin/which: no</msg>
          <status status="PASS" starttime="20230831 19:50:47.625" endtime="20230831 19:50:47.625" />
        </kw>
        <kw name="Iterate Over List and Run Command" library="keywords">
          <arg>${utility_list}</arg>
          <arg>${command}</arg>
          <arg>${check_string}</arg>
          <doc>Iterates through list and runs the provided command, checking that the error string
            is not in the response</doc>
          <kw name="Log" library="BuiltIn">
            <arg>${list}</arg>
            <arg>DEBUG</arg>
            <doc>Logs the given message with the given level.</doc>
            <status status="PASS" starttime="20230831 19:50:47.626" endtime="20230831 19:50:47.626" />
          </kw>
          <kw name="Create List" library="BuiltIn">
            <var>${errors_list}</var>
            <doc>Returns a list containing given items.</doc>
            <msg timestamp="20230831 19:50:47.626" level="INFO">${errors_list} = []</msg>
            <status status="PASS" starttime="20230831 19:50:47.626" endtime="20230831 19:50:47.626" />
          </kw>
          <for flavor="IN">
            <var>${item}</var>
            <value>@{list}</value>
            <iter>
              <var name="${item}">tar</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.627" level="INFO">${run_cmd} = which tar</msg>
                <status status="PASS" starttime="20230831 19:50:47.627"
                  endtime="20230831 19:50:47.627" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.627" level="INFO">which tar</msg>
                <status status="PASS" starttime="20230831 19:50:47.627"
                  endtime="20230831 19:50:47.627" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.630" level="INFO">Running command 'which tar
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.634" level="INFO">${output} = /usr/bin/tar</msg>
                <status status="PASS" starttime="20230831 19:50:47.628"
                  endtime="20230831 19:50:47.634" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.635"
                    endtime="20230831 19:50:47.635" />
                </kw>
                <msg timestamp="20230831 19:50:47.635" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.635" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.634"
                  endtime="20230831 19:50:47.635" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.636"
                  endtime="20230831 19:50:47.636" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.627"
                endtime="20230831 19:50:47.636" />
            </iter>
            <iter>
              <var name="${item}">gzip</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.637" level="INFO">${run_cmd} = which gzip</msg>
                <status status="PASS" starttime="20230831 19:50:47.636"
                  endtime="20230831 19:50:47.637" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.637" level="INFO">which gzip</msg>
                <status status="PASS" starttime="20230831 19:50:47.637"
                  endtime="20230831 19:50:47.637" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.639" level="INFO">Running command 'which gzip
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.642" level="INFO">${output} = /usr/bin/gzip</msg>
                <status status="PASS" starttime="20230831 19:50:47.637"
                  endtime="20230831 19:50:47.643" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.644"
                    endtime="20230831 19:50:47.644" />
                </kw>
                <msg timestamp="20230831 19:50:47.644" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.644" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.643"
                  endtime="20230831 19:50:47.644" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.644"
                  endtime="20230831 19:50:47.645" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.636"
                endtime="20230831 19:50:47.645" />
            </iter>
            <iter>
              <var name="${item}">find</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.645" level="INFO">${run_cmd} = which find</msg>
                <status status="PASS" starttime="20230831 19:50:47.645"
                  endtime="20230831 19:50:47.645" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.646" level="INFO">which find</msg>
                <status status="PASS" starttime="20230831 19:50:47.645"
                  endtime="20230831 19:50:47.646" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.648" level="INFO">Running command 'which find
                  2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.651" level="INFO">${output} = /usr/bin/find</msg>
                <status status="PASS" starttime="20230831 19:50:47.646"
                  endtime="20230831 19:50:47.651" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.652"
                    endtime="20230831 19:50:47.652" />
                </kw>
                <msg timestamp="20230831 19:50:47.653" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.653" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.652"
                  endtime="20230831 19:50:47.653" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.653"
                  endtime="20230831 19:50:47.653" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.645"
                endtime="20230831 19:50:47.653" />
            </iter>
            <iter>
              <var name="${item}">ssh-keygen</var>
              <kw name="Catenate" library="BuiltIn">
                <var>${run_cmd}</var>
                <arg>${command} ${item}</arg>
                <doc>Catenates the given items together and returns the resulted string.</doc>
                <msg timestamp="20230831 19:50:47.654" level="INFO">${run_cmd} = which ssh-keygen</msg>
                <status status="PASS" starttime="20230831 19:50:47.653"
                  endtime="20230831 19:50:47.654" />
              </kw>
              <kw name="Log" library="BuiltIn">
                <arg>${run_cmd}</arg>
                <doc>Logs the given message with the given level.</doc>
                <msg timestamp="20230831 19:50:47.654" level="INFO">which ssh-keygen</msg>
                <status status="PASS" starttime="20230831 19:50:47.654"
                  endtime="20230831 19:50:47.654" />
              </kw>
              <kw name="Run" library="OperatingSystem">
                <var>${output}</var>
                <arg>${run_cmd}</arg>
                <doc>Runs the given command in the system and returns the output.</doc>
                <msg timestamp="20230831 19:50:47.656" level="INFO">Running command 'which
                  ssh-keygen 2&gt;&amp;1'.</msg>
                <msg timestamp="20230831 19:50:47.660" level="INFO">${output} = /usr/bin/ssh-keygen</msg>
                <status status="PASS" starttime="20230831 19:50:47.654"
                  endtime="20230831 19:50:47.660" />
              </kw>
              <kw name="Run Keyword And Ignore Error" library="BuiltIn">
                <var>${status}</var>
                <var>${status_message}</var>
                <arg>Should Not Contain</arg>
                <arg>${output}</arg>
                <arg>${check_string}</arg>
                <doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
                <kw name="Should Not Contain" library="BuiltIn">
                  <arg>${output}</arg>
                  <arg>${check_string}</arg>
                  <doc>Fails if ``container`` contains ``item`` one or more times.</doc>
                  <status status="PASS" starttime="20230831 19:50:47.661"
                    endtime="20230831 19:50:47.661" />
                </kw>
                <msg timestamp="20230831 19:50:47.661" level="INFO">${status} = PASS</msg>
                <msg timestamp="20230831 19:50:47.661" level="INFO">${status_message} = None</msg>
                <status status="PASS" starttime="20230831 19:50:47.660"
                  endtime="20230831 19:50:47.661" />
              </kw>
              <kw name="Run Keyword If" library="BuiltIn">
                <arg>'${status}' != 'PASS'</arg>
                <arg>Append To List</arg>
                <arg>${errors_list}</arg>
                <arg>${item}</arg>
                <doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
                <status status="PASS" starttime="20230831 19:50:47.662"
                  endtime="20230831 19:50:47.662" />
              </kw>
              <status status="PASS" starttime="20230831 19:50:47.653"
                endtime="20230831 19:50:47.662" />
            </iter>
            <status status="PASS" starttime="20230831 19:50:47.626" endtime="20230831 19:50:47.662" />
          </for>
          <kw name="Should Be Empty" library="BuiltIn">
            <arg>${errors_list}</arg>
            <arg>Item(S) Not Found : ${errors_list}</arg>
            <doc>Verifies that the given item is empty.</doc>
            <msg timestamp="20230831 19:50:47.662" level="INFO">Length is 0</msg>
            <status status="PASS" starttime="20230831 19:50:47.662" endtime="20230831 19:50:47.662" />
          </kw>
          <status status="PASS" starttime="20230831 19:50:47.625" endtime="20230831 19:50:47.663" />
        </kw>
        <doc>Cisco NSO requires some utilities, this test verfies these binaries exist</doc>
        <tag>os</tag>
        <tag>packages</tag>
        <status status="PASS" starttime="20230831 19:50:47.624" endtime="20230831 19:50:47.663" />
      </test>
      <test id="s1-s3-t3" name="Verify Hostname is not set to localhost" line="43">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>hostnamectl hostname</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.666" level="INFO">Running command 'hostnamectl hostname
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.740" level="INFO">${output} = robot-dev-00</msg>
          <status status="PASS" starttime="20230831 19:50:47.664" endtime="20230831 19:50:47.741" />
        </kw>
        <kw name="Should Not Be Equal As Strings" library="BuiltIn">
          <arg>${output}</arg>
          <arg>localhost</arg>
          <doc>Fails if objects are equal after converting them to strings.</doc>
          <status status="PASS" starttime="20230831 19:50:47.741" endtime="20230831 19:50:47.742" />
        </kw>
        <doc>Hostname Should not be localhost</doc>
        <tag>dns</tag>
        <tag>os</tag>
        <status status="PASS" starttime="20230831 19:50:47.664" endtime="20230831 19:50:47.743" />
      </test>
      <test id="s1-s3-t4" name="Verify DNS servers are Configured" line="49">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>more /etc/resolv.conf</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.748" level="INFO">Running command 'more /etc/resolv.conf
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.751" level="INFO">${output} = # Generated by
            NetworkManager
            search localdomain
            nameserver 192.168.1.1
            nameserver 8.8.8.8</msg>
          <status status="PASS" starttime="20230831 19:50:47.745" endtime="20230831 19:50:47.751" />
        </kw>
        <for flavor="IN">
          <var>${dns_server}</var>
          <value>@{dns_servers}</value>
          <iter>
            <var name="${dns_server}">192.168.1.1</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${dns_server}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.753"
                endtime="20230831 19:50:47.753" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.753" endtime="20230831 19:50:47.753" />
          </iter>
          <iter>
            <var name="${dns_server}">8.8.8.8</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${dns_server}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.754"
                endtime="20230831 19:50:47.754" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.753" endtime="20230831 19:50:47.754" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:47.752" endtime="20230831 19:50:47.754" />
        </for>
        <doc>DNS Servers should be Configured</doc>
        <tag>dns</tag>
        <tag>os</tag>
        <status status="PASS" starttime="20230831 19:50:47.744" endtime="20230831 19:50:47.754" />
      </test>
      <test id="s1-s3-t5" name="Verify NTP servers are Configured" line="57">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>chronyc sources</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.757" level="INFO">Running command 'chronyc sources
            2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.785" level="INFO">${output} = MS Name/IP address Stratum
            Poll Reach LastRx Last sample
            ===============================================================================
            ^- ntp1.trans-ix.nl 2 10 ...</msg>
          <status status="PASS" starttime="20230831 19:50:47.755" endtime="20230831 19:50:47.785" />
        </kw>
        <for flavor="IN">
          <var>${ntp_server}</var>
          <value>@{ntp_servers}</value>
          <iter>
            <var name="${ntp_server}">ntp1.trans-ix.nl</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${ntp_server}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.786"
                endtime="20230831 19:50:47.787" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.786" endtime="20230831 19:50:47.787" />
          </iter>
          <iter>
            <var name="${ntp_server}">leontp2.office.panq.nl</var>
            <kw name="Should Contain" library="BuiltIn">
              <arg>${output}</arg>
              <arg>${ntp_server}</arg>
              <doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
              <status status="PASS" starttime="20230831 19:50:47.787"
                endtime="20230831 19:50:47.787" />
            </kw>
            <status status="PASS" starttime="20230831 19:50:47.787" endtime="20230831 19:50:47.787" />
          </iter>
          <status status="PASS" starttime="20230831 19:50:47.785" endtime="20230831 19:50:47.787" />
        </for>
        <doc>NTP Servers should be Configured</doc>
        <tag>ntp</tag>
        <tag>os</tag>
        <status status="PASS" starttime="20230831 19:50:47.755" endtime="20230831 19:50:47.788" />
      </test>
      <test id="s1-s3-t6" name="Verify NTP service is active" line="65">
        <kw name="Run" library="OperatingSystem">
          <var>${output}</var>
          <arg>timedatectl show | grep -Po '(?&lt;=NTPSynchronized=)[^,]+'</arg>
          <doc>Runs the given command in the system and returns the output.</doc>
          <msg timestamp="20230831 19:50:47.791" level="INFO">Running command 'timedatectl show |
            grep -Po '(?&lt;=NTPSynchronized=)[^,]+' 2&gt;&amp;1'.</msg>
          <msg timestamp="20230831 19:50:47.864" level="INFO">${output} = yes</msg>
          <status status="PASS" starttime="20230831 19:50:47.789" endtime="20230831 19:50:47.864" />
        </kw>
        <kw name="Should Be Equal As Strings" library="BuiltIn">
          <arg>${output}</arg>
          <arg>yes</arg>
          <doc>Fails if objects are unequal after converting them to strings.</doc>
          <status status="PASS" starttime="20230831 19:50:47.865" endtime="20230831 19:50:47.866" />
        </kw>
        <doc>Check that the NTP service is active</doc>
        <tag>ntp</tag>
        <tag>os</tag>
        <status status="PASS" starttime="20230831 19:50:47.788" endtime="20230831 19:50:47.866" />
      </test>
      <doc>The following tests verify the operating system configuration &amp; dependency packages
        are present in preperation for the Cisco NSO application testing. The checks include:
        - dependent packages are available
        - required utilities are present
        - hostname has been changed
        - DNS and NTP serviecs are configured and active

        Refer to the SCDP documentation to address any failed tests.</doc>
      <status status="PASS" starttime="20230831 19:50:47.504" endtime="20230831 19:50:47.867" />
    </suite>
    <status status="PASS" starttime="20230831 19:50:43.708" endtime="20230831 19:50:47.869" />
  </suite>
  <statistics>
    <total>
      <stat pass="20" fail="0" skip="0">All Tests</stat>
    </total>
    <tag>
      <stat pass="2" fail="0" skip="0">dns</stat>
      <stat pass="2" fail="0" skip="0">ntp</stat>
      <stat pass="6" fail="0" skip="0">os</stat>
      <stat pass="2" fail="0" skip="0">packages</stat>
      <stat pass="8" fail="0" skip="0">security</stat>
    </tag>
    <suite>
      <stat pass="20" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
      <stat pass="3" fail="0" skip="0" id="s1-s1" name="Ncs Env">Tests.Ncs Env</stat>
      <stat pass="11" fail="0" skip="0" id="s1-s2" name="Security">Tests.Security</stat>
      <stat pass="6" fail="0" skip="0" id="s1-s3" name="System">Tests.System</stat>
    </suite>
  </statistics>
  <errors>
</errors>
</robot>